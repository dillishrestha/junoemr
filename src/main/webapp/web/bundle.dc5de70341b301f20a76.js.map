{"version":3,"sources":["webpack:///./generated/api/ScheduleApi.ts","webpack:///./generated/api/AppointmentApi.ts","webpack:///./src/help/helpController.js","webpack:///./src/help/supportController.js","webpack:///./src/help/module.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/document/module.js","webpack:///./src/report/reportSHMentalHealthController.js","webpack:///./src/report/reportRegistrationIntakeController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportFollowUpIntakeController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/module.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/inbox/module.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/module.js","webpack:///./src/billing/billingController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/module.js","webpack:///./src/schedule/appointmentViewController.js","webpack:///./src/schedule/appointmentAddController.js","webpack:///./src/schedule/eventController.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/module.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./src/record/details/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/module.js","webpack:///./src/patientlist/patientListProgramController.js","webpack:///./src/patientlist/patientListDemographicSetController.js","webpack:///./src/patientlist/patientListConfigController.js","webpack:///./src/patientlist/patientListAppointmentListController.js","webpack:///./src/patientlist/patientListController.js","webpack:///./src/patientlist/patientListState.js","webpack:///./src/patientlist/module.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/module.js","webpack:///./src/patient/newPatientController.js","webpack:///./src/patient/module.js","webpack:///./src/layout/navBarController.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/module.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/angular-ui-calendar.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/scheduleService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/reportingService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/module.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/module.js","webpack:///./src/common/module.js","webpack:///./app.js","webpack:///./src/consults/common.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/common/util/util.js","webpack:///./src/common/displayMessages.js","webpack:///../webapp/share/javascript/Oscar.js"],"names":["ScheduleApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","fetchMonthlyData","year","month","providerNo","extraHttpRequestParams","localVarPath","replace","encodeURIComponent","String","headerParams","Object","assign","Error","httpRequestParams","method","url","params","headers","findExistAppointments","demographicNo","getAppointment","appointmentTo1","data","getAppointmentReasons","getAppointmentStatuses","getAppointmentTypes","getAppointmentsForDay","date","getAppointmentsForDay1","getCalendarAppointmentStatuses","getCalendarEvents","providerId","startDate","endDate","site","queryParameters","getScheduleGroups","getScheduleTemplateCodes","updateAppointmentStatus","id","updateAppointmentType","$inject","exports","AppointmentApi","addAppointment","calendarAppointment","deleteAppointment","appointmentNo","setNextStatus","updateAppointment","angular","module","controller","$scope","ospInfo","name","phone","contact","email","buildInfo","versionDisplayName","version","$uibModalInstance","qll","close","addQuickLink","qlForm","$valid","changePassword","console","log","$state","$uibModal","$filter","providerList","user","billingServiceTypes","loadedSettings","providerService","encounterForms","eforms","teams","groupNames","loadedApps","appService","$emit","pref","content","recentPatients","formGroupNames","value","label","i","length","push","billingServiceTypesMod","copy","splice","type","appointmentScreenForms","selected","formName","x","checked","appointmentScreenEforms","tabs","displayName","path","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","current","currentTab","tab","isActive","changeTab","go","save","newList","appointmentScreenQuickLinks","saveSettings","then","alert","cancel","selectEncounterForms","tmp","selectEForms","removeQuickLinks","openChangePasswordModal","window","open","openQuickLinkModal","templateUrl","result","selectedItem","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","getApps","errorMessage","securityService","me","$watch","getUser","newVal","openPopup","$log","Date","generateReport","includePastForms","searchProviders","val","search","searchTerm","active","results","resp","firstName","lastName","errors","updateProviderNo","item","model","p","age","response","region","startTime","endTime","reset","factory","$rootScope","location","load","msg","ReportNavigation","reports","iframeUrl","group","init","reportGroup","reportGroups","getReportGroups","reportSidebar","test","editDemographicSet","selectReport","getReports","groups","groupMap","key","report","currentReport","direct","width","height","total","currentPage","pageSize","startIndex","doImport","d","myUrl","remoteFacilityId","prevPage","nextPage","$q","$stateParams","NgTableParams","demographicsService","demographicReadAccess","clearParams","Juno","Common","Util","exists","term","hasRights","items","objectName","privilege","initTable","tableParams","page","count","sorting","Name","getData","deferred","defer","promiseArray","integratorResults","integrator","searchIntegrator","all","demographicSearchResults","resolve","promiseErrors","reject","promise","searchPatients","dobMoment","moment","isValid","format","reload","searchType","status","outofdomain","searchTermPlaceHolder","toggleParam","param","indexOf","loadRecord","hideNote","showIntegratorResults","$","$resource","$location","consultService","demographicService","summaryService","staticDataService","consult","initialize","hasRight","consultReadAccess","consultUpdateAccess","consultWriteAccess","referringDoctorList","toArray","faxList","sendToList","attachments","Consults","sortAttachmentDocs","getLetterheadList","letterheadList","letterhead","changeLetterhead","letterheadName","forEach","referringDoc","referringDoctor","demographic","extras","cellPhone","letterheadAddress","address","letterheadPhone","letterheadFax","fax","urgencies","getConsultUrgencies","statuses","getConsultResponseStatuses","hours","getHours","minutes","getMinutes","parseTime","time","tArray","split","appointmentHour","appointmentMinute","appointmentTime","consultChanged","$watchCollection","$on","event","confirm","preventDefault","writeToBox","boxId","summaryItem","boxData","addNewLine","clinicalInfo","concurrentProblems","currentMeds","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","invalidData","urgency","isUndefinedOrNull","setAppointmentTime","apptTime","now","set","openAttach","attachment","attachFiles","windowClass","backdrop","attachmentsChanged","consultSaving","saveResponse","body","list","p_page1","sendFax","p_urgency","toTrimmedString","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","reqId","faxNumber","printPreview","printWin","document","p_attachments","write","p_clinicName","p_responseDate","formatDate","responseDate","p_referralDate","referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","alternativePhone","p_patientBirthdate","dateOfBirth","p_patientSex","sexDesc","p_patientHealthCardNo","hin","ver","p_patientChartNo","chartNo","p_patientAddress","city","province","postal","p_appointmentDate","appointmentDate","p_appointmentTime","formatTime","p_reason","reasonForReferral","examination","impression","plan","allergies","$timeout","onRecordPage","lastResponse","team","numToReturn","parseInt","getAccessRights","getTeams","getActiveTeams","unshift","searchMrps","mrpNo","updateMrpNo","Number","mrpName","getProvider","doSearch","updateDemographicNo","demographicName","checkAll","checkNone","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","clear","ReferralDate","getSavedSearchParams","_params","perPage","myRegexp","match","exec","sortColumn","sortDirection","tmpSearch","searchResponses","meta","j","statusDescription","urgencyDescription","urgencyColor","hideSearchPatient","srhDemoNo","srhMrpNo","referralStartDate","referralEndDate","appointmentStartDate","appointmentEndDate","countPerPage","toPage","serviceList","getConsultRequestStatuses","error","getDemographic","demographicId","serviceId","specialists","spec","professionalSpecialist","oldVal","changeService","index","selectedIndex","getAllergies","patientWillBook","size","setESendEnabled","eSendEnabled","eDataUrl","trim","valid","saveRequest","finally","saveAndFax","noNull","eSend","eSendRequest","message","saveAndPrint","print","JSON","stringify","searchParams","searchDemoNo","setSearchParams","$current","srhStatus","srhTeam","srhRefStartDate","getTime","srhRefEndDate","srhApptStartDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","getSavedSearchVals","search1","searchRequests","refDate","toDate","setMonth","getMonth","outstanding","sortMode","popup","vheight","vwidth","varpage","winname","windowprops","opener","self","atth","patientName","attachedDocs","selectedAttachedDoc","consultId","getResponseAttachments","availableDocs","selectedAvailableDoc","openDoc","doc","attach","attached","detach","done","getRequestAttachments","removeIndex","map","documentNo","documentType","selectionIndex","reportByTemplateService","k2aService","k2aActive","k2aReports","K2A_URL","dtOptions","checkStatus","isK2AInit","getAllK2AReports","saveK2AReport","getK2AReportById","refreshParent","openK2AUrl","getK2AUrl","href","onunload","notifications","readMore","notif","getMoreNotification","focus","archive","ackNotification","getNotifications","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","clinicName","getPreventionRulesList","getCurrentPreventionRulesVersion","preventionRulesList","loadPreventionRuleById","prevSet","increasePrevListQuantity","initK2A","info","scheduleService","appointment","statusList","appointmentUpdate","appointmentWriteAccess","getStatus","description","providerName","editProvider","showProviderFormControl","provider","updateProvider","needsUpdate","cancelProviderUpdate","showAppointmentHistory","appointmentHistory","noShowAppointment","cancelAppointment","apptDate","types","duration","formattedName","reason","notes","resources","critical","getTypes","selectType","validate","t","showErrors","startTime12hWithMedian","messagesFactory","keyBinding","parentScope","editMode","eventUuid","schedule","eventData","timeInterval","lastEventLength","patientTypeahead","autocompleteValues","activeTemplateEvents","eventStatuses","eventStatusOptions","selectedEventStatus","defaultEventStatus","selectedSiteName","timepickerFormat","fieldValueMapping","displayMessages","initialized","working","demographicModel","fullName","hasPhoto","patientPhotoUrl","birthDate","healthNumber","ontarioVersionCode","phoneNumberPrimary","fillData","formatName","dob","getDateMomentFromComponents","dobYear","dobMonth","dobDay","formatMomentDate","uploadPhoto","file","hasPermission","momentStart","momentEnd","formatMomentTime","diff","setActiveTemplateEvents","hasOwnProperty","setSelectedEventStatus","eventStatusCode","initPatientAutocomplete","adjustEndDatetime","element","selectedCode","displayLetter","getDateAndTimeMoment","formattedTime","activeEvents","events","rendering","resourceId","uuid","start","getDatetimeNoTimezoneMoment","end","isBefore","isAfter","availabilityType","availabilityTypes","scheduleTemplateCode","lengthMinutes","newEventLength","add","updateLastEventLength","eventLength","validateForm","validateDateString","validateTimeString","has_errors","startDatetime","endDatetime","isSame","addStandardError","saveEvent","processSaveResults","deleteEvent","time_str","loadPatientFromTypeahead","newStartDate","oldStartDate","newStartTime","oldStartTime","newEndDate","oldEndDate","newEndTime","oldEndTime","loadedNewPhoto","preview_patient_image","new_photo","isWorking","isInitialized","isPatientSelected","clearPatient","patient","setEventLength","refetchEvents","field_errors","has_standard_errors","add_generic_fatal_error","del","dismiss","saveAndBill","openCreateInvoice","viewInvoices","open_view_invoices","createPatient","create_patient_dialog","calendar_api_adapter","openPatientDialog","onPatientModalSave","modify_patient","modify_patient_dialog","newDemographic","keyBindSettings","ctrl+enter","title","tooltip","callback_fn","target","ctrl+shift+enter","bindKeyGlobal","focusService","uiCalendarConfig","appointmentApi","_generated_api_AppointmentApi__WEBPACK_IMPORTED_MODULE_0__","scheduleApi","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_1__","calendarName","calendarLoading","uiConfig","uiConfigApplied","eventSources","selectedSchedule","selectedTimeInterval","cpCalendarControl","schedules","scheduleOptions","resourceOptions","siteOptions","defaultEventColor","defaultTimeInterval","timeIntervalOptions","defaultAutoRefreshMinutes","defaultCalendarView","rotateStatuses","resourceOptionHash","scheduleTemplates","sites","openingDialog","dialog","defaultDate","selectedDate","scheduleViewName","scheduleDefault","scheduleTimeInterval","scheduleAutoRefresh","scheduleAutoRefreshMinutes","calendar","defaultView","calendarViewName","loadAvailabilityTypes","loadEventStatuses","loadScheduleOptions","loadSiteOptions","loadDefaultSelections","loadSelectedSchedules","setCalendarResources","setEventSources","initEventsAutoRefresh","applyUiConfig","calendars","isSchedulingEnabled","hasSchedules","hasSites","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","isDefined","selectedSite","viewName","calendarEvents","timezone","callback","promise_array","loadScheduleEvents","results_array","Array","concat","apply","err","showTimeIntervals","changeView","view","reload_schedules","updateCalendarView","showLegend","event_statuses","availability_types","animation","closed","fullCalendar","changeDate","isAgendaView","getSelectedSchedule","selectedUuid","providerNos","isArray","loadSchedule","toString","selectedResources","buildSelectedResources","resultsArray","availabilities","relations","setCalendarLoading","isLoading","getLoadedSchedule","updateEvent","calEvent","timeIntervalMinutes","code","getSelectedTimeInterval","slotDuration","slotLabelInterval","minTime","getScheduleMinTime","maxTime","getScheduleMaxTime","scrollTime","subtract","rawResults","rotates","siteName","startDateString","settings","date_format","endDateString","moveEvent","delta","adjustStartTime","startMoment","endMoment","movedAppointment","formatMomentDateTimeNoTimezone","asMinutes","displayErrors","validationErrorArray","validationErrors","add_standard_error","add_field_error","event_uuid","schedule_uuid","demographics_patient_uuid","get_loaded_schedule","get_create_invoice_url","demographics_practitioner_uuid","window_scope","$window","getIconPath","icon","statusModifier","modifierString","rotateEventStatus","newStatus","color","getBillingLink","referralNoParameter","billingRdohip","billingRegion","billingForm","userProviderNo","getEncounterLink","userFirstName","userLastName","getRxLink","onEventRender","eventSiteHtml","eventSite","eventStatusHtml","eventStatus","eventStatusRotate","sortOrder","eventStatusModifier","escapeHtml","eventDetails","isBlank","find","html","onViewRender","css","afterRender","click","openCreateEventDialog","jsEvent","resource","scheduleUuid","display_name","modalSchedule","catch","res","editModeCallback","onSaveCallback","loadErrorLinkPatientFn","edit_mode","on_save_callback","load_error_link_patient_fn","openPatientDemographic","encType","openEditEventDialog","onEventClicked","is","onEventDrop","revertFunc","ui","datetime_no_timezone_format","onEventResize","onSiteChanged","onScheduleChanged","onTimeIntervalChanged","scheduleData","identifier","loadSites","getSites","out","siteId","bgColor","newValue","oldValue","refresh","clearInterval","isIntegerString","setInterval","nowIndicator","header","left","center","right","allDaySlot","slotLabelFormat","loading","selectable","select","eventClick","eventRender","viewRender","eventAfterAllRender","editable","eventDrop","eventResize","schedulerLicenseKey","tickler","ticklerNote","noteService","originalNote","note","saveTicklerNote","ticklerService","demographicSearch","template","serviceDateDate","serviceDateTime","suggestedTextId","priorities","timepicker","defaultTime","getTextSuggestions","textSuggestions","suggestedText","taskAssignedTo","priority","givenDate","givenTime","setHours","get","setMinutes","serviceDate","demo","taskAssignedToName","setSuggestedText","addMonthsFromNow","num","ticklerWriteAccess","ticklerUpdate","serviceDateInput","serviceTimeInput","showUpdates","showComments","showCommentFormControl","selectedStatus","newDate","finalVal","updateTaskAssignedTo","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","dp","tp","serviceTime","isNaN","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","updateDate","newComment","cancelCommentUpdate","saveChanges","postData","update","completeTickler","setCompleted","deleteTickler","setDeleted","printTickler","providers","ticklerAPI","ticklerReadAccess","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","getTicklerNote","getMe","editNote2","editor","noteId","observationDate","revision","printArea","input","tableName","tableId","uxService","getTrackerUrl","resizeIframe","iframe","h","contentWindow","scrollHeight","formService","currentFormList","currentForm","currentlistId","isUndefined","formlists","changeTo","listId","getAllFormsByHeading","debug","viewFormState","getElementById","hasChildNodes","removeChild","firstChild","rnd","Math","round","random","win","pymParent","pym","Parent","getListClass","getActiveFormClass","formId","keypress","altKey","currIdx","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","buildDate","day","dateEmpty","date3Valid","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","hcParts","phoneNum","defPhTitle","prefPhTitle","properties","$parent","recordCtrl","initDemographicVars","checkAccess","getBySecurityRole","doctors","nurses","midwives","getDemographicContacts","demoContacts","demoContactShow","demoContactPros","scrNotes","substring","lastIndexOf","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrPaperChartArchivedDate","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","waitingListNames","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","genders","getGenders","titles","getTitles","provinces","getProvinces","countries","getCountries","engFre","getEngFre","spokenlangs","getSpokenLanguages","rosterTermReasons","getRosterTerminationReasons","securityQuestions","getSecurityQuestions","rxInteractionLevels","getRxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","billregion","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","getStatusList","rosterStatusList","patientStatusList","calcAge","formatLastName","formatFirstName","setSwipeReady","validateHCSave","sin","effDate","hcRenewDate","rosterDate","rosterTerminationDate","patientStatusDate","dateJoined","onWaitingListSinceDate","canRead","cannotChange","checkAction","stopPropagation","onbeforeunload","toUpperCase","readyForSwipe","swipecardMsg","swipecard","healthCardHandler","keycode","swipeCardData","namePos","endNamePos","isNumber","healthCardUpdateDemographics","validateHC","hcType","hcTypeColor","lastNameColor","firstNameColor","hinColor","verColor","hcSex","sex","sexColor","dateParts","dobYearColor","dobMonthColor","dobDayColor","swipeDate","effDateColor","hcRenewDateColor","hinExpDate","HCValidation","responseDescription","responseCode","checkHin","checkHinVer","checkDate","charAt","checkYear","checkMonth","daysOfMonth","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","getFullYear","getDate","dateValid","isPostalComplete","isPostalValid","resetEditState","RegExp","checkEmail","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","n","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchName","searchReferralDocs","searchReferralDocsRefNo","searchRefNo","searchReferralDoctors","referralDoctors","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doSave","isUniqueHC","success","saving","newDemoExtras","updateDemographic","maxDaysOfMonth","s","demoContact","contactShow","role","sdm","ec","category","obj","formListId","adminAccess","adminEformAccess","hasAdminAccess","encounterFormlist","formGroups","getFormGroups","formOptions","favouriteGroup","getFavouriteFormGroup","getFormOptions","getCompletedEncounterForms","getSelectedEncounterForms","queryName","formValue","animate","scrollTop","maxheight","max","offsetHeight","style","isEmpty","currentEformGroup","setCurrentEFormGroup","mod","openFormFromGroups","formOption","opt","atleastOneItemSelected","extra","docIds","isChecked","getGroupListClass","grp","currentState","keyCode","saveSignNote","cancelNoteEdit","isFunction","clearChanges","$interval","action","diseaseRegistryService","quickLists","summaryCode","groupNotesForm","assignedCMIssues","encounterNote","position","annotation_attrib","getIssueQuickLists","addDxItem","issue","codingSystem","findDxIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","displayIssueId","issueCode","getIssueId","issueId","displayGroupNote","itemId","getIssueNote","editorNames","groupNoteExt","setAvailablePositions","removeEditingNoteFlag","itemExtra","availablePositions","changeNote","saveGroupNotes","cpp","isSigned","encounterType","encounterTime","assignedIssues","saveIssueNote","transitionTo","inherit","notify","removeGroupNoteIssue","unchecked","doSetEditingNoteFlag","setEditingNoteFlag","editingNoteId","itvSet","itvCheck","checkEditNoteNew","removeIssue","restoreIssue","archiveGroupNotes","archived","openRevisionHistory","searchIssues","assignIssue","getIssue","isSelected","addToDxRegistry","pageOptions","printType","dates","selectedWarning","atleastOneSelected","printToday","cancelPrint","sendToPhr","queryString","selectedList","join","ops","columnOne","modules","columnThree","selectedNotes","notelist","busy","noteFilter","currentFilter","onlyNotes","onlyMine","cannotAdd","openRx","demoNo","openAllergies","openPreventions","openAssessments","addMoreItems","getNotesFrom","editNote","editGroupNote","findGroupNote","gotoState","moduleList","summaryItems","k","currentEditNote","isNoteBeingEdited","noteFound","notecount","isRegularNote","rxAnnotation","eformData","encounterForm","invoice","setColor","border-left-color","showNoteHeader","showNote","deleted","getNoteHeader","noteObj","trackerUrl","toggleList","displaySize","showMoreItems","isSectionExpanded","isSectionEmpty","isUnsignedEncounterNote","getSummaryHeaders","fillItems","summaryLists","itemsToFill","getFullSummary","editGroupedNotes","viewEform","eFormId","viewDocument","documentId","itemArray","showPrintModal","toggleIsSelectedForPrint","zero","$localStorage","billingService","isNoteSaved","$storage","recordtabs2","fillMenu","menu","temp","currenttab2","isDefinedAndNotNull","state","demoId","timeout","saveUpdates","initNote","tmpSave","skipTmpSave","saveIntervalSeconds","totalSeconds","myVar","setTime","innerHTML","pad","valString","getCurrentTimerToggle","toggleTimer","hasClass","removeClass","addClass","pasteTimer","ed","toggleNote","getCurrentNote","saveNote","issueDescriptions","isInArray","saveSignVerifyNote","isVerified","getBillingRegion","getDefaultView","saveSignBillNote","dxCode","apptNo","apptProvider","apptStartTime","dt","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","displayWarning","noteEditorText","searchTemplates","templates","encounterTemplateName","insertTemplate","getTemplate","encounterTemplateValue","options","magicVal","noteToEdit","$broadcast","mediumNavItemFilter","inverse","filterValue","inArray","updateData","Content-Type","admissions","reportingService","getDemographicSetList","sets","config","patientListConfig","saveConfiguration","Navigation","patientListState","statusCodeMap","Map","dateOptions","showWeeks","getStatuses","getAppointmentStatusDescriptionByStatusCode","statusCode","getAppointmentStatusColourByStatusCode","colour","today","$event","opened","AddDays","noOfDays","switchDay","dateNew","formattedDate","changeApptList","changeApptDate","currenttab","tabItems","serviceMethod","getAppointments","patients","showFilter","addNewAppointment","viewAppointment","isScheduleActive","angularUtil","personaService","sidebar","goToRecord","inMobileView","hidePatientList","query","isMoreActive","currentmoretab","showPatientList","changeMoreTab","moreTabItemsIndex","filter","moreTabItems","tabItemIndex","getMoreTabClass","numberOfPages","nPages","ceil","changePage","pageNum","process","resultList","getRecentPatientList","recentPatientList","getPatientListConfig","numberOfApptstoShow","getTabItems","manageConfiguration","setPatientListConfig","Promise","service","prefs","dashboardPreferences","updateDashboardPreferences","messageService","inboxService","displayDate","k2aFeedActive","busyLoadingData","getDashboardPreferences","inboxTableParams","getDashboardItems","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","removeK2AComment","agreeId","agreeCount","disagree","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","postK2AComment","post","commentCount","comments","updateTicklers","creator","overdueOnly","totalTicklers","ticklers","arr","updateMessages","getUnread","totalMessages","messages","updateReports","inbox","totalInbox","startPoint","numberOfRows","getK2aFeed","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","parse","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","programService","submitDisabled","getPrograms","programs","admissionProgramId","ngModelContoller","isCorrectDate","demoRetVal","saveDemographic","ok","capName","unAckLabDocTotal","unreadMessageTotal","billRegion","searchRights","newDemographicRights","messageRights","getDashboardMenu","menus","dashboardMenu","getNavBar","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","getUnAckLabDocCount","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","new_value","isTypeaheadSearchQuery","moreResults","goToPatientSearch","searchQuery","goToPatientRecord","getUnreadCount","onPatientSearch","transition","newWindow","wname","qs","openNewWindow","openMessenger","changeProgram","programId","setCurrentProgram","smallNavItemFilter","setUser","directive","restrict","require","link","scope","attrs","ctrl","$formatters","pad_length","caZeroPad","$parsers","on","e","$parse","scrollHandler","resizeHandler","modelSetter","fileModel","bind","$apply","files","$compile","$eval","compileHtml","jsp","contents","$document","eventName","attribute","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","scrollLeft","update_search_results_footer","offset","top","ngModel","toolbar","container","image-tooltip","link-tooltip","theme","extraOptions","quill","extend","Quill","children","$render","source","getHTML","$setViewValue","setHTML","$viewValue","pagination","change_page_callback","mode","change_page","page_number","current_page","total_pages","expand_ellipsis","go_to_page_num","close_ellipsis","go_to_page","page_int","key_combo","key_bind_settings","hierarchy","parents","each","attributes","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","field_value_map","success_message","field_value_map_label_key","displayFieldErrors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","has_sub_errors","isString","isObject","error_link_has_function","error_link","error_links","execute_error_link_fn","should_display_field_errors","has_field_errors","attr","field_controllers","field","ignore","ignore_focus_field","form_nav","focus_field","helper","default_scope","true_text","false_text","true_value","false_value","resolve_template","default_link_function","default_controller","minute_step","picker_container","toggle_widget","minuteStep","icons","up","down","rows","max_characters","old_value","error_message","include_empty_option","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","change_fn","merge_title_messages","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","on_focus","open_date_picker","focus_fn","on_click","new_is_multi_date","on_focus_fn","input_box","caDatePickerId","dropdown","footer","replaceWith","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","ngModelController","text","tempValue","parseFloat","toFixed","currencyFilter","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","global_state","autocomplete","results_factory","min_length_zero_types","placeholder","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","ca_exclude_list","search_field","keys","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","input_placeholder","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","$item","$model","$label","create_on_not_found_fn","temp_model","on_change","build_model_object","on_blur","model_on_focus","blur_fn","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","in_list","ii","exclude_item","value_field","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","disabled","momentDate","constant","$locale","sources","extraEventSignature","calendarWatchEvent","noop","eventSerialId","eventFingerprint","_id","extraSignature","isMoment","unix","allDay","className","sourceSerialId","sourceEventsSerialId","sourceFingerprint","fp","__id","allEvents","arraySources","srcLen","extEvent","eI","changeWatcher","arraySource","tokenFn","getTokens","token","el","array","subtractAsSets","a","b","inB","subscribe","onArrayChanged","newTokens","oldTokens","replacedTokens","removedTokens","removedToken","newToken","onRemoved","onChanged","addedTokens","onAdded","applyChanges","getFullCalendarConfig","calendarSettings","functionToWrap","$root","$$phase","arguments","args","getLocaleConfig","fullCalendarConfig","lang","useNgLocale","tValues","r","dtf","DATETIME_FORMATS","monthNames","MONTH","monthNamesShort","SHORTMONTH","dayNames","DAY","dayNamesShort","SHORTDAY","enabled","elm","sourcesChanged","eventSourcesWatcher","eventsWatcher","destroyCalendar","initCalendar","stick","clientEvents","clientEvent","uiCalendar","localeFullCalendarConfig","options2","o","elem","draggable","axis","containment","__webpack_require__","resizable","handles","minHeight","minWidth","maxWidth","innerWidth","maxHeight","innerHeight","evt","newHeight","showIcon","disableInput","openDatepicker","typeaheadHelper","defaultTypeaheadScope","initTypeahead","forceSelection","findMatches","formatMatchSelection","typeaheadLabel","optionsTemplateUrl","quickSearch","matches","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","searchField","typeaheadModelOptions","debounce","default","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","onSelect","onBlur","onChange","createDummySelection","onSearch","onAdd","slice","wordwise","tail","substr","lastspace","years","months","days","junoHttp","apiPath","ServiceHelper","configHeaders","searchSpecialists","itemsToReturn","getDisplayProperties","ticklerIds","limit","getRiskFactors","langs","reasons","questions","levels","u","configHeadersWithCache","listOfItems","isAllowedAccessToPatientRecord","hasOneOfPermissions","permission_array","permission","getSchedulesForCalendar","results_hash","meta_hash","results_object","has_results","error_type","util","equals","per_page","searchText","searchMode","getByType","getSettings","healthCardNo","versionCode","numberToReturn","noteConfig","getNoteExt","ticklerId","noteUUID","userId","transferObj","commentItem","commentId","global_settings","interface_preferences","scheduler_license_key","heading","getAllEncounterForms","getAllEForms","getGroupNames","selector","first_form_input","first","first_error_input","opts","first_alert","scroll_offset","form_group_class","label_size","input_size","text_length","hide_label_colon","hint","tab_index","warning_message","depends_on_field","depends_on_value","hide","base_default_template","title_array","title_string","$element","$attrs","errorsHash","DisplayMessages","getQuickLists","disease","issueToSend","jsonData","listType","contactCategory","put","getRequest","requestId","followUpDate","getNewRequest","request","getResponse","responseId","getReferralPathwaysByService","serviceName","getUniqueServiceTypes","errorsz","init_autocomplete_values","autocomplete_values","formatDemographic","full_name","birth_date","health_number","phone_number_primary","http_util","request_hash","success_function","errors_function","progress","request_result","call","mergeHash","$stateProvider","$urlRouterProvider","otherwise","dynamic","arrayOfDocs","sort","doc1","doc2","Accept","cache","datetime_format","time_format","dayofweek_format","object","pad0","getDateMoment","date_string","utc","getTimeMoment","time_string","year_string","month_string","day_string","dateString","timeString","datetime_string","fieldDisplayName","required","line","mssg","currDate","baseHash","toMerge","objectArrayIndexOf","property","len","string","str","entityMap","&","<",">","\"","'","/","messages_hash","display_field_errors","field_errors_label_map","field_errors_label_map_key","extra_info","saving_message","force_field_error_arrays","merge","display_messages","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","standard_errors","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","prepend_label","has_one_of_field_error","has_field_error","has_indexed_field_error","field_error_string","concat_string","remove_field_error","has_error_links","add_error_link","out_field_errors","merge_messages","merge_display_messages","standard_infos","windowName","popup2","w","getElementsByTagName","clientWidth","clientHeight","winRefs","resizeTo","confirmNGo","showHideItem","display","showItem","hideItem","validDate","validDateText","completeRawDate","delimiter","dateArray","dateObject","validDateFieldsByClass","parentEle","datefields","getElementsByClassName","getMouseCoords","posx","posy","pageX","pageY","clientX","clientY","documentElement","master","chkList","oscarLog","grabEnter","callb","which","eval","isNumericInt","sText","chara","isNumeric","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","arrReturnElements","oAttributeValue","getAttribute"],"mappings":"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","file":"bundle.dc5de70341b301f20a76.js","sourcesContent":["/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param year \n     * @param month \n     * @param providerNo \n     */\n    public fetchMonthlyData (year: number, month: number, providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/fetchMonthly/{providerNo}/{year}/{month}'\n            .replace('{' + 'year' + '}', encodeURIComponent(String(year)))\n            .replace('{' + 'month' + '}', encodeURIComponent(String(month)))\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'year' is not null or undefined\n        if (year === null || year === undefined) {\n            throw new Error('Required parameter year was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'month' is not null or undefined\n        if (month === null || month === undefined) {\n            throw new Error('Required parameter month was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling fetchMonthlyData.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param demographicNo \n     */\n    public findExistAppointments (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling findExistAppointments.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public getAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/getAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param date \n     */\n    public getAppointmentsForDay (providerNo: string, date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/{providerNo}/day/{date}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay1 (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerId \n     * @param startDate \n     * @param endDate \n     * @param site \n     */\n    public getCalendarEvents (providerId: number, startDate?: string, endDate?: string, site?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarEvent> {\n        const localVarPath = this.basePath + '/schedule/calendar/{providerId}'\n            .replace('{' + 'providerId' + '}', encodeURIComponent(String(providerId)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerId' is not null or undefined\n        if (providerId === null || providerId === undefined) {\n            throw new Error('Required parameter providerId was null or undefined when calling getCalendarEvents.');\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentStatus (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateStatus'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentType (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateType'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentType.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class AppointmentApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public addAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public deleteAppointment (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseInteger> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling deleteAppointment.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'DELETE',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public setNextStatus (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/rotate_status'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling setNextStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public updateAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t$scope.ospInfo = {\n\t\t\tname: 'OscarHost.ca',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Oscarhost Support',\n\t\t\temail: 'support@oscarhost.ca',\n\t\t\turl: 'https://help.oscarhost.ca'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: '15-Beta',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Help', []);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function(data)\n\t\t\t{\n\t\t\t\talert('saved');\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Report').controller('Report.ReportSHMentalHealthController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run sh mental health report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/StreetHealthIntakeReportAction.do?startDate=' + startDate;\n\t\t\twindow.open(url, 'report_sh', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportRegistrationIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run registration intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=quick&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_registration_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportFollowUpIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run follow up intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=indepth&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_followup_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: new Date(),\n\t\t\t\tendDate: new Date(),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'General Forms',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/ClientManager.do?method=getGeneralFormsReport'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Registration Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_registration_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Follow-up Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_followup_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Activity Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/Reports/ProgramActivityReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UCF Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../SurveyManager.do?method=reportForm'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SH Mental Health Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_sh_mental_health.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\t\t\t}\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, ((page - 1) * count), count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.content);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === \"DOB\")\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = 'Name';\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: \"all\",\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === \"DOB\") ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Inbox', []);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tcontroller.consult = consult;\n\t\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\n\t\t\t\t\t//set default letterhead\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//show referringDoctor in list\n\t\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t\t{\n\t\t\t\tif(consult.referringDoctor !== null)\n\t\t\t\t{\n\t\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set patient cell phone\n\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1px;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ', ' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\t//set demographic info\n\t\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t\t//set cell phone\n\t\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//set specialist list\n\t\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tangular.forEach(controller.specialists, function(spec)\n\t\t\t{\n\t\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = 0;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\t\t\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar valid = true;\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (controller.invalidData())\n\t\t\t{\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif(valid)\n\t\t\t{\n\t\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\t\tcontroller.setAppointmentTime();\n\n\t\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.id == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(results.id);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(\n\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.setESendEnabled();\n\t\t\t\t\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\t\t\t\t\tcontroller.consultChanged = 0; //reset change count\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdeferred.reject(\"Invalid\");\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\")\n\t\t\t{\n\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$location.path(\"/consults\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndFax = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tvar demographicNo = consult.demographicId;\n\t\t\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\n\t\t\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.print(reqId);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.print = function print(reqId)\n\t\t{\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + reqId + \"&demographicNo=\" + consult.demographicId);\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.content[x].demographicNo,\n\t\t\t\t\t\t\tname: response.content[x].lastName + ', ' + response.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar refDate = moment(consult.referralDate).toDate();\n\t\t\t\t\t\t\t\trefDate.setMonth(refDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= refDate)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.outstanding = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('AdminCtrl', ['$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","angular.module('Schedule').controller('Schedule.AppointmentViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'appointment',\n\t'statusList',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tappointment,\n\t\tstatusList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.me = me;\n\t\tcontroller.appointment = appointment;\n\t\tcontroller.statusList = statusList.content;\n\t\tcontroller.appointmentUpdate = {};\n\n\t\tcontroller.appointmentWriteAccess = false;\n\n\t\tcontroller.getStatus = function getStatus(status)\n\t\t{\n\n\t\t\tfor (var x = 0; x < controller.statusList.length; x++)\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(controller.statusList[x]));\n\t\t\t\tif (controller.statusList[x].status == status)\n\t\t\t\t{\n\t\t\t\t\treturn controller.statusList[x].description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn status;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.deleteAppointment = function deleteAppointment()\n\t\t{\n\t\t\tif (confirm('Are you sure you want to delete this appointment?'))\n\t\t\t{\n\t\t\t\tscheduleService.deleteAppointment(controller.appointment.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\n\n\t\tcontroller.editProvider = function editProvider()\n\t\t{\n\t\t\tcontroller.showProviderFormControl = true;\n\t\t\tcontroller.appointmentUpdate.providerNo = controller.appointment.providerNo;\n\t\t\tcontroller.appointmentUpdate.providerName = controller.appointment.provider.lastName + \",\" + controller.appointment.provider.lastName;\n\t\t};\n\n\t\tcontroller.updateProvider = function updateProvider(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t\tcontroller.showProviderFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelProviderUpdate = function cancelProviderUpdate()\n\t\t{\n\t\t\tcontroller.appointmentUpdate.providerNo = null;\n\t\t\tcontroller.appointmentUpdate.providerName = null;\n\n\t\t\tcontroller.showProviderFormControl = false;\n\n\t\t};\n\n\t\tcontroller.showAppointmentHistory = function showAppointmentHistory()\n\t\t{\n\t\t\tscheduleService.appointmentHistory(controller.appointment.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\talert(JSON.stringify(results));\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.noShowAppointment = function noShowAppointment()\n\t\t{\n\t\t\tscheduleService.noShowAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancelAppointment = function cancelAppointment()\n\t\t{\n\t\t\tscheduleService.cancelAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t}\n]);","angular.module('Schedule').controller('Schedule.AppointmentAddController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'demographicsService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'apptDate',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tapptDate)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.types = [];\n\n\t\tcontroller.urgencies = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: 'Normal'\n\t\t},\n\t\t{\n\t\t\tvalue: 'critical',\n\t\t\tlabel: 'Critical'\n\t\t}];\n\n\t\tcontroller.me = me;\n\n\t\tcontroller.appointment = {\n\t\t\tstatus: 't',\n\t\t\tappointmentDate: $filter('date')(apptDate, 'yyyy-MM-dd'),\n\t\t\tstartTime: '09:00 AM',\n\t\t\ttype: '',\n\t\t\tduration: 15,\n\t\t\tproviderName: me.formattedName,\n\t\t\tproviderNo: me.providerNo,\n\t\t\treason: '',\n\t\t\tnotes: '',\n\t\t\tlocation: '',\n\t\t\tresources: '',\n\t\t\tcritical: ''\n\t\t};\n\n\t\tscheduleService.getTypes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.types = results.types;\n\t\t\t\tcontroller.types.unshift(\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tduration: 15,\n\t\t\t\t\tlocation: '',\n\t\t\t\t\tnotes: '',\n\t\t\t\t\treason: '',\n\t\t\t\t\tresources: ''\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.selectType = function selectType()\n\t\t{\n\t\t\tvar type = null;\n\n\t\t\tfor (var x = 0; x < controller.types.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.types[x].name == controller.appointment.type)\n\t\t\t\t{\n\t\t\t\t\ttype = controller.types[x];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type != null)\n\t\t\t{\n\t\t\t\tcontroller.appointment.duration = type.duration;\n\t\t\t\tcontroller.appointment.location = type.location;\n\t\t\t\tcontroller.appointment.notes = type.notes;\n\t\t\t\tcontroller.appointment.reason = type.reason;\n\t\t\t\tcontroller.appointment.resources = type.resources;\n\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.validate = function validate()\n\t\t{\n\t\t\tvar t = controller.appointment;\n\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.providerNo == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a provider');\n\t\t\t}\n\t\t\tif (t.startTime == null || t.startTime.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\t\t\tif (t.duration == null || t.duration.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar x = {};\n\t\t\tx.status = controller.appointment.status;\n\t\t\tx.appointmentDate = controller.appointment.appointmentDate;\n\t\t\tx.startTime12hWithMedian = controller.appointment.startTime;\n\t\t\tx.type = controller.appointment.type;\n\t\t\tx.duration = controller.appointment.duration;\n\t\t\tx.providerNo = controller.appointment.providerNo;\n\t\t\tx.reason = controller.appointment.reason;\n\t\t\tx.notes = controller.appointment.notes;\n\t\t\tx.location = controller.appointment.location;\n\t\t\tx.resources = controller.appointment.resources;\n\t\t\tx.urgency = controller.appointment.critical;\n\t\t\tx.demographicNo = controller.appointment.demographicNo;\n\n\t\t\t// TODO: make sure this works with the updated backend service (response changed)\n\t\t\tconsole.log(JSON.stringify(x));\n\t\t\tscheduleService.addAppointment(x).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\n\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.appointment.demographicNo = results.demographicNo;\n\t\t\t\t\tcontroller.appointment.demographicName = '';\n\t\t\t\t\tcontroller.appointment.demographic = results;\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\t}\n]);","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nangular.module('Schedule').controller('Schedule.EventController', [\n\n\t\t'$scope',\n\t\t'$q',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModal',\n\t\t'$uibModalInstance',\n\n\t\t'errorsService',\n\n\t\t'demographicService',\n\t\t'securityService',\n\t\t'keyBinding',\n\t\t'focus',\n\t\t'type', 'parentScope', 'label', 'editMode', 'data',\n\n\tfunction (\n\t\t$scope, $q, $timeout, $state, $uibModal, $uibModalInstance,\n\n\t\tmessagesFactory,\n\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tkeyBinding,\n\t\tfocus,\n\t\ttype, parentScope, label, editMode, data\n\t)\n{\n\t$scope.parentScope = parentScope;\n\n\n\t//=========================================================================\n\t// Access Control\n\t//=========================================================================/\n\n\n\t//=========================================================================\n\t// Local scope variables\n\t//=========================================================================/\n\n\t$scope.label = label;\n\t$scope.editMode = editMode;\n\n\t$scope.keyBinding = keyBinding;\n\t$scope.eventUuid = null;\n\n\t$scope.schedule = data.schedule;\n\n\t$scope.eventData = {\n\t\tstartDate: null,\n\t\tstartTime: null,\n\t\tendDate: null,\n\t\tendTime: null,\n\t\treason: null,\n\t\tnotes: null\n\t};\n\n\t$scope.timeInterval = data.timeInterval;\n\n\t$scope.lastEventLength = null;\n\n\t$scope.patientTypeahead = {};\n\t$scope.autocompleteValues = {};\n\n\t$scope.activeTemplateEvents = [];\n\n\t$scope.eventStatuses = $scope.parentScope.eventStatuses;\n\t$scope.eventStatusOptions = [];\n\t$scope.selectedEventStatus = null;\n\t$scope.defaultEventStatus = null;\n\n\t$scope.selectedSiteName = null;\n\n\t$scope.timepickerFormat = \"h:mm A\";\n\n\t$scope.fieldValueMapping = {\n\t\tstartDate: 'Start Date',\n\t\tstartTime: 'Start Time',\n\t\tendDate: 'End Date',\n\t\tendTime: 'End Time'\n\t};\n\t$scope.displayMessages = messagesFactory.factory();\n\n\t$scope.initialized = false;\n\t$scope.working = false;\n\n\t$scope.demographicModel = {\n\t\tdemographicNo: null,\n\t\tfullName: null,\n\t\thasPhoto: true,\n\t\tpatientPhotoUrl: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\tdata: {\n\t\t\tbirthDate: null,\n\t\t\thealthNumber: null,\n\t\t\tontarioVersionCode: null,\n\t\t\tphoneNumberPrimary: null\n\t\t},\n\t\tclear: function clear()\n\t\t{\n\t\t\tthis.demographicNo = null;\n\t\t\tthis.fullName = null;\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\tthis.data.birthDate = null;\n\t\t\tthis.data.healthNumber = null;\n\t\t\tthis.data.ontarioVersionCode = null;\n\t\t\tthis.data.phoneNumberPrimary = null;\n\t\t},\n\t\tfillData: function fillData(data)\n\t\t{\n\t\t\tthis.demographicNo = data.demographicNo;\n\t\t\tthis.fullName = Juno.Common.Util.formatName(data.firstName, data.lastName);\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=' + (data.demographicNo? data.demographicNo: 0);\n\n\t\t\tvar dateOfBirth = null;\n\t\t\tif(Juno.Common.Util.exists(data.dob))\n\t\t\t{\n\t\t\t\t// XXX: Perhaps put this in util?  Is this date format common for juno?\n\t\t\t\tdateOfBirth = moment(data.dob, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdateOfBirth = Juno.Common.Util.getDateMomentFromComponents(\n\t\t\t\t\tdata.dobYear, data.dobMonth, data.dobDay);\n\t\t\t}\n\t\t\tthis.data.birthDate = Juno.Common.Util.formatMomentDate(dateOfBirth);\n\n\n\t\t\tthis.data.healthNumber = data.hin;\n\t\t\t// XXX: no version code when loaded from autocomplete?  Does that matter?\n\t\t\tthis.data.ontarioVersionCode = data.ver;\n\t\t\tthis.data.phoneNumberPrimary = data.phone;\n\t\t},\n\t\tuploadPhoto: function uploadPhoto(file){}\n\t};\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t{\n\t\t\t$timeout(function ()\n\t\t\t{\n\t\t\t\t$scope.cancel();\n\t\t\t});\n\t\t}\n\n\t\t$scope.demographicModel.clear();\n\n\t\tvar momentStart = data.startTime;\n\t\tvar momentEnd = data.endTime;\n\n\t\t$scope.eventData.startTime = Juno.Common.Util.formatMomentTime(momentStart, $scope.timepickerFormat);\n\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t$scope.eventData.startDate = Juno.Common.Util.formatMomentDate(momentStart);\n\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\n\t\t$scope.lastEventLength = momentEnd.diff(momentStart, 'minutes');\n\n\t\t// maintain a list of the 'active' templates based on start time\n\t\t$scope.setActiveTemplateEvents();\n\n\t\t//$scope.eventStatusOptions.push(\"\");\n\t\tfor(var key in $scope.eventStatuses)\n\t\t{\n\t\t\tif($scope.eventStatuses.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t$scope.eventStatusOptions.push($scope.eventStatuses[key]);\n\t\t\t}\n\t\t}\n\t\t$scope.defaultEventStatus = data.defaultEventStatus;\n\t\t$scope.setSelectedEventStatus(data.eventData.eventStatusCode);\n\n\n\t\tif(editMode)\n\t\t{\n\t\t\t$scope.eventUuid = data.eventData.appointmentNo;\n\t\t\t$scope.eventData.reason = data.eventData.reason;\n\t\t\t$scope.eventData.notes = data.eventData.notes;\n\n\t\t\t// either load the patient data and init the autocomplete\n\t\t\t// or ensure the patient model is clear\n\t\t\t$scope.initPatientAutocomplete(data.eventData.demographicNo).then(function() {\n\t\t\t\t$scope.initialized = true;\n\t\t\t});\n\t\t\t$scope.selectedSiteName = data.eventData.site;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create mode: adjust the end date (if needed)\n\t\t\t// and clear the patient model\n\t\t\t$scope.adjustEndDatetime();\n\t\t\t$scope.demographicModel.clear();\n\n\t\t\t// autofocus the patient field\n\t\t\tfocus.element(\"#input-patient\");\n\n\t\t\t$scope.initialized = true;\n\t\t}\n\t};\n\n\t$scope.initPatientAutocomplete = function initPatientAutocomplete(demographicNo)\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tif(Juno.Common.Util.exists(demographicNo) && demographicNo != 0)\n\t\t{\n\t\t\tdemographicService.getDemographic(demographicNo).then(function(data)\n\t\t\t{\n\t\t\t\t$scope.patientTypeahead = data;\n\t\t\t\tdeferred.resolve();\n\t\t\t},\n\t\t\tfunction(errors)\n\t\t\t{\n\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t$scope.demographicModel.clear();\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.demographicModel.clear();\n\t\t\tdeferred.resolve();\n\t\t}\n\n\t\treturn deferred.promise;\n\t};\n\n\n\t//=========================================================================\n\t// Private methods\n\t//=========================================================================/\n\n\t$scope.setSelectedEventStatus = function setSelectedEventStatus(selectedCode)\n\t{\n\t\tvar eventStatusCode = $scope.defaultEventStatus;\n\n\t\tif(Juno.Common.Util.exists(selectedCode))\n\t\t{\n\t\t\teventStatusCode = selectedCode;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists(eventStatusCode) ||\n\t\t\t!Juno.Common.Util.exists($scope.eventStatuses[eventStatusCode]))\n\t\t{\n\t\t\t// if not set or found just pick the first one\n\t\t\teventStatusCode = $scope.eventStatusOptions[0].displayLetter;\n\t\t}\n\n\t\t$scope.selectedEventStatus = $scope.eventStatuses[eventStatusCode];\n\t};\n\n\t// Make a list of the types of appointments available for this appointment\n\t$scope.setActiveTemplateEvents = function setActiveTemplateEvents()\n\t{\n\t\t// Get templates that happen during the time period\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tvar activeEvents = [];\n\n\t\t// Loop through the events for this day\n\t\tfor(var i = 0; i < data.events.length; i++)\n\t\t{\n\t\t\tif(data.events[i].rendering != \"background\" || data.events[i].resourceId != $scope.schedule.uuid)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar event = angular.copy(data.events[i]);\n\n\t\t\t// if start time is before event end time or if end time is after event start\n\t\t\tevent.start = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\tevent.end = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\n\t\t\tif(momentStart.isValid() && momentEnd.isValid() &&\n\t\t\t\tevent.start.isValid() && event.end.isValid() &&\n\t\t\t\tmomentStart.isBefore(event.end) && momentEnd.isAfter(event.start))\n\t\t\t{\n\t\t\t\tevent.availabilityType = data.availabilityTypes[event.scheduleTemplateCode];\n\t\t\t\tactiveEvents.push(event);\n\t\t\t}\n\t\t}\n\n\t\t$scope.activeTemplateEvents = activeEvents;\n\t};\n\n\t$scope.adjustEndDatetime = function adjustEndDatetime(lengthMinutes)\n\t{\n\t\t// adjusts the end time to the specified length or\n\t\t// adjusts to keep the event length the same as it last was\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tif(momentStart.isValid())\n\t\t{\n\t\t\tvar newEventLength = Juno.Common.Util.exists(lengthMinutes) ?\n\t\t\t\tlengthMinutes : $scope.lastEventLength;\n\n\t\t\tvar momentEnd = momentStart.add(newEventLength, 'minutes');\n\n\t\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\t\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t}\n\t};\n\n\t$scope.updateLastEventLength = function updateLastEventLength()\n\t{\n\t\t// saves the current event length, if the date/times are valid\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tif(momentStart.isValid() && momentEnd.isValid())\n\t\t{\n\t\t\tvar eventLength = momentEnd.diff(momentStart, 'minutes');\n\t\t\tif(eventLength > 0)\n\t\t\t{\n\t\t\t\t$scope.lastEventLength = eventLength;\n\t\t\t}\n\t\t}\n\t};\n\n\t$scope.validateForm = function validateForm()\n\t{\n\t\t$scope.displayMessages.clear();\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.startDate,\n\t\t\t$scope.displayMessages, 'startDate', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.startTime),\n\t\t\t$scope.displayMessages, 'startTime', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.endDate,\n\t\t\t$scope.displayMessages, 'endDate', 'End Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.endTime),\n\t\t\t$scope.displayMessages, 'endTime', 'End Time', true);\n\n\t\t// if all the date/time fields look good, validate range\n\t\tif(!$scope.displayMessages.has_errors())\n\t\t{\n\t\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\t\tif(endDatetime.isSame(startDatetime) ||\n\t\t\t\tendDatetime.isBefore(startDatetime))\n\t\t\t{\n\t\t\t\t$scope.displayMessages.addStandardError(\"The appointment must end after it starts\");\n\t\t\t}\n\t\t}\n\n\t\treturn !$scope.displayMessages.has_errors();\n\t};\n\n\t$scope.saveEvent = function saveEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\n\t\tparentScope.saveEvent(\n\t\t\teditMode,\n\t\t\t{\n\t\t\t\tappointmentNo: $scope.eventUuid,\n\t\t\t\tstartTime: startDatetime,\n\t\t\t\tendTime: endDatetime,\n\t\t\t\treason: $scope.eventData.reason,\n\t\t\t\tnotes: $scope.eventData.notes,\n\t\t\t\tproviderNo: $scope.schedule.uuid,\n\t\t\t\teventStatusCode: $scope.selectedEventStatus.displayLetter,\n\t\t\t\tdemographicNo: $scope.demographicModel.demographicNo,\n\t\t\t\tsite: $scope.selectedSiteName\n\t\t\t}\n\t\t).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tif(parentScope.processSaveResults(results, $scope.displayMessages))\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (results)\n\t\t\t{\n\t\t\t\tparentScope.processSaveResults(results, $scope.displayMessages);\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.deleteEvent = function deleteEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tparentScope.deleteEvent($scope.eventUuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.formattedTime = function formattedTime(time_str)\n\t{\n\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\treturn time_str.replace(/ /g,'');\n\t};\n\n\t$scope.loadPatientFromTypeahead = function loadPatientFromTypeahead(patientTypeahead)\n\t{\n\t\t$scope.demographicModel.fillData(patientTypeahead);\n\t};\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t// when the start date is changed,\n\t// update the active template events\n\t$scope.$watch('startDate', function(newStartDate, oldStartDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartDate !== oldStartDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the start time is changed,\n\t// update the active template events and adjust the end time\n\t$scope.$watch('startTime', function(newStartTime, oldStartTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartTime !== oldStartTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the end date is changed, track the event length\n\t$scope.$watch('endDate', function(newEndDate, oldEndDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndDate !== oldEndDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t// when the end time is changed, track the event length\n\t$scope.$watch('endTime', function(newEndTime, oldEndTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndTime !== oldEndTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t$scope.$watch('patientTypeahead', function()\n\t{\n\t\t$scope.loadPatientFromTypeahead($scope.patientTypeahead);\n\t});\n\n\t//=========================================================================\n\t// Public methods\n\t//=========================================================================/\n\n\t$scope.loadedNewPhoto = function loadedNewPhoto(file, event)\n\t{\n\t\tif(file == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.preview_patient_image = file;\n\t\t$scope.new_photo = true;\n\t\t$scope.demographicModel.hasPhoto = true;\n\t\t$scope.demographicModel.uploadPhoto(file);\n\t};\n\n\t$scope.isWorking = function isWorking()\n\t{\n\t\treturn $scope.working;\n\t};\n\n\t$scope.isInitialized = function isInitialized()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.isPatientSelected = function isPatientSelected()\n\t{\n\t\treturn Juno.Common.Util.exists($scope.demographicModel.demographicNo);\n\t};\n\n\t$scope.clearPatient = function clearPatient()\n\t{\n\t\t$scope.autocompleteValues.patient = null;\n\t\t$scope.demographicModel.clear();\n\t};\n\n\t$scope.setEventLength = function setEventLength(minutes)\n\t{\n\t\t$scope.adjustEndDatetime(minutes);\n\t};\n\n\t$scope.save = function save()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t\t\t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\tconsole.log($scope.displayMessages.field_errors()['location']);\n\t\t\tif(!$scope.displayMessages.has_standard_errors())\n\t\t\t{\n\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t}\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.del = function del()\n\t{\n\t\t$scope.working = true;\n\t\t$scope.deleteEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.cancel = function cancel()\n\t{\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\n\t$scope.saveAndBill = function saveAndBill()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t  \t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t\t$scope.parentScope.openCreateInvoice(\n\t\t\t\t$scope.eventUuid,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.demographicModel.demographicNo);\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.viewInvoices = function viewInvoices()\n\t{\n\t\t$scope.parentScope.open_view_invoices($scope.eventUuid);\n\t};\n\n\t$scope.createPatient = function createPatient()\n\t{\n\t\tvar editModeCallback = function() { return false; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.create_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t$scope.modify_patient = function modify_patient()\n\t{\n\t\tif(!$scope.demographicModel.demographicNo)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar editModeCallback = function() { return true; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.modify_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t// for callback on create/edit patient modal\n\t$scope.onPatientModalSave = function onPatientModalSave(demographicNo)\n\t{\n\t\t// load the newly created/updated patient\n\t\t$scope.demographicModel.demographicNo = demographicNo;\n\t\t$scope.initPatientAutocomplete();\n\t};\n\n\t$scope.searchPatients = function searchPatients(term)\n\t{\n\t\tvar search = {\n\t\t\ttype: 'Name',\n\t\t\t'term': term,\n\t\t\tstatus: 'active',\n\t\t\tintegrator: false,\n\t\t\toutofdomain: true\n\t\t};\n\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: Juno.Common.Util.formatName(\n\t\t\t\t\t\t\t\tresults.content[x].firstName, results.content[x].lastName)\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t};\n\n\t$scope.newDemographic = function newDemographic(size)\n\t{\n\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\tmodalInstance.result.then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\n\t\t\t\t$scope.initPatientAutocomplete(results.demographicNo)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tconsole.log($('#myModal'));\n\t};\n\n\n\t//=========================================================================\n\t//  Key Bindings\n\t//=========================================================================\n\n\t$scope.keyBindSettings =\n\t{\n\t\t\"ctrl+enter\": {\n\t\t\ttitle: 'Ctrl+Enter',\n\t\t\ttooltip: 'Save',\n\t\t\tdescription: 'Save appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.save();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t},\n\t\t\"ctrl+shift+enter\": {\n\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\ttooltip: 'Save And Bill',\n\t\t\tdescription: 'Save and bill for appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.saveAndBill();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t}\n\t};\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+enter\", $scope.keyBindSettings[\"ctrl+enter\"]);\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+shift+enter\", $scope.keyBindSettings[\"ctrl+shift+enter\"]);\n}]);\n","\nimport {AppointmentApi} from '../../generated/api/AppointmentApi';\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\n\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\t'$stateParams',\n\t'$q',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$uibModal',\n\t'$state',\n\t'focusService',\n\t'scheduleService',\n\t'securityService',\n\t'uiCalendarConfig',\n\n\tfunction(\n\t\t$scope,\n\t\t$stateParams,\n\t\t$q,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$uibModal,\n\t\t$state,\n\t\tfocusService,\n\t\tscheduleService,\n\t\tsecurityService,\n\t\tuiCalendarConfig\n\t)\n\t{\n\t\t//var controller = this;\n\n\t\t// XXX: put this address somewhere else\n\t\t$scope.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'http://localhost:9090/ws/rs');\n\n\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'http://localhost:9090/ws/rs');\n\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.calendarName = 'cpCalendar';\n\t\t$scope.initialized = false;\n\t\t$scope.calendarLoading = false;\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.uiConfigApplied = {};\n\t\t$scope.eventSources = [];\n\t\t$scope.selectedSchedule = null;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.selectedTimeInterval = null;\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in\n\t\t// this object.\n\t\t$scope.cpCalendarControl = {};\n\n\n\t\t// Parameters from directive controller\n\n\n\t\t$scope.schedules = [];\n\t\t$scope.scheduleOptions = [];\n\t\t$scope.resourceOptions = [];\n\t\t$scope.siteOptions = [];\n\t\t$scope.defaultEventColor = \"#333\";\n\t\t$scope.defaultTimeInterval = '00:15:00';\n\t\t$scope.timeIntervalOptions =\n\t\t\t['00:05:00','00:10:00','00:15:00','00:30:00'];\n\t\t$scope.selectedTimeInterval = $scope.defaultTimeInterval;\n\t\t$scope.defaultAutoRefreshMinutes = 3;\n\t\t$scope.defaultCalendarView = 'agendaWeek';\n\t\t$scope.eventStatuses = {};\n\t\t$scope.rotateStatuses = [];\n\t\t$scope.availabilityTypes = {};\n\t\t$scope.resourceOptionHash = {};\n\t\t$scope.events = [];\n\t\t$scope.scheduleTemplates = {};\n\t\t$scope.sites = {};\n\n\t\t$scope.openingDialog = false;\n\t\t$scope.dialog = null;\n\n\n\t\t// Global State parameters\n\t\t$scope.defaultDate = null;\n\t\t$scope.selectedDate = null;\n\t\t$scope.scheduleViewName = null;\n\t\t$scope.scheduleDefault = null;\n\t\t$scope.scheduleTimeInterval = null;\n\t\t$scope.scheduleAutoRefresh = null;\n\t\t$scope.scheduleAutoRefreshMinutes = null;\n\n\t\t$scope.scheduleService = scheduleService;\n\n\n\t\t$scope.init = function init()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\n\t\t\t// XXX: loadScheduleTemplates seems to not be used\n\n\t\t\t//{\n\t\t\t\t$scope.loadAvailabilityTypes().then(function()\n\t\t\t\t{\n\t\t\t\t\t$scope.loadEventStatuses().then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadScheduleOptions().then(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.loadSiteOptions().then(function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.loadDefaultSelections();\n\n\t\t\t\t\t\t\t\t$scope.loadSelectedSchedules().then(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$scope.setCalendarResources();\n\n\t\t\t\t\t\t\t\t\t$scope.setEventSources();\n\n\t\t\t\t\t\t\t\t\t$scope.initEventsAutoRefresh();\n\n\t\t\t\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t\t\t\t\tconsole.log(\"-- Calendar Initialized ----------------------------\");\n\t\t\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t//});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.calendar = function calendar()\n\t\t{\n\t\t\treturn uiCalendarConfig.calendars[$scope.calendarName];\n\t\t};\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.initialized;\n\t\t};\n\n\t\t$scope.hasSchedules = function hasSchedules()\n\t\t{\n\t\t\treturn $scope.schedules.length > 0;\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.siteOptions.length > 0;\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.scheduleOptions;\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\tif(!angular.isDefined($scope.selectedSite) || $scope.selectedSite === null)\n\t\t\t{\n\t\t\t\t$scope.selectedSite = $scope.siteOptions[0];\n\t\t\t}\n\n\t\t\treturn $scope.siteOptions;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\tvar viewName = $scope.scheduleViewName;\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.defaultCalendarView;\n\t\t\t}\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t$scope.calendarEvents = function calendarEvents(start, end, timezone, callback)\n\t\t{\n\t\t\t// load the events for each of the loaded schedules\n\t\t\tvar promise_array = [];\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tpromise_array.push(\n\t\t\t\t\t$scope.loadScheduleEvents(\n\t\t\t\t\t\t$scope.schedules[i].uuid, $scope.selectedSiteName, start, end));\n\t\t\t}\n\n\t\t\t// once all the events are loaded, concat them together and callback\n\t\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\t$scope.events = Array.prototype.concat.apply([], results_array);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.viewName() !== 'month';\n\t\t};\n\n\t\t$scope.changeView = function changeView(view)\n\t\t{\n\t\t\t// if switching to or from resourceDay view, need to update schedules\n\t\t\tvar reload_schedules = false;\n\t\t\tif(view === 'resourceDay' || $scope.scheduleViewName === 'resourceDay')\n\t\t\t{\n\t\t\t\treload_schedules = true;\n\t\t\t}\n\n\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t$scope.scheduleViewName = view;\n\n\t\t\tif(reload_schedules)\n\t\t\t{\n\t\t\t\t$scope.loadSelectedSchedules().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.setCalendarResources();\n\t\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.updateCalendarView();\n\t\t\t}\n\t\t};\n\n\t\t$scope.showLegend = function showLegend()\n\t\t{\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar data = {\n\t\t\t\tevent_statuses: $scope.eventStatuses,\n\t\t\t\tavailability_types: $scope.availabilityTypes\n\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcontroller: 'Schedule.LegendController',\n\t\t\t\ttemplateUrl: 'code/schedule/legend.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tdata: function() { return data }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// when the dialog closes clear the variable\n\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t$scope.dialog = null;\n\t\t\t});\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.refetchEvents = function refetchEvents()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t\t};\n\n\t\t$scope.changeDate = function changeDate(date)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('gotoDate', date);\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.viewName() != 'resourceDay')\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tvar selectedUuid = null;\n\t\t\tif($scope.scheduleDefault)\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.scheduleDefault;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.loadSelectedSchedules = function loadSelectedSchedules()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar promiseArray = [];\n\n\t\t\tif(\n\t\t\t\tJuno.Common.Util.exists($scope.selectedSchedule.providerNos) &&\n\t\t\t\tangular.isArray($scope.selectedSchedule.providerNos)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// TODO: this is really gross and I don't like it\n\t\t\t\t// Potentially put this in the calendarApiAdapter\n\t\t\t\tangular.forEach($scope.selectedSchedule.providerNos, function(providerNo)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(providerNo.toString()));\n\t\t\t\t});\n\n\t\t\t\tif($scope.selectedSchedule.providerNos.length > 1)\n\t\t\t\t{\n\t\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t\t$scope.selectedResources = $scope.buildSelectedResources($scope.selectedSchedule.providerNos);\n\t\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"resourceDay\";\n\n\t\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t\t$scope.scheduleViewName = 'resourceDay';\n\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"agendaWeek\";\n\t\t\t\t\t$scope.scheduleViewName = 'agendaWeek';\n\t\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t\t}\n\n\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t}\n\t\t\telse if(\n\t\t\t\t$scope.viewName() !== 'resourceDay' &&\n\t\t\t\t$scope.selectedSchedule !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tpromiseArray.push(\n\t\t\t\t\t$scope.loadSchedule($scope.selectedSchedule.uuid));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tangular.forEach($scope.selectedResources, function(selected)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(selected.uuid));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Loop through the schedules added above and add them to the schedule list.\n\t\t\t$q.all(promiseArray).then(\n\t\t\t\tfunction success(resultsArray)\n\t\t\t\t{\n\t\t\t\t\t$scope.schedules = [];\n\t\t\t\t\tfor(var i = 0; i < resultsArray.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.schedules[i] = resultsArray[i].data;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(resultsArray);\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('errors');\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSchedule = function loadSchedule(providerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// TODO: fill up availabilities and relations, or figure out how to show that info without them\n\t\t\tvar schedule = {\n\t\t\t\tuuid: providerId,\n\t\t\t\tavailabilities: [], // TODO: figure out if these have a Juno equivalent, I don't think\n\t\t\t\t\t\t\t\t\t// TODO: they do.  They are things like holidays and vacation days\n\t\t\t\trelations: [],\n\t\t\t\tevents: []\n\t\t\t};\n\n\t\t\tdeferred.resolve({data: schedule});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.updateCalendarView = function updateCalendarView()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t// This gets the view name, but if it's resourceDay, it will get agendaDay.\n\t\t// TODO Not sure why this works this way.  Maybe it uses it to get a day of events for each\n\t\t//      resource in the resource list?\n\t\t$scope.calendarViewName = function calendarViewName()\n\t\t{\n\t\t\tvar view = $scope.viewName();\n\t\t\tif(view == 'resourceDay')\n\t\t\t{\n\t\t\t\tview = 'agendaDay';\n\t\t\t}\n\t\t\treturn view;\n\t\t};\n\n\t\t$scope.setCalendarLoading = function setCalendarLoading(isLoading)\n\t\t{\n\t\t\t$scope.calendarLoading = isLoading;\n\t\t};\n\n\t\t$scope.getLoadedSchedule = function getLoadedSchedule(uuid)\n\t\t{\n\t\t\tvar schedule = null;\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tif($scope.schedules[i].uuid === uuid)\n\t\t\t\t{\n\t\t\t\t\tschedule = $scope.schedules[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schedule;\n\t\t};\n\n\t\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t\t$scope.buildSelectedResources = function buildSelectedResources(providerNos)\n\t\t{\n\t\t\tvar selectedResources = [];\n\n\t\t\tfor(var i = 0; i < providerNos.length; i++)\n\t\t\t{\n\t\t\t\tselectedResources.push($scope.resourceOptionHash[providerNos[i]]);\n\t\t\t}\n\n\t\t\treturn selectedResources;\n\t\t};\n\n\t\t$scope.setCalendarResources = function setCalendarResources()\n\t\t{\n\t\t\tif($scope.viewName() === 'resourceDay')\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t}\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.setEventSources = function setEventSources()\n\t\t{\n\t\t\t$scope.eventSources.push($scope.calendarEvents);\n\t\t};\n\n\t\t$scope.updateEvent = function updateEvent(calEvent)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('updateEvent', calEvent);\n\t\t};\n\n\t\t$scope.timeIntervalMinutes = function timeIntervalMinutes()\n\t\t{\n\t\t\treturn parseInt($scope.selectedTimeInterval.split(\":\")[1]);\n\t\t};\n\n\t\t$scope.loadAvailabilityTypes = function loadAvailabilityTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar availabilityTypes = {};\n\n\t\t\tscheduleService.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\t\tavailabilityTypes[result.code] = angular.copy(result);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.availabilityTypes = availabilityTypes;\n\t\t\t\t\tdeferred.resolve(availabilityTypes);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadDefaultSelections = function loadDefaultSelections()\n\t\t{\n\t\t\t$scope.selectedSchedule = $scope.getSelectedSchedule($scope.scheduleOptions);\n\n\t\t\t//$scope.selectedResources = $scope.getSelectedResources($scope.resourceOptions);\n\n\t\t\t$scope.selectedTimeInterval = $scope.getSelectedTimeInterval(\n\t\t\t\t$scope.timeIntervalOptions, $scope.defaultTimeInterval);\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.uiConfig.calendar.minTime = $scope.getScheduleMinTime();\n\t\t\t$scope.uiConfig.calendar.maxTime = $scope.getScheduleMaxTime();\n\n\t\t\t// scroll so that one hour ago is the top of the calendar\n\t\t\t$scope.uiConfig.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t\t};\n\n\t\t$scope.getSelectedTimeInterval = function getSelectedTimeInterval(\n\t\t\ttimeIntervalOptions, defaultTimeInterval)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default\n\n\t\t\tvar selectedTimeInterval = null;\n\n\t\t\tvar timeInterval = $scope.scheduleTimeInterval;\n\t\t\tif(timeInterval === null)\n\t\t\t{\n\t\t\t\ttimeInterval = $scope.scheduleTimeInterval;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(timeInterval))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < timeIntervalOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(timeInterval === timeIntervalOptions[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedTimeInterval = timeIntervalOptions[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(selectedTimeInterval === null)\n\t\t\t{\n\t\t\t\treturn defaultTimeInterval;\n\t\t\t}\n\n\t\t\treturn selectedTimeInterval;\n\t\t};\n\n\t\t$scope.getScheduleMinTime = function getScheduleMinTime()\n\t\t{\n\t\t\t// restrict day view if user preferences are set\n\n\t\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\t\treturn \"08:00\";\n\t\t};\n\n\t\t$scope.getScheduleMaxTime = function getScheduleMaxTime()\n\t\t{\n\t\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;*/\n\t\t\treturn \"20:00\";\n\t\t};\n\n\t\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t\t// $scope.event_statuses - a table to look up a status by uuid.\n\t\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t\t$scope.loadEventStatuses = function loadEventStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.eventStatuses = {};\n\t\t\t$scope.rotateStatuses = [];\n\n\t\t\t$scope.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t\t$scope.eventStatuses[result.displayLetter] = result;\n\t\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.rotateStatuses.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadScheduleEvents = function loadScheduleEvents(providerId, siteName, start, end)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t\t// the end time to convert to the correct date.\n\t\t\tvar startDateString = start.format(Juno.Common.Util.settings.date_format);\n\t\t\tvar endDateString = end.subtract(1, 'seconds').format(Juno.Common.Util.settings.date_format);\n\n\t\t\t$scope.scheduleApi.getCalendarEvents(\n\t\t\t\tproviderId,\n\t\t\t\tstartDateString,\n\t\t\t\tendDateString,\n\t\t\t\tsiteName\n\t\t\t).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t},\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.saveEvent = function saveEvent(editMode, calendarAppointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif(editMode)\n\t\t\t{\n\t\t\t\tthis.appointmentApi.updateAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.appointmentApi.addAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.moveEvent = function moveEvent(appointment, delta, adjustStartTime)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.startTime);\n\t\t\tvar endMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.endTime);\n\n\t\t\tvar movedAppointment = angular.copy(appointment);\n\n\t\t\tif(adjustStartTime)\n\t\t\t{\n\t\t\t\tmovedAppointment.startTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(startMoment.add(delta.asMinutes(), 'minutes'));\n\t\t\t}\n\t\t\tmovedAppointment.endTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(endMoment.add(delta.asMinutes(), 'minutes'));\n\n\t\t\t$scope.saveEvent(true, movedAppointment).then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(data.body);\n\t\t\t\t},\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(data.body);\n\t\t\t\t}\n\t\t\t);\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Read the implementation-specific results and return a calendar-compatible object.\n\t\t$scope.processSaveResults = function processSaveResults(results, displayErrors)\n\t\t{\n\t\t\tvar status = (results || {}).status;\n\n\t\t\tif(status == 'SUCCESS')\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar errorMessage = ((results || {}).error || {}).message;\n\t\t\tvar validationErrorArray = ((results || {}).error || {}).validationErrors;\n\n\t\t\tif(Array.isArray(validationErrorArray))\n\t\t\t{\n\t\t\t\tdisplayErrors.add_standard_error(errorMessage);\n\t\t\t\t//for(var error in validationErrorArray)\n\t\t\t\tfor(var i = 0; i < validationErrorArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar error = validationErrorArray[i];\n\t\t\t\t\tdisplayErrors.add_field_error(error.path, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.deleteEvent = function deleteEvent(appointmentNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.appointmentApi.deleteAppointment(appointmentNo).then(\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\n\t\t\t\t},\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.openCreateInvoice = function openCreateInvoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t\t{\n\t\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\n\t\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\t\twindow.window_scope = $scope;\n\t\t\t$window.open(url, '_blank');\n\t\t};\n\n\t\t$scope.getIconPath = function getIconPath(icon, statusModifier)\n\t\t{\n\t\t\tif(!Juno.Common.Util.exists(icon))\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tvar modifierString = \"\";\n\n\t\t\tif(Juno.Common.Util.exists(statusModifier))\n\t\t\t{\n\t\t\t\tmodifierString = statusModifier;\n\t\t\t}\n\n\t\t\treturn \"../images/\" + modifierString + icon;\n\t\t};\n\n\t\t$scope.rotateEventStatus = function rotateEventStatus(calEvent)\n\t\t{\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointmentNo = calEvent.data.appointmentNo;\n\n\t\t\t$scope.appointmentApi.setNextStatus(appointmentNo).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar newStatus = response.data.body;\n\n\t\t\t\t\tcalEvent.color = $scope.eventStatuses[newStatus].color;\n\t\t\t\t\tcalEvent.data.eventStatusCode = newStatus;\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t},\n\t\t\t\tfunction failure(response)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.getBillingLink = function getBillingLink(calEvent)\n\t\t{\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar referralNoParameter = \"\";\n\t\t\tif(calEvent.data.billingRdohip)\n\t\t\t{\n\t\t\t\treferralNoParameter = \"&referral_no_1=\" + encodeURIComponent(calEvent.data.billingRdohip);\n\t\t\t}\n\n\t\t\treturn \"../billing.do\" +\n\t\t\t\t\"?billRegion=\" + encodeURIComponent(calEvent.data.billingRegion) +\n\t\t\t\t\"&billForm=\" + encodeURIComponent(calEvent.data.billingForm) +\n\t\t\t\t\"&hotclick=\" +\n\t\t\t\t\"&appointment_no=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographic_name=\" + encodeURIComponent(calEvent.data.demographicName) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&demographic_no=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&user_no=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointment_date=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&start_time=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&bNewForm=1\" + referralNoParameter;\n\t\t};\n\n\t\t$scope.getEncounterLink = function getEncounterLink(calEvent)\n\t\t{\n\t\t\t// XXX: Perhaps link to the new encounter page?  Put in an option to choose new or old.\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\treturn \"../oscarEncounter/IncomingEncounter.do\" +\n\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointmentNo=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&curProviderNo=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&reason=\" + encodeURIComponent(calEvent.data.reason) +\n\t\t\t\t\"&encType=\" + encodeURIComponent(\"face to face encounter with client\") +\n\n\t\t\t\t\"&userName=\" + encodeURIComponent(calEvent.data.userFirstName + \" \" + calEvent.data.userLastName) +\n\t\t\t\t\"&curDate=\" + encodeURIComponent(Juno.Common.Util.formatMomentDate(moment())) +\n\n\t\t\t\t\"&appointmentDate=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&startTime=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo);\n\t\t};\n\n\t\t$scope.getRxLink = function getRxLink(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\t\treturn \"../oscarRx/choosePatient.do\" +\n\t\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo);\n\t\t\t}\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Event Handlers\n\t\t//=========================================================================/\n\n\t\t$scope.onEventRender = function onEventRender(event, element, view)\n\t\t{\n\t\t\tif(event.rendering !== 'background')\n\t\t\t{\n\t\t\t\tvar eventSiteHtml = '';\n\t\t\t\tvar eventSite = $scope.sites[event.data.site];\n\n\t\t\t\tif(Juno.Common.Util.exists(eventSite))\n\t\t\t\t{\n\t\t\t\t\teventSiteHtml += \"<span style='background-color: \" + eventSite.color + \"'>&nbsp;</span>\"\n\t\t\t\t}\n\n\n\t\t\t\tvar eventStatusHtml = '';\n\t\t\t\tvar eventStatus =\n\t\t\t\t\t$scope.eventStatuses[event.data.eventStatusCode];\n\t\t\t\tvar eventStatusRotate = Juno.Common.Util.exists(eventStatus.sortOrder);\n\n\t\t\t\tif(Juno.Common.Util.exists(eventStatus) && Juno.Common.Util.exists(eventStatus.icon) &&\n\t\t\t\t\tJuno.Common.Util.exists(event) && Juno.Common.Util.exists(event.data))\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml += \"<img class='event-status\";\n\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += ' rotate';\n\t\t\t\t\t}\n\t\t\t\t\teventStatusHtml += \"' src='\" + $scope.getIconPath(eventStatus.icon, event.data.eventStatusModifier) + \"' />\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml = '<span class=\"event-status';\n\t\t\t\t\tif(Juno.Common.Util.exists(eventStatus))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teventStatusHtml += ' rotate ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\teventStatusHtml += '\"' + ' title=\"' + Juno.Common.Util.escapeHtml(eventStatus.name) + '\">' +\n\t\t\t\t\t\t\tJuno.Common.Util.escapeHtml(eventStatus.displayLetter) + '</span>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += '\" title=\"Unknown\">?</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar eventEncounterHtml = '<span class=\"event-encounter\" title=\"Open Encounter\">E</span>';\n\n\t\t\t\tvar eventInvoiceHtml = '<span class=\"event-invoice\" title=\"Create Invoice\">B</span>';\n\n\t\t\t\tvar eventDemographicHtml = '<span class=\"event-demographic\" title=\"View Patient\">M</span>';\n\n\t\t\t\tvar eventRxHtml = '<span class=\"event-rx\" title=\"View Prescription\">Rx</span>';\n\n\t\t\t\tvar eventDetails = \"\";\n\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.demographicName))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.demographicName);\n\t\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t\t{\n\t\t\t\t\t\teventDetails += \" (\" + Juno.Common.Util.escapeHtml(event.data.reason) + \")\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.reason);\n\t\t\t\t}\n\n\t\t\t\t$(element).find('.fc-content').html(eventSiteHtml + eventStatusHtml + eventEncounterHtml +\n\t\t\t\t\teventInvoiceHtml + eventDemographicHtml + eventRxHtml + eventDetails);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onViewRender = function onViewRender()\n\t\t{\n\t\t\tif($scope.isInitialized() && $scope.calendar())\n\t\t\t{\n\t\t\t\t$scope.selectedDate = moment(Juno.Common.Util.formatMomentDate(\n\t\t\t\t\tmoment($scope.calendar().fullCalendar('getDate'))));\n\t\t\t}\n\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$(\"#ca-calendar\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t};\n\n\t\t$scope.afterRender = function afterRender()\n\t\t{\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$('.fc-agendaDay-button').click(function()\n\t\t\t{\n\t\t\t\t$(\"#schedule_container\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t\t});\n\t\t};\n\n\t\t$scope.openCreateEventDialog = function openCreateEventDialog(\n\t\t\tstart, end, jsEvent, view, resource)\n\t\t{\n\t\t\t// XXX: share as much code as possible with edit event\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = null;\n\t\t\tvar displayName = \"\";\n\t\t\tif(Juno.Common.Util.exists(resource))\n\t\t\t{\n\t\t\t\tscheduleUuid = resource.id;\n\t\t\t\tdisplayName = resource.display_name;\n\t\t\t}\n\t\t\telse if($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\tscheduleUuid = $scope.selectedSchedule.uuid;\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: start,\n\t\t\t\t\tendTime: end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tscheduleTemplates: $scope.scheduleTemplates,\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: {}\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return false }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t// XXX: make this work\n\t\t$scope.openPatientDialog = function openPatientDialog(editModeCallback, onSaveCallback,\n\t\t\tloadErrorLinkPatientFn)\n\t\t{\n\t\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\t\treturn this.$uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tedit_mode: editModeCallback,\n\t\t\t\t\ton_save_callback: onSaveCallback,\n\t\t\t\t\tload_error_link_patient_fn: loadErrorLinkPatientFn\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$scope.openPatientDemographic = function openPatientDemographic(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: calEvent.data.demographicNo\n\t\t\t\t};\n\n\t\t\t\tif (angular.isDefined(calEvent.data.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = calEvent.data.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\t\t\t\t}\n\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t$scope.openEditEventDialog = function openEditEventDialog(calEvent)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_edit') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = calEvent.resourceId;\n\t\t\tvar displayName = calEvent.data.demographicName;\n\n\t\t\tif(displayName == null)\n\t\t\t{\n\t\t\t\tdisplayName = '';\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: calEvent.start,\n\t\t\t\t\tendTime: calEvent.end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: calEvent.data\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return true }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.onEventClicked = function onEventClicked(calEvent, jsEvent, view)\n\t\t{\n\t\t\tif($(jsEvent.target).is(\".event-status.rotate\"))\n\t\t\t{\n\t\t\t\t$scope.rotateEventStatus(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-encounter\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getEncounterLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-invoice\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getBillingLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-demographic\"))\n\t\t\t{\n\t\t\t\t$scope.openPatientDemographic(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-rx\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getRxLink(calEvent));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.openEditEventDialog(calEvent);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventDrop = function onEventDrop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was dragged and dropped on the calendar:\n\t\t\t// load then update the start and end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, true).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.onEventResize = function onEventResize(calEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t\t// load then update the end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, false).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t//$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\treturn $scope.onScheduleChanged();\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\tvar selectedSchedule = $scope.selectedSchedule;\n\t\t\tvar selectedSiteName = $scope.selectedSiteName;\n\n\t\t\tif(!Juno.Common.Util.exists(selectedSchedule))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedSiteName))\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = selectedSiteName;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = null;\n\t\t\t}\n\n\t\t\t// reload the schedule and then events data, triggering a rerender\n\t\t\t$scope.loadSelectedSchedules().then($scope.refetchEvents);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.scheduleTimeInterval = $scope.selectedTimeInterval;\n\n\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Init methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t\t// $scope.resourceOptionHash - table to look up schedule information by providerNo.  This is\n\t\t//                               used to create the resource view headers.\n\t\t$scope.loadScheduleOptions = function loadScheduleOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getScheduleGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\n\t\t\t\t\t\t$scope.scheduleOptions.push(scheduleData);\n\n\t\t\t\t\t\t// Get the possible resources by inferring that the group is a provider\n\t\t\t\t\t\t// by checking if the array has one entry and matches the identifier\n\t\t\t\t\t\t// Also uses fields specific to Juno.\n\t\t\t\t\t\t// TODO: CHANGE THIS!!\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\tangular.isArray(scheduleData.providerNos) &&\n\t\t\t\t\t\t\tscheduleData.providerNos.length == 1 &&\n\t\t\t\t\t\t\tscheduleData.providerNos[0].toString() == scheduleData.identifier\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar providerNo = scheduleData.providerNos[0];\n\n\t\t\t\t\t\t\t$scope.resourceOptionHash[providerNo] = {\n\t\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t\t'uuid': providerNo,\n\t\t\t\t\t\t\t\t'name': providerNo,\n\t\t\t\t\t\t\t\t'title': scheduleData.name,\n\t\t\t\t\t\t\t\t'display_name': scheduleData.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Load the list of available sites from the API.  Sets the following:\n\t\t// $scope.sites - a table to lookup a site's info by name\n\t\t// $scope.site_options - the options for the site selection dropdown\n\t\t$scope.loadSiteOptions = function loadSiteOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.loadSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.sites = {};\n\t\t\t\t\t$scope.siteOptions = [];\n\t\t\t\t\tif(angular.isArray(results) && results.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t\t$scope.siteOptions = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\t\tdisplay_name: \"All\",\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\t$scope.siteOptions = $scope.siteOptions.concat(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSites = function loadSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif(angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(out);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.$watch('scheduleService.selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\t// avoid running first time this fires during initialization\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\t$scope.changeDate(newValue);\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Config Array\n\t\t//=========================================================================/\n\n\t\t$scope.applyUiConfig = function applyUiConfig(uiConfig)\n\t\t{\n\t\t\t$scope.uiConfigApplied = angular.copy(uiConfig);\n\t\t};\n\n\t\t$scope.initEventsAutoRefresh = function initEventsAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = $scope.scheduleAutoRefresh;\n\t\t\tif(refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = $scope.scheduleAutoRefreshMinutes;\n\t\t\tif(!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = $scope.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif(minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\t$scope.scheduleAutoRefresh = setInterval($scope.refetchEvents, minutes * 60 * 1000);\n\t\t\t}\n\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Any changes to this array need to be applied by calling applyUiConfig()\n\t\t$scope.uiConfig = {\n\t\t\tcalendar: {\n\t\t\t\theight: 'auto', //$scope.get_schedule_height(),\n\t\t\t\tnowIndicator: true,\n\t\t\t\theader: {\n\t\t\t\t\tleft: 'prev,next today title',\n\t\t\t\t\tcenter: '',\n\t\t\t\t\tright: ''\n\t\t\t\t},\n\n\t\t\t\tallDaySlot: false,\n\n\t\t\t\tdefaultView: null,\n\t\t\t\tdefaultDate: $scope.defaultDate,\n\t\t\t\tslotDuration: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelInterval: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelFormat: 'h:mma',\n\n\t\t\t\tloading: $scope.setCalendarLoading,\n\n\t\t\t\tselectable: true,\n\t\t\t\tselect: $scope.openCreateEventDialog,\n\t\t\t\teventClick: $scope.onEventClicked,\n\t\t\t\teventRender: $scope.onEventRender,\n\t\t\t\tviewRender: $scope.onViewRender,\n\t\t\t\teventAfterAllRender: $scope.afterRender,\n\n\t\t\t\teditable: true,\n\t\t\t\teventDrop: $scope.onEventDrop,\n\t\t\t\teventResize: $scope.onEventResize,\n\t\t\t\tschedulerLicenseKey: \"GPL-My-Project-Is-Open-Source\"\n\t\t\t}\n\t\t};\n\n\t\t$scope.init();\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services', 'PatientList']);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A'\n\t\t\t\t\t};\n\n\n\t\t\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n                                        ticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'demographicService',\n\t'demographicsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.setSwipeReady(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// controller.page.demo = demo;\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tcontroller.setSwipeReady();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\n\t\t// //calculate age\n\t\t// var now = new Date();\n\t\t// controller.calculateAge = function calculateAge()\n\t\t// {\n\t\t// \tcontroller.page.demo.age = now.getFullYear() - controller.page.demo.dobYear;\n\t\t// \tif (now.getMonth() < controller.page.demo.dobMonth - 1) controller.page.demo.age--;\n\t\t// \telse if (now.getMonth() == controller.page.demo.dobMonth - 1 && now.getDate() < controller.page.demo.dobDay) controller.page.demo.age--;\n\t\t// };\n\t\t//\n\t\t// controller.calculateAge(); //done on page load\n\n\t\t//set ready for swipe card\n\t\tcontroller.setSwipeReady = function setSwipeReady(status)\n\t\t{\n\t\t\tif (status == \"off\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Click for Card Swipe\";\n\t\t\t}\n\t\t\telse if (status == \"done\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-primary\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-success\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Ready for Card Swipe\";\n\t\t\t\tcontroller.page.swipecard = \"\";\n\t\t\t}\n\t\t};\n\n\t\t//Health card verification\n\t\tcontroller.healthCardHandler = function healthCardHandler(keycode)\n\t\t{\n\t\t\tif (keycode == 13)\n\t\t\t{ //carriage-return\n\t\t\t\tvar swipeCardData = controller.page.swipecard;\n\t\t\t\tcontroller.page.swipecard = \"\";\n\n\t\t\t\tif (swipeCardData.substring(0, 3) == \"%E?\")\n\t\t\t\t{ //swipe card error\n\t\t\t\t\talert(\"Error reading card\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (swipeCardData.substring(2, 8) == \"610054\")\n\t\t\t\t\t{ //Ontario\n\t\t\t\t\t\thcParts[\"issuer\"] = \"ON\";\n\t\t\t\t\t\thcParts[\"hin\"] = swipeCardData.substring(8, 18);\n\n\t\t\t\t\t\tvar namePos = swipeCardData.indexOf(\"^\") + 1;\n\t\t\t\t\t\tvar endNamePos = swipeCardData.indexOf(\"^\", namePos);\n\t\t\t\t\t\thcParts[\"fullName\"] = swipeCardData.substring(namePos, endNamePos);\n\t\t\t\t\t\thcParts[\"lastName\"] = hcParts[\"fullName\"].split(\"/\")[0];\n\t\t\t\t\t\thcParts[\"firstName\"] = hcParts[\"fullName\"].split(\"/\")[1].trim();\n\n\t\t\t\t\t\thcParts[\"sex\"] = swipeCardData.substring(endNamePos + 8, endNamePos + 9);\n\t\t\t\t\t\thcParts[\"dob\"] = swipeCardData.substring(endNamePos + 9, endNamePos + 17);\n\t\t\t\t\t\thcParts[\"hinExp\"] = swipeCardData.substring(endNamePos + 1, endNamePos + 5) + hcParts[\"dob\"].substring(6, 8);\n\t\t\t\t\t\thcParts[\"hinVer\"] = swipeCardData.substring(endNamePos + 17, endNamePos + 19);\n\t\t\t\t\t\thcParts[\"firstNameShort\"] = swipeCardData.substring(endNamePos + 19, endNamePos + 24);\n\t\t\t\t\t\thcParts[\"issueDate\"] = swipeCardData.substring(endNamePos + 24, endNamePos + 30);\n\t\t\t\t\t\thcParts[\"lang\"] = swipeCardData.substring(endNamePos + 30, endNamePos + 32);\n\n\t\t\t\t\t\tif (!isNumber(hcParts[\"dob\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"dob\"] = null;\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"hinExp\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"issueDate\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"issueDate\"] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.setSwipeReady(\"done\");\n\t\t\t\t\t\tcontroller.healthCardUpdateDemographics();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\talert(\"Not Ontario Health Card\");\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.validateHC(); //Run HCValidation\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.healthCardUpdateDemographics = function healthCardUpdateDemographics()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.hcType != hcParts[\"issuer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcType = hcParts[\"issuer\"];\n\t\t\t\tcontroller.page.hcTypeColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.lastName != hcParts[\"lastName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = hcParts[\"lastName\"];\n\t\t\t\tcontroller.page.lastNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.firstName != hcParts[\"firstName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = hcParts[\"firstName\"];\n\t\t\t\tcontroller.page.firstNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (isNumber(hcParts[\"hin\"]) && controller.page.demo.hin != hcParts[\"hin\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = hcParts[\"hin\"];\n\t\t\t\tcontroller.page.hinColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.ver != hcParts[\"hinVer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = hcParts[\"hinVer\"];\n\t\t\t\tcontroller.page.verColor = colorAttn;\n\t\t\t}\n\t\t\tvar hcSex = hcParts[\"sex\"] == 1 ? \"M\" : (hcParts[\"sex\"] == 2 ? \"F\" : null);\n\t\t\tif (hcSex != null && controller.page.demo.sex != hcSex)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = hcSex;\n\t\t\t\tcontroller.page.sexColor = colorAttn;\n\t\t\t}\n\t\t\tvar dateParts = {};\n\t\t\tif (hcParts[\"dob\"] != null)\n\t\t\t{\n\t\t\t\tdateParts[\"year\"] = hcParts[\"dob\"].substring(0, 4);\n\t\t\t\tdateParts[\"month\"] = hcParts[\"dob\"].substring(4, 6);\n\t\t\t\tdateParts[\"day\"] = hcParts[\"dob\"].substring(6);\n\t\t\t\tif (controller.page.demo.dobYear != dateParts[\"year\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobYear = dateParts[\"year\"];\n\t\t\t\t\tcontroller.page.dobYearColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobMonth != dateParts[\"month\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobMonth = dateParts[\"month\"];\n\t\t\t\t\tcontroller.page.dobMonthColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobDay != dateParts[\"day\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobDay = dateParts[\"day\"];\n\t\t\t\t\tcontroller.page.dobDayColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"issueDate\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"issueDate\"].substring(0, 2) + \"-\" + hcParts[\"issueDate\"].substring(2, 4) + \"-\" + hcParts[\"issueDate\"].substring(4);\n\t\t\t\tif (controller.page.demo.effDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.effDate = swipeDate;\n\t\t\t\t\tcontroller.page.effDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"hinExp\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"hinExp\"].substring(0, 2) + \"-\" + hcParts[\"hinExp\"].substring(2, 4) + \"-\" + hcParts[\"hinExp\"].substring(4);\n\t\t\t\tif (controller.page.demo.hcRenewDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.hcRenewDate = swipeDate;\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tvar hinExpDate = buildDate(\"20\" + hcParts[\"hinExp\"].substring(0, 2), hcParts[\"hinExp\"].substring(2, 4), hcParts[\"hinExp\"].substring(4));\n\t\t\t\tif (hinExpDate != null && now > hinExpDate)\n\t\t\t\t{\n\t\t\t\t\talert(\"This health card has expired!\");\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t}\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t}\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t}\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t}\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t}\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t}\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t}\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t}\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t}\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t}\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t}\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t}\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t}\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t}\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t}\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t}\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t}\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t}\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t}\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t}\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label == \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t}\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t}\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t}\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t}\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func == \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion == \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion == \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func == \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func == \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t}\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"form ctrl \", $stateParams, $state);\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = $stateParams.formListId;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length == 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Library'\n\t\t}]; //Need to get this from the server.\n\n\t\tcontroller.page.formlists.forEach(function(item, index)\n\t\t{\n\t\t\tconsole.log('What is the item ', item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, item.label).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentFormList[index] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t});\n\n\n\t\tcontroller.page.encounterFormlist = [];\n\t\tcontroller.page.formGroups = [];\n\t\tcontroller.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tformService.getFormGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups = results;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups.push(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < controller.page.formGroups.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!(controller.page.formGroups[i].summaryItem instanceof Array))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.formGroups[i].summaryItem = [controller.page.formGroups[i].summaryItem];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getFormGroups();\n\t\tcontroller.page.formOptions = [];\n\t\tcontroller.favouriteGroup = null;\n\n\t\tgetFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tformService.getFavouriteFormGroup().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.favouriteGroup = results;\n\n\t\t\t\t\tif (!(controller.favouriteGroup.summaryItem instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.favouriteGroup.summaryItem = [controller.favouriteGroup.summaryItem];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tgetFavouriteFormGroup();\n\n\t\tformService.getFormOptions(controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(\"data\", results);\n\n\t\t\t\tif (results.items instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions = results.items;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions.push(results.items);\n\t\t\t\t}\n\n\n\t\t\t\tconsole.log(\"form options\", controller.page.formOptions);\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[0] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getSelectedEncounterForms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[1] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item, view)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar queryName = $location.search().name;\n\t\t\tvar params = {\n\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\ttype: item.type === 'eform' ? 'eform' : 'form',\n\t\t\t\tid: item.id || item.formId\n\t\t\t};\n\n\t\t\t// The items sent from the server are such that\n\t\t\t// 1. Existing eforms have a formId and an id\n\t\t\t// 2. Existing forms have a formId only\n\t\t\t// 3. Library/available eforms have a formId only\n\t\t\t// 4. Library/available forms have neither\n\t\t\tif ((item.type === 'eform' && item.id) || (item.type === 'form' && item.formId))\n\t\t\t{\n\t\t\t\tparams.name = item.type === 'form' ? item.name || queryName : '';\n\t\t\t\t$state.go('record.forms.view', params);\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\t$state.go('record.forms.add', params);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.go('record.forms');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* 1=frame\n\t\t\t* 2=newwindow\n\t\t\t*/\n\t\t\tif (view === undefined)\n\t\t\t{\n\t\t\t\tview = 1;\n\t\t\t}\n\n\t\t\tvar url = '';\n\t\t\tif (item.type === 'eform')\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmshowform_data.jsp?fdid=' + item.id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmformadd_data.jsp?fid=' + item.formId + '&demographic_no=' + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //form\n\t\t\t\tif (angular.isDefined(item.formId))\n\t\t\t\t{\n\t\t\t\t\tvar name = item.name || queryName;\n\t\t\t\t\turl = '../form/forwardshortcutname.jsp?formname=' + name + '&demographic_no=' + $stateParams.demographicNo + '&formId=' + item.formId;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = item.formValue + $stateParams.demographicNo + \"&formId=0&provNo=\" + user.providerNo + \"&parentAjaxId=forms\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view === 1)\n\t\t\t{\n\t\t\t\t$(\"html, body\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, \"slow\");\n\t\t\t}\n\t\t\telse if (view === 2)\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.page.currentForm = item;\n\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t{});\n\t\t\tcontroller.pymParent = pymParent;\n\n\t\t\t/*if(item.type != 'eform' && view==1){\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = \"1600px\"; //temp hack for the forms\n\t\t\t}*/\n\n\t\t\t//resize iframe for both form and eforms\n\t\t\t$('iframe').load(function()\n\t\t\t{\n\t\t\t\tvar maxheight = Math.max(document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.scrollHeight, document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.offsetHeight) + 30 + 'px';\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = maxheight;\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.isEmpty = function isEmpty(obj)\n\t\t{\n\t\t\tfor (var i in obj)\n\t\t\t\tif (obj.hasOwnProperty(i)) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.currentEformGroup = {};\n\n\t\tcontroller.setCurrentEFormGroup = function setCurrentEFormGroup(mod)\n\t\t{\n\t\t\tcontroller.currentEformGroup = mod;\n\t\t};\n\n\t\tcontroller.openFormFromGroups = function openFormFromGroups(item)\n\t\t{\n\t\t\tconsole.log(\"group item\", item);\n\t\t\titem.formId = item.id;\n\t\t\tdelete item.id;\n\t\t\tcontroller.viewFormState(item, 2);\n\t\t};\n\n\t\tcontroller.formOption = function formOption(opt)\n\t\t{\n\t\t\tvar atleastOneItemSelected = false;\n\t\t\tif (opt.extra == \"send2PHR\")\n\t\t\t{\n\t\t\t\tvar docIds = \"\";\n\t\t\t\tfor (var i = 0; i < controller.page.currentFormList[controller.page.currentlistId].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.page.currentFormList[controller.page.currentlistId][i].isChecked)\n\t\t\t\t\t{\n\t\t\t\t\t\tdocIds = docIds + '&sendToPhr=' + controller.page.currentFormList[controller.page.currentlistId][i].id;\n\t\t\t\t\t\tatleastOneItemSelected = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (atleastOneItemSelected)\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t\tvar url = '../eform/efmpatientformlistSendPhrAction.jsp?clientId=' + controller.demographicNo + docIds;\n\t\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atleastOneItemSelected)\n\t\t\t{\n\t\t\t\talert(\"No Documents Selected\");\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to make group setting active\n\t\t */\n\t\tcontroller.getGroupListClass = function getGroupListClass(grp)\n\t\t{\n\t\t\tif (grp === controller.currentEformGroup)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type === controller.page.currentForm.type && item.id === controller.page.currentForm.id && !Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type === controller.page.currentForm.type && item.formId === controller.page.currentForm.formId && Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t}\n\n\t\tvar currentState = $state.current.name;\n\t\tif (currentState === 'record.forms.view' || currentState === 'record.forms.add')\n\t\t{\n\t\t\tvar item = {};\n\t\t\titem.type = $state.params.type;\n\n\t\t\t// set item properties in a way that matches the content that the server returns\n\t\t\tif (currentState === 'record.forms.view' && item.type === 'eform')\n\t\t\t{\n\t\t\t\titem.id = $state.params.id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\titem.formId = $state.params.id;\n\t\t\t}\n\n\t\t\tcontroller.viewFormState(item);\n\t\t\tcontroller.changeTo(currentState === 'record.forms.view' ? 0 : 1);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.keyCode == 38)\n\t\t\t{ //up\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.keyCode == 40)\n\t\t\t{ //Down\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\tcontroller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code; //'ongoingconcerns';\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: true,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\n\t\t\tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t\teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\n\t\t\titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t\titvCheck = $interval(function()\n\t\t\t{\n\t\t\t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\n\t\t\t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}, 10000); //check for new edit every 10 sec\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\titvSet = null;\n\t\t\t\titvCheck = null;\n\t\t\t\teditingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$filter',\n\t'mod',\n\t'action',\n\t'$stateParams',\n\t'summaryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\tmod,\n\t\taction,\n\t\t$stateParams,\n\t\tsummaryService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.pageOptions = {};\n\t\tcontroller.pageOptions.printType = {};\n\t\tcontroller.pageOptions.dates = {};\n\t\tcontroller.page = {};\n\t\tcontroller.page.selectedWarning = false;\n\n\t\t/*\n\t\t *If mod length > 0 than the user has selected a note. = Default to Note\n\t\t *Other wise default to All\n\t\t */\n\t\tvar atleastOneSelected = false;\n\t\tfor (var i = 0; i < mod.length; i++)\n\t\t{\n\t\t\tif (mod[i].isSelected)\n\t\t\t{\n\t\t\t\tatleastOneSelected = true;\n\t\t\t\ti = mod.length;\n\t\t\t}\n\t\t}\n\n\t\tif (atleastOneSelected)\n\t\t{\n\t\t\tconsole.log(\"mod len \", mod.length);\n\t\t\tcontroller.pageOptions.printType = 'selected';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"printType = all\");\n\t\t\tcontroller.pageOptions.printType = 'all';\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = 'dates';\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType == 'all')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'selected')\n\t\t\t{\n\t\t\t\t//get array\n\t\t\t\tvar selectedList = [];\n\t\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueryString = queryString + '&notes2print=' + selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'dates')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tvar selectedList = [];\n\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t{\n\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t{\n\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tcontroller.pageOptions.selectedList = selectedList;\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"in summary Ctrl \", $stateParams);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNotes = [];\n\n\t\tcontroller.page.notes = {};\n\t\tcontroller.index = 0;\n\t\tcontroller.page.notes = {};\n\t\tcontroller.page.notes.notelist = [];\n\t\tcontroller.busy = false;\n\t\tcontroller.page.noteFilter = {};\n\t\tcontroller.page.currentFilter = 'none';\n\t\tcontroller.page.onlyNotes = false; // Filter for only showing encounter notes\n\t\tcontroller.page.onlyMine = false; // Filter for only showing notes the current user has created/edited\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(note)\n\t\t{\n\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAssessments = function openAssessments()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms', {formListId: 1});\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tconsole.log(controller.busy);\n\t\t\tif (controller.busy) return;\n\n\t\t\tcontroller.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, controller.index, 20, controller.page.noteFilter).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('whats the data', angular.isUndefined(results.notelist), results.notelist);\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.page.notes = data;\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"ok its in an array\", controller.busy);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.addMoreItems();\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\t// Call the findGroupNote function and search for the given note, if found, open the groupNote editor\n\t\tcontroller.editGroupNote = function editGroupNote(note)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\n\t\t\tif (obj !== null)\n\t\t\t{\n\t\t\t\tobj.module.editorNames = note.editorNames;\n\t\t\t\tcontroller.gotoState(obj.note, obj.module, obj.note.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.page.currentEditNote = {};\n\n\t\tcontroller.isNoteBeingEdited = function isNoteBeingEdited(note)\n\t\t{\n\n\t\t\tif (note.uuid === controller.page.currentEditNote.uuid && note.uuid !== null)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$rootScope.$on('currentlyEditingNote', function(event, data)\n\t\t{\n\t\t\tcontroller.page.currentEditNote = data;\n\t\t});\n\n\t\t// TODO\n\t\t$rootScope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tcontroller.page.currentEditNote = {};\n\t\t});\n\n\t\t$rootScope.$on('noteSaved', function(event, data)\n\t\t{\n\t\t\tconsole.log('new data coming in', data);\n\t\t\tvar noteFound = false;\n\t\t\tfor (var notecount = 0; notecount < controller.page.notes.notelist.length; notecount++)\n\t\t\t{\n\t\t\t\tif (data.uuid == controller.page.notes.notelist[notecount].uuid)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('uuid ' + data.uuid + ' notecount ' + notecount, data, controller.page.notes.notelist[notecount]);\n\t\t\t\t\tcontroller.page.notes.notelist[notecount] = data;\n\t\t\t\t\tnoteFound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (noteFound == false)\n\t\t\t{\n\t\t\t\tcontroller.page.notes.notelist.unshift(data);\n\t\t\t}\n\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t});\n\n\t\t// Check if note regular note, if not, we must either display the group note edit window or have no edit option\n\t\tcontroller.isRegularNote = function isRegularNote(note)\n\t\t{\n\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.setColor = function setColor(note)\n\t\t{\n\t\t\tif (note.eformData)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#DFF0D8',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.document)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#617CB2',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.rxAnnotation)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#D3D3D3',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.encounterForm)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#BCAD75',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.invoice)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '##FF7272',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.ticklerNote)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#FFA96F',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.cpp)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#9B8166',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showNoteHeader = function showNoteHeader(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.showNote = function showNote(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(controller.page.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (user.providerNo !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tcontroller.getNoteHeader = function firstLine(noteObj)\n\t\t{\n\t\t\treturn  noteObj.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tcontroller.toggleList = function toggleList(mod)\n\t\t{\n\n\t\t\t// If all the items are displayed, reset displaySize to 5 (min), else, show all the items\n\t\t\tif (mod.displaySize >= mod.summaryItem.length)\n\t\t\t{\n\t\t\t\tmod.displaySize = 5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmod.displaySize = mod.summaryItem.length;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showMoreItems = function showMoreItems(mod)\n\t\t{\n\n\t\t\tif (!angular.isDefined(mod.summaryItem))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mod.summaryItem.length == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Return true if a given section is expanded, otherwise return false\n\t\tcontroller.isSectionExpanded = function isSectionExpanded(mod)\n\t\t{\n\t\t\tif (mod.displaySize > 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Return true if a given section is empty, otherwise return false\n\t\tcontroller.isSectionEmpty = function isSectionEmpty(mod)\n\t\t{\n\t\t\tif (mod.summaryItem.length <= 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tcontroller.isUnsignedEncounterNote = function isUnsignedEncounterNote(note)\n\t\t{\n\t\t\treturn (!note.isSigned && !note.cpp && !note.document && !note.ticklerNote && !note.eformData);\n\t\t};\n\n\t\t// controller.showMoreItemsSymbol = function(mod)\n\t\t// {\n\t\t// \tif (!angular.isDefined(mod.summaryItem))\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif ((mod.displaySize < mod.summaryItem.length) && mod.displaySize == initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if ((mod.displaySize == mod.summaryItem.length) && mod.displaySize != initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if (mod.summaryItem.length <= initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down glyphicon-chevron-down-disabled pull-right\";\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif (controller.isSectionExpanded(mod))\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\n\t\t// \treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\n\t\t// };\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"left\", results);\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"right\", results);\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tif (editingNoteId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t\t\titvSet = null;\n\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\teditingNoteId = null;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\n\t\tcontroller.gotoState = function gotoState(item, mod, itemId)\n\t\t{\n\t\t\tconsole.log('ITEM: ', item);\n\t\t\tconsole.log('MOD: ', mod);\n\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal(mod, action)\n\t\t{\n\t\t\tvar size = 'lg';\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// Toggle whether the note is selected for printing\n\t\tcontroller.toggleIsSelectedForPrint = function toggleIsSelectedForPrint(note)\n\t\t{\n\t\t\tnote.isSelected = !note.isSelected;\n\t\t};\n\n\t}\n]);\n\n\nvar itvSet = null;\nvar itvCheck = null;\nvar editingNoteId = null;","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'scheduleService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\t/*\n\t\tcontroller.recordtabs2 = [ \n\t\t {id : 0,name : 'Master',url : 'partials/master.html'},\n\t\t {id : 1,name : 'Summary',url : 'partials/summary.html'},\n\t\t {id : 2,name : 'Rx',url : 'partials/rx.jsp'},\n\t\t {id : 3,name : 'Msg',url : 'partials/summary.html'},\n\t\t {id : 4,name : 'Trackers',url : 'partials/tracker.jsp'},\n\t\t {id : 5,name : 'Consults',url : 'partials/summary.html'},\n\t\t {id : 6,name : 'Forms',url : 'partials/formview.html'},\n\t\t {id : 7,name : 'Prevs/Measurements',url : 'partials/summary.html'},\n\t\t {id : 8,name : 'Ticklers',url : 'partials/summary.html'},\n\t\t {id : 9,name : 'MyOscar',url : 'partials/blank.jsp'},\n\t\t {id : 10,name : 'Allergies',url : 'partials/summary.html'},\n\t\t {id : 11,name : 'CPP',url : 'partials/cpp.html'},\n\t\t {id : 12,name : 'Labs/Docs',url : 'partials/labview.html'},\n\t\t {id : 13,name : 'Billing',url : 'partials/billing.jsp'}\t\n\t\t*/\n\t\tcontroller.recordtabs2 = [];\n\t\t/*\n\t\t                 \t {id : 0,displayName : 'Details'  ,path : 'record.details'},\n\t\t                 \t {id : 1,displayName : 'Summary'  ,path : 'record.summary'},\n\t\t                 \t {id : 2,displayName : 'Forms'    ,path : 'record.forms'},\n\t\t                 \t {id : 3,displayName : 'Labs/Docs',path : 'partials/eform.jsp'},\n\t\t                 \t {id : 4,displayName : 'Rx'       ,path : 'partials/eform.jsp'}];\n\t\t*/\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//var transitionP = $state.transitionTo(controller.recordtabs2[0].path,$stateParams,{location:'replace',notify:true});\n\t\t//console.log(\"transition \",transitionP);\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t\t//console.log(controller.recordtabs2[temp].path);\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn ($state.current.name === tab.state);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tconsole.log(\"whats the val \", (newVal != oldVal));\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$rootScope.$emit('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\t// if (controller.page.encounterNote.issueDescriptions == null)\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions = controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\t// else\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions += \",\" + controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$rootScope.$emit('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tscheduleService.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\n\t\tconsole.log('RecordCtrlEnd', $state);\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t// controller.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t// controller.$storage.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","angular.module('PatientList').controller('PatientList.PatientListProgramController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\t$scope.$on('updatePatientList', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientList=' + JSON.stringify(data));\n\t\t\tcontroller.updateData(data.currentPage, data.pageSize);\n\t\t});\n\n\n\t\t//the currentPage is 0 based\n\t\tcontroller.updateData = function updateData(currentPage, pageSize)\n\t\t{\n\t\t\tvar startIndex = currentPage * pageSize;\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/program/patientList?startIndex=' + startIndex + '&numToReturn=' + pageSize,\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders:\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.admissions = results.data.content;\n\t\t\t\t\t$scope.$emit('updatePatientListPagination', results.data.total);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//initialize..\n\t\tcontroller.updateData(0, controller.pageSize);\n\t\t$scope.$emit('togglePatientListFilter', false);\n\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListDemographicSetController', [\n\t'$scope',\n\t'$http',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\treportingService.getDemographicSetList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.sets = results.content;\n\t\t\t},\n\t\t\tfunction error(error)\n\t\t\t{\n\t\t\t\talert('Failed to get sets lists.');\n\t\t\t});\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListConfigController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'config',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tconfig)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.patientListConfig = config;\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\tcontroller.saveConfiguration = function saveConfiguration()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.patientListConfig);\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListAppointmentListController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$filter',\n\t'$uibModal',\n\t'$state',\n\t'Navigation',\n\t'scheduleService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$state,\n\t\tNavigation,\n\t\tscheduleService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.statusCodeMap = new Map();\n\t\tcontroller.statuses = null;\n\n\t\tcontroller.dateOptions = {\n\t\t\tshowWeeks: false\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.selectedDate = null;\n\n\t\t$scope.$watch('selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\tscheduleService.selectedDate = newValue;\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Load Remote Data\n\t\t//=========================================================================/\n\n\t\tscheduleService.getStatuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.statuses = results.content;\n\t\t\t\tcontroller.statusCodeMap = new Map(controller.statuses.map(i => [i.status, i]));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\tcontroller.getAppointmentStatusDescriptionByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet description = \"\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tdescription = status.description;\n\t\t\t}\n\t\t\treturn description;\n\t\t};\n\n\t\tcontroller.getAppointmentStatusColourByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet colour = \"#000000\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tcolour = status.color;\n\t\t\t}\n\t\t\treturn colour;\n\t\t};\n\n\t\tcontroller.today = function today()\n\t\t{\n\t\t\tcontroller.appointmentDate = new Date();\n\t\t};\n\n\t\tcontroller.today();\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.appointmentDate = null;\n\t\t};\n\n\t\tcontroller.open = function open($event)\n\t\t{\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t\tcontroller.opened = true;\n\t\t};\n\n\t\tDate.prototype.AddDays = function AddDays(noOfDays)\n\t\t{\n\t\t\tthis.setTime(this.getTime() + (noOfDays * (1000 * 60 * 60 * 24)));\n\t\t\treturn this;\n\t\t};\n\n\t\tcontroller.switchDay = function switchDay(n)\n\t\t{\n\t\t\tvar dateNew = controller.appointmentDate;\n\t\t\tdateNew.AddDays(n);\n\n\t\t\tcontroller.appointmentDate = dateNew;\n\n\t\t\tvar formattedDate = $filter('date')(dateNew, 'yyyy-MM-dd');\n\n\t\t\tcontroller.changeApptList(formattedDate);\n\n\n\t\t};\n\n\t\tcontroller.changeApptDate = function changeApptDate()\n\t\t{\n\t\t\tif (controller.appointmentDate == undefined)\n\t\t\t{\n\t\t\t\tcontroller.today();\n\t\t\t}\n\t\t\tvar formattedDate = $filter('date')(controller.appointmentDate, 'yyyy-MM-dd');\n\t\t\tcontroller.changeApptList(formattedDate);\n\t\t};\n\n\t\tcontroller.changeApptList = function changeApptList(day)\n\t\t{\n\t\t\tcontroller.currenttab = patientListState.tabItems[0];\n\t\t\tcontroller.currenttab.serviceMethod = function ()\n\t\t\t{\n\t\t\t\treturn scheduleService.getAppointments(day).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\t\t\tcontroller.showFilter = true;\n\t\t\t$scope.$emit('juno:patientListRefresh');\n\t\t};\n\n\t\tcontroller.addNewAppointment = function addNewAppointment()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentAdd.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentAddController as appointmentAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tapptDate: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.appointmentDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.viewAppointment = function viewAppointment(apptNo)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentView.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentViewController as appointmentViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tappointment: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getAppointment(apptNo);\n\t\t\t\t\t},\n\t\t\t\t\tstatusList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getStatuses();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isScheduleActive = function isScheduleActive()\n\t\t{\n\t\t\treturn $state.current.name == 'schedule';\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('PatientList').controller('PatientList.PatientListController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'angularUtil',\n\t'Navigation',\n\t'personaService',\n\t'providerService',\n\t'patientListState',\n\t'scheduleService',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\tangularUtil,\n\t\tNavigation,\n\t\tpersonaService,\n\t\tproviderService,\n\t\tpatientListState,\n\t\tscheduleService,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.sidebar = Navigation;\n\t\tcontroller.showFilter = true;\n\t\tcontroller.patientListConfig = {};\n\n\n\t\tcontroller.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t};\n\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hidePatientList();\n\t\t\t\t\t\tconsole.log('hiding patientlist');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"params\", params);\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t//for filter box\n\t\tcontroller.query = '';\n\n\n\t\tcontroller.isActive = function isActive(temp)\n\t\t{\n\t\t\tif (controller.currenttab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currenttab.id;\n\t\t};\n\n\t\tcontroller.isMoreActive = function isMoreActive(temp)\n\t\t{\n\t\t\tif (controller.currentmoretab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currentmoretab.id;\n\t\t};\n\n\t\tcontroller.showPatientList = function showPatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', true);\n\t\t};\n\n\t\tcontroller.hidePatientList = function hidePatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', false);\n\t\t};\n\n\t\tcontroller.changeMoreTab = function changeMoreTab(moreTabItemsIndex, filter)\n\t\t{\n\t\t\tvar beforeChangeTab = controller.currentmoretab;\n\t\t\tcontroller.currentmoretab = controller.moreTabItems[moreTabItemsIndex];\n\n\t\t\tcontroller.showFilter = true;\n\t\t\tcontroller.currenttab = null;\n\t\t\tcontroller.refresh(filter);\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(tabItemIndex, filter)\n\t\t{\n\t\t\tif(controller.currenttab !== patientListState.tabItems[tabItemIndex])\n\t\t\t{\n\t\t\t\tcontroller.currenttab = patientListState.tabItems[tabItemIndex];\n\t\t\t\tcontroller.showFilter = true;\n\t\t\t\tcontroller.currentmoretab = null;\n\t\t\t\tcontroller.refresh(filter);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getMoreTabClass = function getMoreTabClass(id)\n\t\t{\n\t\t\tif (controller.currentmoretab != null && id == controller.currentmoretab.id)\n\t\t\t{\n\t\t\t\treturn \"more-tab-highlight\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\tcontroller.currentPage = 0;\n\t\tcontroller.pageSize = 8;\n\t\tcontroller.patients = null;\n\n\t\tcontroller.numberOfPages = function numberOfPages()\n\t\t{\n\t\t\tif (controller.nPages == null || controller.nPages == 0)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn controller.nPages;\n\t\t};\n\n\n\t\t$scope.$on('updatePatientListPagination', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientListPagination=' + data);\n\t\t\tcontroller.nPages = Math.ceil(data / controller.pageSize);\n\t\t\tconsole.log('nPages=' + controller.nPages);\n\t\t});\n\n\n\t\tcontroller.changePage = function changePage(pageNum)\n\t\t{\n\t\t\tcontroller.currentPage = pageNum;\n\t\t\t//broadcast the change page\n\t\t\t$scope.$broadcast('updatePatientList',\n\t\t\t{\n\t\t\t\tcurrentPage: controller.currentPage,\n\t\t\t\tpageSize: controller.pageSize\n\t\t\t});\n\t\t};\n\n\t\t$scope.$on('togglePatientListFilter', function(event, data)\n\t\t{\n\t\t\tconsole.log(\"received a togglePatientListFilter event:\" + data);\n\t\t\tcontroller.showFilter = data;\n\t\t});\n\n\n\t\tcontroller.process = function process(tab, filter)\n\t\t{\n\t\t\ttab.serviceMethod().then(\n\t\t\t\tfunction success(resultList)\n\t\t\t\t{\n\t\t\t\t\tcontroller.patients = resultList;\n\n\t\t\t\t\tcontroller.nPages = 1;\n\t\t\t\t\tif (controller.patients != null && controller.patients.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.nPages = Math.ceil(controller.patients.length / controller.pageSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.template = tab.template;\n\t\t\t\t\tNavigation.load(controller.template);\n\t\t\t\t\tcontroller.changePage(0);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\talert('error loading data for patient list:' + error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.refresh = function refresh(filter)\n\t\t{\n\n\t\t\tif (controller.currenttab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currenttab, filter);\n\t\t\t}\n\t\t\tif (controller.currentmoretab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currentmoretab, filter);\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function()\n\t\t{\n\t\t\tcontroller.refresh();\n\t\t});\n\n\t\tproviderService.getRecentPatientList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tpersonaService.getPatientListConfig().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.getTabItems = function getTabItems()\n\t\t{\n\t\t\treturn patientListState.tabItems;\n\t\t};\n\n\t\tcontroller.manageConfiguration = function manageConfiguration()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientlist/patientListConfiguration.jsp',\n\t\t\t\tcontroller: 'PatientList.PatientListConfigController as patientListConfigCtrl',\n\t\t\t\tbackdrop: false,\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconfig: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.patientListConfig;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tpersonaService.setPatientListConfig(results).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t\t\t\t\t$scope.$emit('updatePatientListPagination', controller.patients.length);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tpatientListState.tabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Appts.\",\n\t\t\t\ttemplate: \"src/patientlist/patientList1.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\t// this gets overwritten by the appointmentListController, when it sets specific dates\n\t\t\t\t\treturn scheduleService.getAppointments('today').then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Recent\",\n\t\t\t\ttemplate: \"src/patientlist/recent.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getRecentPatientList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.moreTabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Patient Sets\",\n\t\t\t\ttemplate: \"src/patientlist/demographicSets.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn reportingService.getDemographicSetList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.content;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Caseload\",\n\t\t\t\ttemplate: \"src/patientlist/program.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.changeTab(0);\n\t}\n]);\n","angular.module(\"PatientList\").service(\"patientListState\", [\n\t// Store variables here that must be accessible across controllers in patientlist\n\tfunction()\n\t{\n\t\tvar service = this;\n\n\t\tservice.tabItems = [];\n\n\t}\n]);","'use strict';\n\nangular.module('PatientList', ['Common', 'Common.Services']);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        console.log('TABLE PARAMS', NgTableParams);\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n                \tconsole.log(\"k2a feed response\", response);\n\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateMessages();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n            }\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n    }\n]);","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Patient').controller('Patient.NewPatientController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'demographicService',\n\t'securityService',\n\t'programService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tprogramService,\n\t\tstaticDataService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.demographic = {};\n\n\t\tcontroller.submitDisabled = false;\n\n\t\t//get access right for creating new patient\n\t\tsecurityService.hasRight(\"_demographic\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.hasRight = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.programs = results;\n\t\t\t\tif (controller.programs.length == 1)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographic.admissionProgramId = controller.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get genders to be selected\n\t\tcontroller.genders = staticDataService.getGenders();\n\n\t\tcontroller.save = function save(ngModelContoller)\n\t\t{\n\t\t\tconsole.log(controller.demographic.lastName);\n\t\t\tconsole.log(controller.demographic.firstName);\n\t\t\tconsole.log(controller.demographic.dobYear);\n\t\t\tconsole.log(controller.demographic.dobMonth);\n\t\t\tconsole.log(controller.demographic.dobDay);\n\t\t\tconsole.log(controller.demographic.sex);\n\t\t\tconsole.log(controller.demographic);\n\t\t\tconsole.log(ngModelContoller.$valid);\n\t\t\tconsole.log($scope);\n\n\t\t\tcontroller.submitDisabled = true;\n\n\t\t\tif (ngModelContoller.$valid)\n\t\t\t{\n\t\t\t\tconsole.log(\"Saving...\");\n\n\t\t\t\tif (!controller.isCorrectDate(controller.demographic.dobYear,\n\t\t\t\t\t\tcontroller.demographic.dobMonth, controller.demographic.dobDay))\n\t\t\t\t{\n\t\t\t\t\talert(\"Incorrect Date of Birth!\");\n\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.demographic.dateOfBirth =\n\t\t\t\t\tcontroller.demographic.dobYear + '-' +\n\t\t\t\t\tcontroller.demographic.dobMonth + \"-\" +\n\t\t\t\t\tcontroller.demographic.dobDay;\n\n\t\t\t\tcontroller.demographic.patientStatusDate = new Date();\n\t\t\t\tcontroller.demographic.dateJoined = new Date();\n\t\t\t\tcontroller.demoRetVal = {};\n\n\t\t\t\tdemographicService.saveDemographic(controller.demographic).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tcontroller.demoRetVal = results;\n\t\t\t\t\t\t$uibModalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"ERR!!\");\n\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.ok = function ok()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.selected.item);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.capName = function capName()\n\t\t{\n\t\t\tif (controller.demographic.lastName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.lastName = controller.demographic.lastName.toUpperCase();\n\t\t\t}\n\n\t\t\tif (controller.demographic.firstName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.firstName = controller.demographic.firstName.toUpperCase();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isCorrectDate = function isCorrectDate(year, month, day)\n\t\t{\n\t\t\tvar d = new Date(year, month - 1, day);\n\n\t\t\tif (d == \"Invalid Date\") return false;\n\t\t\tif (d.getFullYear() != year) return false;\n\t\t\tif (d.getMonth() != month - 1) return false;\n\t\t\tif (d.getDate() != day) return false;\n\n\t\t\treturn true;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Layout').controller('Layout.NavBarController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$q',\n\t'$timeout',\n\t'$location',\n\t'$state',\n\t'$uibModal',\n\t'securityService',\n\t'personaService',\n\t'billingService',\n\t'inboxService',\n\t'messageService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$q,\n\t\t$timeout,\n\t\t$location,\n\t\t$state,\n\t\t$uibModal,\n\t\tsecurityService,\n\t\tpersonaService,\n\t\tbillingService,\n\t\tinboxService,\n\t\tmessageService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.unAckLabDocTotal = 0;\n\t\t\tcontroller.unreadMessageTotal = 0;\n\t\t\tcontroller.demographicSearch = null;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'w'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.searchRights = results.content[0];\n\t\t\t\t\t\tcontroller.newDemographicRights = results.content[1];\n\t\t\t\t\t\tcontroller.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.getUnAckLabDocCount();\n\t\t\t\t\tcontroller.getUnreadMessageCount();\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tcontroller.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tconsole.log('NavBarController::watch demographicSearch', controller.demographicSearch);\n\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tcontroller.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tcontroller.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tcontroller.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tcontroller.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tcontroller.demographicSearch = null;\n\t\t};\n\n\t\tcontroller.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t{\n\t\t\t\tterm: search\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'search'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'record.details'\n\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tcontroller.transition = function transition(item)\n\t\t{\n\t\t\tconsole.log('transition', item);\n\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Admin\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../administration/\";\n\t\t\t\t\twname = \"admin\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openMessenger = function(item)\n\t\t{\n\t\t\tif (controller.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\t\t\t\t\tconsole.log($location.path());\n\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\n\t\t\t\t\tconsole.log($location.path());\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn ($state.current.name === tab.state);\n\t\t};\n\n\t\tcontroller.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\n\t\t\t\tvar labelsToShow = ['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tcontroller.smallNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Dashboard'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = true;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tconsole.log(\"Layout.BodyController updating showPatientList\", value);\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplayFieldErrors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.displayFieldErrors) ||\n\t\t\t$scope.displayFieldErrors !== false)\n\t\t{\n\t\t\t$scope.displayFieldErrors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.displayFieldErrors &&\n\t\t\t\t$scope.errors.displayFieldErrors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.rows = '@caRows';\n\tscope.max_characters = '@caMaxCharacters';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.model)\n\t\t{\n\t\t\t$scope.model = '';\n\t\t}\n\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t{\n\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t}\n\t\t});\n\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.options = '=caOptions';\n\tscope.include_empty_option = '@caEmptyOption';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t};\n\n  return {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function(e) {\n\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","/*\r\n*  AngularJs Fullcalendar Wrapper for the JQuery FullCalendar\r\n*  API @ http://arshaw.com/fullcalendar/\r\n*\r\n*  Angular Calendar Directive that takes in the [eventSources] nested array object as the ng-model and watches it deeply changes.\r\n*       Can also take in multiple event urls as a source object(s) and feed the events per view.\r\n*       The calendar will watch any eventSource array and update itself when a change is made.\r\n*\r\n*/\r\n\r\n/*\r\n * Copied and modified for use at Cloudpractice because I couldn't figure out how to keep it from\r\n * loading before our initialization was done.  I've marked the changes with a CP below.\r\n */\r\n\r\nangular.module('ui.calendar', [])\r\n  .constant('uiCalendarConfig', {calendars: {}})\r\n  .controller('uiCalendarCtrl', ['$scope', \r\n                                 '$locale', function(\r\n                                  $scope, \r\n                                  $locale){\r\n\r\n      var sources = $scope.eventSources,\r\n          extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop,\r\n\r\n          wrapFunctionWithScopeApply = function(functionToWrap){\r\n              return function(){\r\n                  // This may happen outside of angular context, so create one if outside.\r\n\r\n                  if ($scope.$root.$$phase) {\r\n                      return functionToWrap.apply(this, arguments);\r\n                  } else {\r\n                      var args = arguments;\r\n                      var self = this;\r\n                      return $scope.$root.$apply(function(){\r\n                          return functionToWrap.apply(self, args);\r\n                      });\r\n                  }\r\n              };\r\n          };\r\n\r\n      var eventSerialId = 1;\r\n      // @return {String} fingerprint of the event object and its properties\r\n      this.eventFingerprint = function(e) {\r\n        if (!e._id) {\r\n          e._id = eventSerialId++;\r\n        }\r\n        \r\n        var extraSignature = extraEventSignature({event: e}) || '';\r\n        var start = moment.isMoment(e.start) ? e.start.unix() : (e.start ? moment(e.start).unix() : '');\r\n        var end =   moment.isMoment(e.end)   ? e.end.unix()   : (e.end   ? moment(e.end).unix()   : '');\r\n        \r\n        // This extracts all the information we need from the event. http://jsperf.com/angular-calendar-events-fingerprint/3\r\n        return \"\" + e._id + (e.id || '') + (e.title || '') + (e.url || '') + start + end +\r\n          (e.allDay || '') + (e.className || '') + extraSignature;\r\n      };\r\n\r\n      var sourceSerialId = 1, sourceEventsSerialId = 1;\r\n      // @return {String} fingerprint of the source object and its events array\r\n      this.sourceFingerprint = function(source) {\r\n          var fp = '' + (source.__id || (source.__id = sourceSerialId++)),\r\n              events = angular.isObject(source) && source.events;\r\n          if (events) {\r\n              fp = fp + '-' + (events.__id || (events.__id = sourceEventsSerialId++));\r\n          }\r\n          return fp;\r\n      };\r\n\r\n      // @return {Array} all events from all sources\r\n      this.allEvents = function() {\r\n        // do sources.map(&:events).flatten(), but we don't have flatten\r\n        var arraySources = [];\r\n        for (var i = 0, srcLen = sources.length; i < srcLen; i++) {\r\n          var source = sources[i];\r\n          if (angular.isArray(source)) {\r\n            // event source as array\r\n            arraySources.push(source);\r\n          } else if(angular.isObject(source) && angular.isArray(source.events)){\r\n            // event source as object, ie extended form\r\n            var extEvent = {};\r\n            for(var key in source){\r\n              if(key !== '_id' && key !== 'events'){\r\n                 extEvent[key] = source[key];\r\n              }\r\n            }\r\n            for(var eI = 0;eI < source.events.length;eI++){\r\n              angular.extend(source.events[eI],extEvent);\r\n            }\r\n            arraySources.push(source.events);\r\n          }\r\n        }\r\n        return Array.prototype.concat.apply([], arraySources);\r\n      };\r\n\r\n      // Track changes in array of objects by assigning id tokens to each element and watching the scope for changes in the tokens\r\n      // @param {Array|Function} arraySource array of objects to watch\r\n      // @param tokenFn {Function} that returns the token for a given object\r\n      // @return {Object}\r\n      //  subscribe: function(scope, function(newTokens, oldTokens))\r\n      //    called when source has changed. return false to prevent individual callbacks from firing\r\n      //  onAdded/Removed/Changed:\r\n      //    when set to a callback, called each item where a respective change is detected\r\n      this.changeWatcher = function(arraySource, tokenFn) {\r\n        var self;\r\n        var getTokens = function() {\r\n          var array = angular.isFunction(arraySource) ? arraySource() : arraySource;\r\n          var result = [], token, el;\r\n          for (var i = 0, n = array.length; i < n; i++) {\r\n            el = array[i];\r\n            token = tokenFn(el);\r\n            map[token] = el;\r\n            result.push(token);\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // @param {Array} a\r\n        // @param {Array} b\r\n        // @return {Array} elements in that are in a but not in b\r\n        // @example\r\n        //  subtractAsSets([6, 100, 4, 5], [4, 5, 7]) // [6, 100]\r\n        var subtractAsSets = function(a, b) {\r\n          var result = [], inB = {}, i, n;\r\n          for (i = 0, n = b.length; i < n; i++) {\r\n            inB[b[i]] = true;\r\n          }\r\n          for (i = 0, n = a.length; i < n; i++) {\r\n            if (!inB[a[i]]) {\r\n              result.push(a[i]);\r\n            }\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // Map objects to tokens and vice-versa\r\n        var map = {};\r\n\r\n        // Compare newTokens to oldTokens and call onAdded, onRemoved, and onChanged handlers for each affected event respectively.\r\n        var applyChanges = function(newTokens, oldTokens) {\r\n          var i, n, el, token;\r\n          var replacedTokens = {};\r\n          var removedTokens = subtractAsSets(oldTokens, newTokens);\r\n          for (i = 0, n = removedTokens.length; i < n; i++) {\r\n            var removedToken = removedTokens[i];\r\n            el = map[removedToken];\r\n            delete map[removedToken];\r\n            var newToken = tokenFn(el);\r\n            // if the element wasn't removed but simply got a new token, its old token will be different from the current one\r\n            if (newToken === removedToken) {\r\n              self.onRemoved(el);\r\n            } else {\r\n              replacedTokens[newToken] = removedToken;\r\n              self.onChanged(el);\r\n            }\r\n          }\r\n\r\n          var addedTokens = subtractAsSets(newTokens, oldTokens);\r\n          for (i = 0, n = addedTokens.length; i < n; i++) {\r\n            token = addedTokens[i];\r\n            el = map[token];\r\n            if (!replacedTokens[token]) {\r\n              self.onAdded(el);\r\n            }\r\n          }\r\n        };\r\n        return self = {\r\n          subscribe: function(scope, onArrayChanged) {\r\n            scope.$watch(getTokens, function(newTokens, oldTokens) {\r\n              var notify = !(onArrayChanged && onArrayChanged(newTokens, oldTokens) === false);\r\n              if (notify) {\r\n                applyChanges(newTokens, oldTokens);\r\n              }\r\n            }, true);\r\n          },\r\n          onAdded: angular.noop,\r\n          onChanged: angular.noop,\r\n          onRemoved: angular.noop\r\n        };\r\n      };\r\n\r\n      this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig){\r\n          var config = {};\r\n\r\n          angular.extend(config, uiCalendarConfig);\r\n          angular.extend(config, calendarSettings);\r\n\r\n          angular.forEach(config, function(value,key){\r\n            if (typeof value === 'function'){\r\n              config[key] = wrapFunctionWithScopeApply(config[key]);\r\n            }\r\n          });\r\n\r\n          return config;\r\n      };\r\n\r\n    this.getLocaleConfig = function(fullCalendarConfig) {\r\n      if (!fullCalendarConfig.lang || fullCalendarConfig.useNgLocale) {\r\n        // Configure to use locale names by default\r\n        var tValues = function(data) {\r\n          // convert {0: \"Jan\", 1: \"Feb\", ...} to [\"Jan\", \"Feb\", ...]\r\n          var r, k;\r\n          r = [];\r\n          for (k in data) {\r\n            r[k] = data[k];\r\n          }\r\n          return r;\r\n        };\r\n        var dtf = $locale.DATETIME_FORMATS;\r\n        return {\r\n          monthNames: tValues(dtf.MONTH),\r\n          monthNamesShort: tValues(dtf.SHORTMONTH),\r\n          dayNames: tValues(dtf.DAY),\r\n          dayNamesShort: tValues(dtf.SHORTDAY)\r\n        };\r\n      }\r\n      return {};\r\n    };\r\n  }])\r\n  .directive('uiCalendar', ['uiCalendarConfig', function(uiCalendarConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        eventSources:'=ngModel',\r\n        calendarWatchEvent: '&',\r\n        enabled: '=ngEnabled'     // CP: Added an option to enable the calendar\r\n      },\r\n      controller: 'uiCalendarCtrl',\r\n      link: function(scope, elm, attrs, controller) {\r\n\r\n        var sources = scope.eventSources,\r\n            sourcesChanged = false,\r\n            calendar,\r\n            eventSourcesWatcher = controller.changeWatcher(sources, controller.sourceFingerprint),\r\n            eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventFingerprint),\r\n            options = null;\r\n\r\n        function getOptions(){\r\n          var calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {},\r\n              fullCalendarConfig;\r\n\r\n          fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig);\r\n\r\n          var localeFullCalendarConfig = controller.getLocaleConfig(fullCalendarConfig);\r\n          angular.extend(localeFullCalendarConfig, fullCalendarConfig);\r\n          options = { eventSources: sources };\r\n          angular.extend(options, localeFullCalendarConfig);\r\n          //remove calendars from options\r\n          options.calendars = null;\r\n\r\n          var options2 = {};\r\n          for(var o in options){\r\n            if(o !== 'eventSources'){\r\n              options2[o] = options[o];\r\n            }\r\n          }\r\n          return JSON.stringify(options2);\r\n        }\r\n\r\n        scope.destroyCalendar = function(){\r\n          if(calendar && calendar.fullCalendar){\r\n            calendar.fullCalendar('destroy');\r\n          }\r\n          if(attrs.calendar) {\r\n            calendar = uiCalendarConfig.calendars[attrs.calendar] = $(elm).html('');\r\n          } else {\r\n            calendar = $(elm).html('');\r\n          }\r\n        };\r\n\r\n        scope.initCalendar = function(){\r\n          // CP: The calendar won't initialize when it's not enabled\r\n          if(scope.enabled) {\r\n\t\t    if (!calendar) {\r\n\t\t      calendar = angular.element(elm).html('');\r\n\t\t    }\r\n\t\t    calendar.fullCalendar(options);\r\n\t\t    if(attrs.calendar) {\r\n\t\t      uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n\t\t    }\r\n\t\t  }\r\n        };\r\n        scope.$on('$destroy', function() {\r\n          scope.destroyCalendar();\r\n        });\r\n\r\n        eventSourcesWatcher.onAdded = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar(options);\r\n            if (attrs.calendar) {\r\n                uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n            }\r\n            calendar.fullCalendar('addEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onRemoved = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onChanged = function() {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('refetchEvents');\r\n            sourcesChanged = true;\r\n          }\r\n\r\n        };\r\n\r\n        eventsWatcher.onAdded = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('renderEvent', event, (event.stick ? true : false));\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onRemoved = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEvents', event._id);\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onChanged = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            var clientEvents = calendar.fullCalendar('clientEvents', event._id);\r\n            for (var i = 0; i < clientEvents.length; i++) {\r\n              var clientEvent = clientEvents[i];\r\n              clientEvent = angular.extend(clientEvent, event);\r\n              calendar.fullCalendar('updateEvent', clientEvent);\r\n            }\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.subscribe(scope);\r\n        eventsWatcher.subscribe(scope, function() {\r\n          if (sourcesChanged === true) {\r\n            sourcesChanged = false;\r\n            // return false to prevent onAdded/Removed/Changed handlers from firing in this case\r\n            return false;\r\n          }\r\n        });\r\n\r\n        scope.$watch(getOptions, function(newValue, oldValue) {\r\n          if(newValue !== oldValue) {\r\n            scope.destroyCalendar();\r\n            scope.initCalendar();\r\n          } else if((newValue && angular.isUndefined(calendar))) {\r\n            scope.initCalendar();\r\n          }\r\n        });\r\n      }\r\n    };\r\n}]);\r\n","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\tconsole.log('DRAGGABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\tconsole.log('RESIZABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\n\t\t\t\tconsole.log('RESIZABLE DIRECTIVE HEIGHT ', $(\".note-editor-textarea\").height());\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: 'Name',\n\t\t\t\t\t'term': search,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(function success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(data.content);\n\t\t\t\t\t\tconsole.log('dataa', data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = results.data;\n\t\t\t\t\t\tvar meta = results.meta;\n\n\t\t\t\t\t\tif(meta.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn Juno.Common.Util.formatName(demographic.firstName, demographic.lastName);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onSearchFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tconsole.log(\"- Formatting Match -------------\");\n\t\t\t\tconsole.log($model);\n\t\t\t\tconsole.log(\"--------------------------------\");\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\tconsole.log('typeaheadHelper::onSelect - setting model', $item);\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onChange - setting model (isTypeaheadSearchQuery)');\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgender\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasOneOfPermissions = function hasOneOfPermissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.hasPermission = function hasPermission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"scheduleService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.selectedDate = null;\n\n\t\tservice.getStatuses = function getStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/statuses',\n\t\t\t\tservice.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching statuses\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTypes = function getTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/types',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointments = function getAppointments(day)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'schedule/day/' + encodeURIComponent(day), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointments\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAppointment = function addAppointment(appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(appointment),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::addAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointment = function getAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/getAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.appointment);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.deleteAppointment = function deleteAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/deleteAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::deleteAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while deleting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.appointmentHistory = function appointmentHistory(demoNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/' +\n\t\t\t\t\tencodeURIComponent(demoNo) + \"/appointmentHistory\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::appointmentHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.cancelAppointment = function cancelAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'C'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::cancelAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while cancelling appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.noShowAppointment = function noShowAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'N'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::noShowAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting no show appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleGroups = function getScheduleGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/groups',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getScheduleGroups error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSchedulesForCalendar = function getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\tsiteName\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'schedule/calendar/';\n\t\t\turl += encodeURIComponent(providerId) + '/';\n\t\t\turl += '?startDate=' + encodeURIComponent(startDate);\n\t\t\turl += '&endDate=' + encodeURIComponent(endDate);\n\n\t\t\tif(siteName != null)\n\t\t\t{\n\t\t\t\turl += '&site=' + encodeURIComponent(siteName);\n\t\t\t}\n\n\t\t\tjunoHttp.get(\n\t\t\t\turl,\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSchedulesForCalendar error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleTemplateCodes = function getAvailabilityCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/templateCodes',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAvailabilityTypes error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointmentStatuses = function getAppointmentStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/calendar/statuses',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointmentStatuses error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSites = function getSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'sites',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSites error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportingService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/reporting/';\n\n\t\tservice.getDemographicSetList = function getDemographicSetList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'demographicSets/list', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportingService::demographicSets error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching demographicSets\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"providerService::getRecentDemographicsViewed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results.data);\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\toffset: encodeURIComponent(offset),\n\t\t\t\tnumToReturn: encodeURIComponent(numberToReturn),\n\t\t\t\tnoteConfig: noteConfig\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/' + demographicNo + '/completedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getCompletedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching completed encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur'\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errorsHash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {displayFieldErrors} Boolean : Sets flag\n\t\t\t//\t\t- {fieldErrorsLabelMap} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {fieldErrorsLabelMapKey} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errorsHash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errorsHash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    console.log('converted RESULTS: ', results.data);\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while saving demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getLetterheadList = function getLetterheadList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'getLetterheadList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getLetterheadList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching letterheads\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\t\"$q\",\n\t\"demographicService\",\n\tfunction(\n\t\t$q,\n\t\tdemographicService\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.init_autocomplete_values = function init_autocomplete_values(patient, autocomplete_values){\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tdemographicService.getDemographic(patient.patient).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\tresult.dob = moment([result.dobYear, result.dobMonth, result.dobDay]);\n\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tpatient:{\n\t\t\t\t\t\t\tdata: service.formatDemographic(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.formatDemographic = function formatDemographic(result)\n\t\t{\n\t\t\treturn {\n\t\t\t\tuuid: result.demographicNo,\n\t\t\t\tfull_name: result.lastName + ',' + result.firstName,\n\t\t\t\tbirth_date: Juno.Common.Util.formatMomentDate(result.dob),\n\t\t\t\thealth_number: result.hin,\n\t\t\t\tphone_number_primary: result.phone\n\t\t\t};\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable')\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable')\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('ngstorage');\nrequire('./scss/juno.scss');\nrequire('font-awesome/css/font-awesome.min.css');\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'PatientList',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController'\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin_popup.jsp',\n\t\t\tcontroller: 'AdminCtrl'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tformListId: 0\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.view',\n\t\t{\n\t\t\turl: '/view/:type/:id?name',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tparams: { name: { dynamic: true } },\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.forms.add',\n\t\t{\n\t\t\turl: '/add/:type/:id',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t{\n\t\t\turl:'/k2aNotification',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t});\n\n}]);\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.settings = {\n\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\tdatetime_no_timezone_format: \"YYYY-MM-DDTHH:mm:ss\",\n\ttime_format: \"h:mma\",\n\tdate_format: \"YYYY-MM-DD\",\n\tdayofweek_format: \"dddd\"\n};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatMomentDate = function formatMomentDate(d) {\n\treturn d.format(Juno.Common.Util.settings.date_format);\n};\n\nJuno.Common.Util.formatMomentTime = function formatMomentTime(d, format) {\n\tif(!format) {\n\t\tformat = Juno.Common.Util.settings.time_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.formatMomentDateTimeNoTimezone = function formatMomentDateTimeNoTimezone(d) {\n\treturn d.format(Juno.Common.Util.settings.datetime_no_timezone_format);\n};\n\nJuno.Common.Util.getDateMoment = function getDateMoment(date_string)\n{\n\treturn moment.utc(date_string, Juno.Common.Util.settings.date_format, true);\n};\n\nJuno.Common.Util.getTimeMoment = function getTimeMoment(time_string)\n{\n\treturn moment.utc(time_string, Juno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDateMomentFromComponents = function getDateMomentFromComponents(year_string, month_string, day_string)\n{\n\treturn moment.utc({year: year_string, month: month_string, day: day_string});\n};\n\nJuno.Common.Util.getDateAndTimeMoment = function getCombinedMoment(dateString, timeString)\n{\n\treturn moment.utc(dateString + \" \" + timeString,\n\t\tJuno.Common.Util.settings.date_format + \" \" +\n\t\tJuno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDatetimeNoTimezoneMoment = function getDatetimeNoTimezoneMoment(datetime_string)\n{\n\treturn moment.utc(datetime_string,\n\t\tJuno.Common.Util.settings.datetime_no_timezone_format, true);\n};\n\nJuno.Common.Util.validateDateString = function validateDateString(\n\tdateString, displayErrors, field, fieldDisplayName, required)\n{\n\tif(Juno.Common.Util.exists(dateString))\n\t{\n\t\tvar moment = Juno.Common.Util.getDateMoment(dateString);\n\t\tif(!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + ' is invalid');\n\t\t}\n\t}\n\telse if(required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.validateTimeString = function validateTimeString(\n\ttimeString, displayErrors, field, fieldDisplayName, required)\n{\n\tif (Juno.Common.Util.exists(timeString))\n\t{\n\t\tvar moment = Juno.Common.Util.getTimeMoment(timeString);\n\t\tif (!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n {\n\n\tvar dateOfBirth = new Date(parseInt(dobYear, 10), parseInt(dobMonth, 10), parseInt(dobDay, 10));\n\tvar currDate = new Date();\n\n\tvar years = (currDate.getFullYear() - dateOfBirth.getFullYear());\n\n\tif (currDate.getMonth() < dateOfBirth.getMonth() ||\n\t\tcurrDate.getMonth() == dateOfBirth.getMonth() && currDate.getDate() < dateOfBirth.getDate())\n\t{\n\t\tyears--;\n\t}\n\treturn years;\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nJuno.Common.Util.escapeHtml = function escapeHtml(str)\n{\n\tvar entityMap = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t'\"': '&quot;',\n\t\t\"'\": '&#39;',\n\t\t\"/\": '&#x2F;'\n\t};\n\n\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t{\n\t\treturn entityMap[s];\n\t});\n};\n\nJuno.Common.Util.formatName = function formatName(firstName, lastName)\n{\n\tif(!lastName && !firstName)\n\t{\n\t\treturn null;\n\t}\n\telse if(!firstName)\n\t{\n\t\treturn lastName;\n\t}\n\telse if(!lastName)\n\t{\n\t\treturn firstName;\n\t}\n\n\treturn lastName + ', ' + firstName;\n};\n","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {}\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}"],"sourceRoot":""}