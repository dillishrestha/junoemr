{"version":3,"sources":["webpack:///./generated/api/ScheduleApi.ts","webpack:///./src/schedule/calendarApiAdapter.ts","webpack:///./src/index.ts","webpack:///./src/help/helpController.js","webpack:///./src/help/supportController.js","webpack:///./src/help/module.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/document/module.js","webpack:///./src/report/reportSHMentalHealthController.js","webpack:///./src/report/reportRegistrationIntakeController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportFollowUpIntakeController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/module.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/inbox/module.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/module.js","webpack:///./src/billing/billingController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/module.js","webpack:///./src/schedule/appointmentViewController.js","webpack:///./src/schedule/appointmentAddController.js","webpack:///./src/schedule/eventController.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/module.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./src/record/details/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/module.js","webpack:///./src/patientlist/patientListProgramController.js","webpack:///./src/patientlist/patientListDemographicSetController.js","webpack:///./src/patientlist/patientListConfigController.js","webpack:///./src/patientlist/patientListAppointmentListController.js","webpack:///./src/patientlist/patientListController.js","webpack:///./src/patientlist/patientListState.js","webpack:///./src/patientlist/module.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/module.js","webpack:///./src/patient/newPatientController.js","webpack:///./src/patient/module.js","webpack:///./src/layout/navBarController.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/module.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/angular-ui-calendar.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/scheduleService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/reportingService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/module.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/module.js","webpack:///./src/common/module.js","webpack:///./app.js","webpack:///./src/consults/common.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/common/util/util.js","webpack:///./src/common/displayMessages.js","webpack:///../webapp/share/javascript/Oscar.js"],"names":["ScheduleApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","addAppointment","newAppointmentTo1","extraHttpRequestParams","httpRequestParams","method","url","data","params","headers","Object","assign","deleteAppointment","appointmentTo1","fetchMonthlyData","year","month","providerNo","localVarPath","replace","encodeURIComponent","String","headerParams","Error","findExistAppointments","demographicNo","getAppointment","getAppointmentReasons","getAppointmentStatuses","getAppointmentTypes","getAppointmentsForDay","date","getAppointmentsForDay1","getCalendarAppointmentStatuses","getCalendarEvents","providerId","startDate","endDate","site","queryParameters","getScheduleGroups","getScheduleTemplateCodes","updateAppointment","updateAppointmentStatus","id","updateAppointmentType","$inject","exports","ScheduleApi_1","__webpack_require__","moment","CalendarApiAdapter","$q","$stateParams","$uibModal","results_factory","util","autoCompleteService","demographicsService","scheduleService","globalStateService","focus","patient_model","uuid","full_name","has_photo","patient_photo_url","clear","birth_date","health_number","ontario_version_code","phone_number_primary","fill_data","upload_photo","file","scheduleApi","searchPatients","term","search","type","status","integrator","outofdomain","then","results","resp","x","content","length","push","value_field","autocompleteService","formatDemographic","errors","console","log","load_schedule_events","schedule","siteName","start","end","view_name","schedule_templates","event_statuses","default_event_color","availability_types","_this","deferred","defer","startDateString","format","endDateString","subtract","getSchedulesForCalendar","resolve","snake_schedule_results","promise","snake_appointment_data","appointment_uuid","scheduleUuid","schedule_uuid","event_status_uuid","eventStatusUuid","event_status_modifier","eventStatusModifier","start_time","startTime","end_time","endTime","reason","num_invoices","numInvoices","demographics_patient_dob","demographicPatientDob","demographics_patient_name","demographicPatientName","demographics_patient_phone","demographicPatientPhone","demographics_patient_uuid","demographicPatientUuid","demographics_practitioner_uuid","demographicPractitionerUuid","tag_names","tagNames","tag_self_booked","tagSelfBooked","tag_self_cancelled","tagSelfCancelled","tag_system_codes","tagSystemCodes","snake_availability_type","name","color","preferred_event_length_minutes","preferredEventLengthMinutes","system_code","systemCode","angular","isArray","snake_results","i","result","resourceId","rendering","schedule_template_code","scheduleTemplateCode","className","availability_type","availabilityType","load_schedule_templates","load_availability_types","code","description","duration","load_event_statuses","snake_appointment_statuses","body","snake_data","displayLetter","display_letter","icon","rotates","sort_order","sortOrder","load_sites","getSites","out","siteId","display_name","bgColor","load_schedule_options","identifier","get_selected_schedule","schedule_options","selected_uuid","default_schedule","get_global_state","get_global_preference_setting","exists","get_selected_resources","resource_options","get_selected_time_interval","time_interval_options","default_time_interval","selected_time_interval","time_interval","get_schedule_min_time","get_schedule_max_time","load_schedule","availabilities","relations","events","save_event","edit_mode","event_uuid","start_datetime","end_datetime","event_data","selected_event_status_uuid","patient_uuid","site_uuid","dateString","get_date_string","startTimeString","get_time_string","diff","asMinutes","appointment","appointmentDate","toDate","notes","location","reject","newAppointment","process_save_results","display_errors","error_message","error","message","validation_error_array","validationErrors","Array","add_standard_error","_i","validation_error_array_1","add_field_error","path","key","preferences","settings","setting","save_global_state","value","get_create_invoice_url","get_patient_demographic_url","event","get_create_chart_note_url","open_patient_dialog","edit_mode_callback","on_save_callback","load_error_link_patient_fn","open","animation","backdrop","size","controller","templateUrl","get_schedule_height","calendarApiAdapter_1","module","service","$scope","ospInfo","phone","contact","email","buildInfo","versionDisplayName","version","$uibModalInstance","qll","close","addQuickLink","qlForm","$valid","changePassword","$state","$filter","providerList","user","billingServiceTypes","loadedSettings","providerService","encounterForms","eforms","teams","groupNames","loadedApps","appService","$emit","pref","recentPatients","formGroupNames","label","billingServiceTypesMod","copy","splice","appointmentScreenForms","selected","formName","checked","appointmentScreenEforms","tabs","displayName","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","current","currentTab","tab","isActive","changeTab","go","save","newList","appointmentScreenQuickLinks","saveSettings","alert","cancel","selectEncounterForms","tmp","selectEForms","removeQuickLinks","openChangePasswordModal","window","openQuickLinkModal","selectedItem","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","getApps","errorMessage","securityService","me","$watch","getUser","newVal","openPopup","$log","Date","generateReport","includePastForms","searchProviders","val","searchTerm","active","firstName","lastName","updateProviderNo","item","model","p","age","response","region","reset","factory","$rootScope","load","msg","ReportNavigation","reports","iframeUrl","group","init","reportGroup","reportGroups","getReportGroups","reportSidebar","test","editDemographicSet","selectReport","getReports","groups","groupMap","report","currentReport","direct","width","height","total","currentPage","pageSize","startIndex","doImport","d","myUrl","remoteFacilityId","prevPage","nextPage","NgTableParams","demographicReadAccess","clearParams","Juno","Common","Util","hasRights","items","objectName","privilege","initTable","tableParams","page","count","sorting","Name","getData","promiseArray","integratorResults","searchIntegrator","all","demographicSearchResults","promiseErrors","dobMoment","isValid","reload","searchType","searchTermPlaceHolder","toggleParam","param","indexOf","loadRecord","hideNote","showIntegratorResults","$","$resource","$location","consultService","demographicService","summaryService","staticDataService","consult","initialize","hasRight","consultReadAccess","consultUpdateAccess","consultWriteAccess","referringDoctorList","toArray","faxList","sendToList","attachments","Consults","sortAttachmentDocs","getLetterheadList","letterheadList","letterhead","changeLetterhead","letterheadName","forEach","referringDoc","referringDoctor","demographic","extras","cellPhone","letterheadAddress","address","letterheadPhone","letterheadFax","fax","urgencies","getConsultUrgencies","statuses","getConsultResponseStatuses","hours","getHours","minutes","getMinutes","parseTime","time","tArray","split","appointmentHour","appointmentMinute","appointmentTime","consultChanged","$watchCollection","$on","confirm","preventDefault","writeToBox","boxId","summaryItem","boxData","addNewLine","clinicalInfo","concurrentProblems","currentMeds","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","invalidData","urgency","isUndefinedOrNull","setAppointmentTime","apptTime","now","set","openAttach","attachment","attachFiles","windowClass","attachmentsChanged","consultSaving","saveResponse","list","p_page1","sendFax","p_urgency","toTrimmedString","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","reqId","faxNumber","printPreview","printWin","document","p_attachments","write","p_clinicName","p_responseDate","formatDate","responseDate","p_referralDate","referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","alternativePhone","p_patientBirthdate","dateOfBirth","p_patientSex","sexDesc","p_patientHealthCardNo","hin","ver","p_patientChartNo","chartNo","p_patientAddress","city","province","postal","p_appointmentDate","p_appointmentTime","formatTime","p_reason","reasonForReferral","examination","impression","plan","allergies","$timeout","onRecordPage","lastResponse","team","numToReturn","parseInt","getAccessRights","getTeams","getActiveTeams","unshift","searchMrps","mrpNo","updateMrpNo","Number","mrpName","getProvider","doSearch","updateDemographicNo","demographicName","checkAll","checkNone","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","ReferralDate","getSavedSearchParams","_params","perPage","myRegexp","match","exec","sortColumn","sortDirection","tmpSearch","searchResponses","meta","j","statusDescription","urgencyDescription","urgencyColor","hideSearchPatient","srhDemoNo","srhMrpNo","referralStartDate","referralEndDate","appointmentStartDate","appointmentEndDate","countPerPage","toPage","serviceList","getConsultRequestStatuses","getDemographic","demographicId","serviceId","specialists","spec","professionalSpecialist","oldVal","changeService","index","selectedIndex","getAllergies","patientWillBook","setESendEnabled","eSendEnabled","eDataUrl","trim","valid","saveRequest","finally","saveAndFax","noNull","eSend","eSendRequest","saveAndPrint","print","JSON","stringify","searchParams","searchDemoNo","setSearchParams","$current","srhStatus","srhTeam","srhRefStartDate","getTime","srhRefEndDate","srhApptStartDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","getSavedSearchVals","search1","searchRequests","refDate","setMonth","getMonth","outstanding","sortMode","popup","vheight","vwidth","varpage","winname","windowprops","opener","self","atth","patientName","attachedDocs","selectedAttachedDoc","consultId","getResponseAttachments","availableDocs","selectedAvailableDoc","openDoc","doc","attach","attached","detach","done","getRequestAttachments","removeIndex","map","documentNo","documentType","selectionIndex","reportByTemplateService","k2aService","k2aActive","k2aReports","K2A_URL","dtOptions","checkStatus","isK2AInit","getAllK2AReports","saveK2AReport","getK2AReportById","refreshParent","openK2AUrl","getK2AUrl","href","onunload","notifications","readMore","notif","getMoreNotification","archive","ackNotification","getNotifications","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","clinicName","getPreventionRulesList","getCurrentPreventionRulesVersion","preventionRulesList","loadPreventionRuleById","prevSet","increasePrevListQuantity","initK2A","info","statusList","appointmentUpdate","appointmentWriteAccess","getStatus","providerName","editProvider","showProviderFormControl","provider","updateProvider","needsUpdate","cancelProviderUpdate","showAppointmentHistory","appointmentHistory","noShowAppointment","cancelAppointment","apptDate","types","formattedName","resources","critical","getTypes","selectType","validate","t","showErrors","startTime12hWithMedian","messagesFactory","keyBinding","parentScope","editMode","eventUuid","availabilityTypes","scheduleTemplates","eventData","timeInterval","lastEventLength","patient","patientModel","autocompleteValues","activeTemplateEvents","eventStatuses","eventStatusOptions","selectedEventStatus","defaultEventStatus","selectedSiteName","timepickerFormat","fieldValueMapping","start_date","end_date","displayMessages","initialized","working","hasPermission","momentStart","momentEnd","formatMomentTime","formatMomentDate","setActiveTemplateEvents","hasOwnProperty","setSelectedEventStatus","initPatientAutocomplete","selected_site_name","adjustEndDatetime","element","autocomplete","init_autocomplete_values","fillData","get_inclusive_days","days","momentDay","clone","hour","minute","isBefore","add","getDateAndTimeMoment","formattedTime","active_events","getDatetimeNoTimezoneMoment","isAfter","length_minutes","new_event_length","updateLastEventLength","eventLength","validateForm","validateDateString","validateTimeString","has_errors","startDatetime","endDatetime","isSame","addStandardError","hasErrors","saveEvent","processSaveResults","deleteEvent","time_str","newStartDate","oldStartDate","newStartTime","oldStartTime","newEndDate","oldEndDate","newEndTime","oldEndTime","loadedNewPhoto","preview_patient_image","new_photo","uploadPhoto","isWorking","isInitialized","isPatientSelected","clearPatient","onSelectPatient","$item","$model","$label","$event","setEventLength","refetchEvents","hasStandardErrors","addGenericFatalError","delete","dismiss","saveAndBill","openCreateInvoice","viewInvoices","open_view_invoices","createPatient","create_patient_dialog","calendar_api_adapter","openPatientDialog","onPatientModalSave","modify_patient","modify_patient_dialog","keyBindSettings","ctrl+enter","title","tooltip","callback_fn","target","ctrl+shift+enter","bind_key_global","focusService","uiCalendarConfig","snakeAppointmentData","snakeAvailabilityType","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_0__","calendarName","calendarLoading","uiConfig","uiConfigApplied","eventSources","selectedSchedule","selectedTimeInterval","cpCalendarControl","globalState","schedules","scheduleOptions","resourceOptions","siteOptions","defaultEventColor","defaultTimeInterval","timeIntervalOptions","defaultAutoRefreshMinutes","defaultCalendarView","rotateStatuses","resourceOptionHash","sites","openingDialog","dialog","defaultDate","selectedDate","calendar","defaultView","calendarViewName","loadAvailabilityTypes","loadEventStatuses","loadScheduleOptions","loadSiteOptions","loadDefaultSelections","loadSelectedSchedules","setCalendarResources","setEventSources","initEventsAutoRefresh","applyUiConfig","calendars","isSchedulingEnabled","hasSchedules","hasSites","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","isDefined","selectedSite","viewName","getGlobalState","getGlobalPreferenceSetting","saveGlobalState","calendarEvents","timezone","callback","toString","promise_array","loadScheduleEvents","results_array","schedule_events","concat","apply","err","showTimeIntervals","onSiteChanged","onScheduleChanged","getSelectedSchedule","onTimeIntervalChanged","slotDuration","slotLabelInterval","changeView","view","reload_schedules","updateCalendarView","showLegend","closed","fullCalendar","isAgendaView","selectedEventStatusUuid","patientUuid","siteUuid","displayErrors","validationErrorArray","get_loaded_schedule","window_scope","$window","callCalendarMethod","args","isFunction","selectedUuid","providerNos","loadSchedule","selectedResources","buildSelectedResources","resultsArray","setCalendarLoading","isLoading","getLoadedSchedule","timeIntervalMinutes","getSelectedResources","getSelectedTimeInterval","minTime","getScheduleMinTime","maxTime","getScheduleMaxTime","scrollTime","rawResults","snakeAppointmentStatuses","snakeScheduleResults","getIconPath","statusModifier","modifierString","onEventRender","eventSiteHtml","eventSite","eventStatusHtml","eventStatus","escapeHtml","eventInvoiceHtml","eventDetails","eventDetailsHtml","eventDemographicHtml","hasOneOfPermissions","eventNoteHtml","eventTagsHtml","tagClass","hasClass","join","find","html","onViewRender","selected_date","css","afterRender","click","rotateEventStatus","calEvent","rotate_event_status","rotate_statuses","event_status_color","event_class","updateEvent","openCreateEventDialog","jsEvent","resource","modalSchedule","default_event_status","bindKeyGlobal","catch","res","editModeCallback","onSaveCallback","loadErrorLinkPatientFn","onEventClicked","is","openViewInvoices","parent","openPatientDemographic","openCreateChartNote","openEditEventDialog","onEventDrop","delta","revertFunc","ui","dropEvent","onEventResize","set_calendar_loading","resize_event","update_event","scheduleData","loadSites","refresh","clearInterval","isIntegerString","setInterval","nowIndicator","header","left","center","right","allDaySlot","slotLabelFormat","loading","selectable","select","eventClick","eventRender","viewRender","eventAfterAllRender","editable","eventDrop","eventResize","tickler","ticklerNote","noteService","originalNote","note","saveTicklerNote","ticklerService","demographicSearch","template","serviceDateDate","serviceDateTime","suggestedTextId","priorities","timepicker","defaultTime","getTextSuggestions","textSuggestions","suggestedText","taskAssignedTo","priority","givenDate","givenTime","setHours","get","setMinutes","serviceDate","demo","taskAssignedToName","setSuggestedText","addMonthsFromNow","num","ticklerWriteAccess","ticklerUpdate","serviceDateInput","serviceTimeInput","showUpdates","showComments","showCommentFormControl","selectedStatus","newValue","newDate","finalVal","updateTaskAssignedTo","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","dp","tp","serviceTime","isNaN","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","updateDate","newComment","cancelCommentUpdate","saveChanges","postData","update","completeTickler","setCompleted","deleteTickler","setDeleted","printTickler","providers","ticklerAPI","ticklerReadAccess","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","getTicklerNote","getMe","editNote2","editor","noteId","observationDate","revision","printArea","input","tableName","tableId","uxService","getTrackerUrl","resizeIframe","iframe","h","contentWindow","scrollHeight","formService","currentFormList","currentForm","currentlistId","isUndefined","formlists","changeTo","listId","getAllFormsByHeading","debug","viewFormState","getElementById","hasChildNodes","removeChild","firstChild","rnd","Math","round","random","win","pymParent","pym","Parent","getListClass","getActiveFormClass","formId","keypress","altKey","currIdx","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","buildDate","day","dateEmpty","date3Valid","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","hcParts","phoneNum","defPhTitle","prefPhTitle","properties","$parent","recordCtrl","initDemographicVars","checkAccess","getBySecurityRole","doctors","nurses","midwives","getDemographicContacts","demoContacts","demoContactShow","demoContactPros","scrNotes","substring","lastIndexOf","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrPaperChartArchivedDate","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","waitingListNames","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","genders","getGenders","titles","getTitles","provinces","getProvinces","countries","getCountries","engFre","getEngFre","spokenlangs","getSpokenLanguages","rosterTermReasons","getRosterTerminationReasons","securityQuestions","getSecurityQuestions","rxInteractionLevels","getRxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","billregion","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","getStatusList","rosterStatusList","patientStatusList","calcAge","dobYear","dobMonth","dobDay","formatLastName","formatFirstName","setSwipeReady","validateHCSave","sin","effDate","hcRenewDate","rosterDate","rosterTerminationDate","patientStatusDate","dateJoined","onWaitingListSinceDate","canRead","cannotChange","checkAction","stopPropagation","oldValue","onbeforeunload","toUpperCase","readyForSwipe","swipecardMsg","swipecard","healthCardHandler","keycode","swipeCardData","namePos","endNamePos","isNumber","healthCardUpdateDemographics","validateHC","hcType","hcTypeColor","lastNameColor","firstNameColor","hinColor","verColor","hcSex","sex","sexColor","dateParts","dobYearColor","dobMonthColor","dobDayColor","swipeDate","effDateColor","hcRenewDateColor","hinExpDate","HCValidation","responseDescription","responseCode","checkHin","checkHinVer","checkDate","charAt","checkYear","checkMonth","daysOfMonth","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","getFullYear","getDate","dateValid","isPostalComplete","isPostalValid","resetEditState","RegExp","checkEmail","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","n","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchName","searchReferralDocs","searchReferralDocsRefNo","searchRefNo","searchReferralDoctors","referralDoctors","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doSave","isUniqueHC","success","saving","newDemoExtras","updateDemographic","maxDaysOfMonth","s","demoContact","contactShow","role","sdm","ec","category","obj","formListId","adminAccess","adminEformAccess","hasAdminAccess","encounterFormlist","formGroups","getFormGroups","formOptions","favouriteGroup","getFavouriteFormGroup","getFormOptions","getCompletedEncounterForms","getSelectedEncounterForms","queryName","formValue","animate","scrollTop","maxheight","max","offsetHeight","style","isEmpty","currentEformGroup","setCurrentEFormGroup","mod","openFormFromGroups","formOption","opt","atleastOneItemSelected","extra","docIds","isChecked","getGroupListClass","grp","currentState","keyCode","saveSignNote","cancelNoteEdit","clearChanges","$interval","action","diseaseRegistryService","quickLists","summaryCode","groupNotesForm","assignedCMIssues","encounterNote","position","annotation_attrib","getIssueQuickLists","addDxItem","issue","codingSystem","findDxIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","displayIssueId","issueCode","getIssueId","issueId","displayGroupNote","itemId","getIssueNote","editorNames","groupNoteExt","setAvailablePositions","removeEditingNoteFlag","itemExtra","availablePositions","changeNote","saveGroupNotes","cpp","isSigned","appointmentNo","encounterType","encounterTime","assignedIssues","saveIssueNote","transitionTo","inherit","notify","removeGroupNoteIssue","unchecked","doSetEditingNoteFlag","setEditingNoteFlag","editingNoteId","itvSet","itvCheck","checkEditNoteNew","removeIssue","restoreIssue","archiveGroupNotes","archived","openRevisionHistory","searchIssues","assignIssue","getIssue","isSelected","addToDxRegistry","pageOptions","printType","dates","selectedWarning","atleastOneSelected","printToday","cancelPrint","sendToPhr","queryString","selectedList","ops","columnOne","modules","columnThree","selectedNotes","notelist","busy","noteFilter","currentFilter","onlyNotes","onlyMine","cannotAdd","openRx","demoNo","openAllergies","openPreventions","openAssessments","addMoreItems","getNotesFrom","editNote","editGroupNote","findGroupNote","gotoState","moduleList","summaryItems","k","currentEditNote","isNoteBeingEdited","noteFound","notecount","isRegularNote","rxAnnotation","eformData","encounterForm","invoice","setColor","border-left-color","showNoteHeader","showNote","deleted","getNoteHeader","noteObj","trackerUrl","toggleList","displaySize","showMoreItems","isSectionExpanded","isSectionEmpty","isUnsignedEncounterNote","getSummaryHeaders","fillItems","summaryLists","itemsToFill","getFullSummary","editGroupedNotes","viewEform","eFormId","viewDocument","documentId","itemArray","showPrintModal","toggleIsSelectedForPrint","zero","$localStorage","billingService","isNoteSaved","$storage","recordtabs2","fillMenu","menu","temp","currenttab2","isDefinedAndNotNull","state","demoId","timeout","saveUpdates","initNote","tmpSave","skipTmpSave","saveIntervalSeconds","totalSeconds","myVar","setTime","innerHTML","pad","valString","getCurrentTimerToggle","toggleTimer","removeClass","addClass","pasteTimer","ed","toggleNote","getCurrentNote","saveNote","issueDescriptions","isInArray","saveSignVerifyNote","isVerified","getBillingRegion","getDefaultView","saveSignBillNote","dxCode","apptNo","apptProvider","apptStartTime","dt","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","displayWarning","noteEditorText","searchTemplates","templates","encounterTemplateName","insertTemplate","getTemplate","encounterTemplateValue","options","magicVal","noteToEdit","$broadcast","mediumNavItemFilter","inverse","filterValue","inArray","updateData","Content-Type","admissions","reportingService","getDemographicSetList","sets","config","patientListConfig","saveConfiguration","Navigation","patientListState","statusCodeMap","Map","dateOptions","showWeeks","getStatuses","getAppointmentStatusDescriptionByStatusCode","statusCode","getAppointmentStatusColourByStatusCode","colour","today","opened","AddDays","noOfDays","switchDay","dateNew","formattedDate","changeApptList","changeApptDate","currenttab","tabItems","serviceMethod","getAppointments","patients","showFilter","addNewAppointment","viewAppointment","angularUtil","personaService","sidebar","goToRecord","encType","inMobileView","hidePatientList","query","isMoreActive","currentmoretab","showPatientList","changeMoreTab","moreTabItemsIndex","filter","moreTabItems","tabItemIndex","getMoreTabClass","numberOfPages","nPages","ceil","changePage","pageNum","process","resultList","getRecentPatientList","recentPatientList","getPatientListConfig","numberOfApptstoShow","getTabItems","manageConfiguration","setPatientListConfig","Promise","prefs","dashboardPreferences","updateDashboardPreferences","messageService","inboxService","displayDate","k2aFeedActive","busyLoadingData","getDashboardPreferences","inboxTableParams","getDashboardItems","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","removeK2AComment","agreeId","agreeCount","disagree","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","postK2AComment","post","commentCount","comments","updateTicklers","creator","overdueOnly","totalTicklers","ticklers","arr","updateMessages","getUnread","totalMessages","messages","updateReports","inbox","totalInbox","startPoint","numberOfRows","getK2aFeed","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","parse","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","programService","submitDisabled","getPrograms","programs","admissionProgramId","ngModelContoller","isCorrectDate","demoRetVal","saveDemographic","ok","capName","unAckLabDocTotal","unreadMessageTotal","billRegion","searchRights","newDemographicRights","messageRights","getDashboardMenu","menus","dashboardMenu","getNavBar","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","getUnAckLabDocCount","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","new_value","isTypeaheadSearchQuery","moreResults","goToPatientSearch","searchQuery","goToPatientRecord","getUnreadCount","onPatientSearch","transition","newWindow","wname","qs","openNewWindow","openMessenger","newDemographic","changeProgram","programId","setCurrentProgram","smallNavItemFilter","setUser","directive","restrict","require","link","scope","attrs","ctrl","$formatters","pad_length","caZeroPad","$parsers","on","e","$parse","scrollHandler","resizeHandler","modelSetter","fileModel","bind","$apply","files","$compile","$eval","compileHtml","jsp","contents","$document","eventName","attribute","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","scrollLeft","update_search_results_footer","offset","top","ngModel","toolbar","container","image-tooltip","link-tooltip","theme","extraOptions","quill","extend","Quill","children","$render","source","getHTML","$setViewValue","setHTML","$viewValue","pagination","change_page_callback","mode","change_page","page_number","current_page","total_pages","expand_ellipsis","go_to_page_num","close_ellipsis","go_to_page","page_int","key_combo","key_bind_settings","hierarchy","parents","each","attributes","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","field_value_map","success_message","field_value_map_label_key","display_field_errors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","has_sub_errors","isString","isObject","error_link_has_function","error_link","error_links","execute_error_link_fn","should_display_field_errors","has_field_errors","attr","field_controllers","field","ignore","ignore_focus_field","form_nav","focus_field","helper","default_scope","true_text","false_text","true_value","false_value","resolve_template","default_link_function","default_controller","minute_step","picker_container","toggle_widget","minuteStep","icons","up","down","rows","max_characters","old_value","include_empty_option","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","change_fn","merge_title_messages","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","on_focus","open_date_picker","focus_fn","on_click","new_is_multi_date","on_focus_fn","input_box","caDatePickerId","dropdown","footer","replaceWith","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","ngModelController","text","tempValue","parseFloat","toFixed","currencyFilter","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","global_state","min_length_zero_types","placeholder","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","ca_exclude_list","search_field","keys","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","input_placeholder","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","create_on_not_found_fn","temp_model","on_change","build_model_object","on_blur","model_on_focus","blur_fn","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","in_list","ii","exclude_item","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","disabled","momentDate","constant","$locale","sources","extraEventSignature","calendarWatchEvent","noop","eventSerialId","eventFingerprint","_id","extraSignature","isMoment","unix","allDay","sourceSerialId","sourceEventsSerialId","sourceFingerprint","fp","__id","allEvents","arraySources","srcLen","extEvent","eI","changeWatcher","arraySource","tokenFn","getTokens","token","el","array","subtractAsSets","a","b","inB","subscribe","onArrayChanged","newTokens","oldTokens","replacedTokens","removedTokens","removedToken","newToken","onRemoved","onChanged","addedTokens","onAdded","applyChanges","getFullCalendarConfig","calendarSettings","functionToWrap","$root","$$phase","arguments","getLocaleConfig","fullCalendarConfig","lang","useNgLocale","tValues","r","dtf","DATETIME_FORMATS","monthNames","MONTH","monthNamesShort","SHORTMONTH","dayNames","DAY","dayNamesShort","SHORTDAY","enabled","elm","sourcesChanged","eventSourcesWatcher","eventsWatcher","destroyCalendar","initCalendar","stick","clientEvents","clientEvent","uiCalendar","localeFullCalendarConfig","options2","o","elem","draggable","axis","containment","resizable","handles","minHeight","minWidth","maxWidth","innerWidth","maxHeight","innerHeight","evt","newHeight","showIcon","disableInput","openDatepicker","typeaheadHelper","defaultTypeaheadScope","initTypeahead","forceSelection","findMatches","formatMatchSelection","typeaheadLabel","optionsTemplateUrl","quickSearch","matches","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","searchField","typeaheadModelOptions","debounce","default","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","onSelect","onBlur","onChange","createDummySelection","onSearch","onAdd","slice","wordwise","tail","substr","lastspace","years","months","junoHttp","apiPath","ServiceHelper","configHeaders","searchSpecialists","itemsToReturn","getDisplayProperties","ticklerIds","limit","getRiskFactors","langs","reasons","questions","levels","u","configHeadersWithCache","listOfItems","isAllowedAccessToPatientRecord","permission_array","permission","results_hash","meta_hash","results_object","has_results","error_type","equals","per_page","searchText","searchMode","getByType","getSettings","healthCardNo","versionCode","numberToReturn","noteConfig","getNoteExt","ticklerId","noteUUID","userId","transferObj","commentItem","commentId","del","global_settings","interface_preferences","scheduler_license_key","heading","getAllEncounterForms","getAllEForms","getGroupNames","selector","first_form_input","first","first_error_input","opts","first_alert","scroll_offset","form_group_class","label_size","input_size","text_length","hide_label_colon","hint","tab_index","warning_message","depends_on_field","depends_on_value","hide","base_default_template","title_array","title_string","$element","$attrs","errors_hash","DisplayMessages","getQuickLists","disease","issueToSend","jsonData","listType","contactCategory","put","getRequest","requestId","followUpDate","getNewRequest","request","getResponse","responseId","getReferralPathwaysByService","serviceName","getUniqueServiceTypes","errorsz","autocomplete_values","dob","http_util","request_hash","success_function","errors_function","progress","request_result","call","mergeHash","$stateProvider","$urlRouterProvider","otherwise","dynamic","arrayOfDocs","sort","doc1","doc2","Accept","cache","datetime_format","datetime_no_timezone_format","time_format","date_format","dayofweek_format","object","isBlank","pad0","getDateMoment","date_string","utc","getTimeMoment","time_string","timeString","datetime_string","fieldDisplayName","required","addFieldError","line","mssg","currDate","baseHash","toMerge","objectArrayIndexOf","property","len","string","str","entityMap","&","<",">","\"","'","/","messages_hash","field_errors_label_map","field_errors_label_map_key","extra_info","saving_message","force_field_error_arrays","merge","display_messages","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","has_standard_errors","standard_errors","add_generic_fatal_error","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","field_errors","prepend_label","has_one_of_field_error","has_field_error","has_indexed_field_error","field_error_string","concat_string","remove_field_error","has_error_links","add_error_link","out_field_errors","merge_messages","merge_display_messages","standard_infos","windowName","popup2","w","getElementsByTagName","clientWidth","clientHeight","winRefs","resizeTo","confirmNGo","showHideItem","display","showItem","hideItem","validDate","validDateText","completeRawDate","delimiter","dateArray","dateObject","validDateFieldsByClass","parentEle","datefields","getElementsByClassName","getMouseCoords","posx","posy","pageX","pageY","clientX","clientY","documentElement","master","chkList","oscarLog","grabEnter","callb","which","eval","isNumericInt","sText","chara","isNumeric","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","arrReturnElements","oAttributeValue","getAttribute"],"mappings":"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","file":"bundle.4cb2beff2f9c79586655.js","sourcesContent":["/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param newAppointmentTo1 \n     */\n    public addAppointment (newAppointmentTo1?: models.NewAppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseAppointmentTo1> {\n        const localVarPath = this.basePath + '/schedule/add';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: newAppointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public deleteAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<{}> {\n        const localVarPath = this.basePath + '/schedule/deleteAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param year \n     * @param month \n     * @param providerNo \n     */\n    public fetchMonthlyData (year: number, month: number, providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/fetchMonthly/{providerNo}/{year}/{month}'\n            .replace('{' + 'year' + '}', encodeURIComponent(String(year)))\n            .replace('{' + 'month' + '}', encodeURIComponent(String(month)))\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'year' is not null or undefined\n        if (year === null || year === undefined) {\n            throw new Error('Required parameter year was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'month' is not null or undefined\n        if (month === null || month === undefined) {\n            throw new Error('Required parameter month was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling fetchMonthlyData.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param demographicNo \n     */\n    public findExistAppointments (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling findExistAppointments.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public getAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/getAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param date \n     */\n    public getAppointmentsForDay1 (providerNo: string, date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/{providerNo}/day/{date}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerId \n     * @param startDate \n     * @param endDate \n     * @param site \n     */\n    public getCalendarEvents (providerId: number, startDate?: string, endDate?: string, site?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarEvent> {\n        const localVarPath = this.basePath + '/schedule/calendar/{providerId}'\n            .replace('{' + 'providerId' + '}', encodeURIComponent(String(providerId)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerId' is not null or undefined\n        if (providerId === null || providerId === undefined) {\n            throw new Error('Required parameter providerId was null or undefined when calling getCalendarEvents.');\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public updateAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/updateAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentStatus (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateStatus'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentType (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateType'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentType.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","\nimport {ScheduleApi} from \"../../generated/api/ScheduleApi\";\nimport {\n\tAppointmentTo1,\n\tCalendarAppointmentStatus, NewAppointmentTo1, RestResponseAppointmentTo1\n} from \"../../generated\";\nimport {modal} from 'angular-ui-bootstrap/src/modal';\nimport * as moment from 'moment';\nimport {\n\tIHttpParamSerializer,\n\tIHttpResponse,\n\tIHttpService,\n\tIQService\n} from \"../../node_modules/@types/angular\";\nimport {IStateParamsService} from \"../../node_modules/@types/angular-ui-router\";\nimport {IModalService} from \"../../node_modules/@types/angular-ui-bootstrap\";\n\nexport class CalendarApiAdapter\n{\n\tstatic $inject = [\n        '$q',\n        '$stateParams',\n        '$uibModal',\n\t\t'$http',\n\t\t'$httpParamSerializer',\n\n        'resultsService',\n\n        'cpCalendar.Util',\n\n\t\t'autoCompleteService',\n        'demographicsService',\n        'scheduleService',\n        'globalStateService',\n\t\t'focusService',\n\t];\n\n\tconstructor(\n        private $q: IQService,\n        private $stateParams: IStateParamsService,\n        private $uibModal: IModalService,\n        private $http: IHttpService,\n        private $httpParamSerializer: IHttpParamSerializer,\n\n        private results_factory,\n\n        private util,\n\n        private autoCompleteService,\n\t\tprivate demographicsService,\n        private scheduleService,\n        private globalStateService,\n\t\tpublic focus\n\t){}\n\n\n\tevent_statuses: null;\n\tdefault_event_color: null;\n\n\tpatient_model = {\n\t\tuuid: null,\n\t\tfull_name: null,\n\t\thas_photo: true,\n\t\tpatient_photo_url: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\tclear: function clear(){\n\t\t\tthis.uuid = null;\n\t\t\tthis.full_name = null;\n\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\tthis.data.birth_date = null;\n\t\t\tthis.data.health_number = null;\n\t\t\tthis.data.ontario_version_code = null;\n\t\t\tthis.data.phone_number_primary = null;\n\t\t},\n\t\tfill_data: function fill_data(data){\n\t\t\tthis.uuid = data.uuid;\n\t\t\tthis.full_name = data.full_name;\n\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=' + (data.uuid ? data.uuid : 0);\n\t\t\tthis.data.birth_date = data.birth_date;\n\t\t\tthis.data.health_number = data.health_number;\n\t\t\tthis.data.ontario_version_code = data.ontario_version_code;\n\t\t\tthis.data.phone_number_primary = data.phone_number_primary;\n\t\t},\n\t\tupload_photo: function upload_photo(file){},\n\t\tdata: {\n\t\t\tbirth_date: null,\n\t\t\thealth_number: null,\n\t\t\tontario_version_code: null,\n\t\t\tphone_number_primary: null\n\t\t}\n\t};\n\n\tscheduleApi = new ScheduleApi(this.$http, this.$httpParamSerializer, 'http://localhost:9090/ws/rs');\n\n\n\tpublic searchPatients(term)\n\t{\n\t\tvar search = {\n\t\t\ttype: 'Name',\n\t\t\t'term': term,\n\t\t\tstatus: 'active',\n\t\t\tintegrator: false,\n\t\t\toutofdomain: true\n\t\t};\n\n\t\treturn this.demographicsService.search(search, 0, 25).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push({\n\t\t\t\t\t\tvalue_field: 'uuid',\n\t\t\t\t\t\tdata: this.autocompleteService.formatDemographic(results.content[x])\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t}\n\n\tpublic load_schedule_events(schedule, siteName, start, end, view_name, schedule_templates,\n\t\tevent_statuses, default_event_color, availability_types)\n\t{\n\t\t//console.log(\"FETCHING: \" + providerId + \" \" + start.format(\"YYYY-MM-DD\") + \" \" + end.subtract(1, \"seconds\").format(\"YYYY-MM-DD\"));\n\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar providerId = schedule.uuid;\n\n\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t// the end time to convert to the correct date.\n\t\tvar startDateString = start.format(\"YYYY-MM-DD\");\n\t\tvar endDateString = end.subtract(1, 'seconds').format(\"YYYY-MM-DD\");\n\n\t\tthis.scheduleService.getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDateString,\n\t\t\tendDateString,\n\t\t\tsiteName\n\t\t).then((results) =>\n\t\t{\n\t\t\t// Transform from camel to snake.  Normally this wouldn't need to happen, but\n\t\t\t// this is an external library that requires a certain format.\n\t\t\tdeferred.resolve({data: this.snake_schedule_results(results, providerId)});\n\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate snake_appointment_data(data, providerId)\n\t{\n\t\tif(data == null)\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\tconsole.log(data);\n\t\treturn {\n\t\t\tappointment_uuid: data.scheduleUuid,\n\t\t\tschedule_uuid: providerId,\n\t\t\tevent_status_uuid: data.eventStatusUuid,\n\t\t\tevent_status_modifier: data.eventStatusModifier,\n\t\t\tstart_time: data.startTime,\n\t\t\tend_time: data.endTime,\n\t\t\tsite: data.site,\n\t\t\treason: data.reason,\n\t\t\tnum_invoices: data.numInvoices,\n\t\t\tdemographics_patient_dob: data.demographicPatientDob,\n\t\t\tdemographics_patient_name: data.demographicPatientName,\n\t\t\tdemographics_patient_phone: data.demographicPatientPhone,\n\t\t\tdemographics_patient_uuid: data.demographicPatientUuid,\n\t\t\tdemographics_practitioner_uuid: data.demographicPractitionerUuid,\n\t\t\ttag_names: data.tagNames,\n\t\t\ttag_self_booked: data.tagSelfBooked,\n\t\t\ttag_self_cancelled: data.tagSelfCancelled,\n\t\t\ttag_system_codes: data.tagSystemCodes\n\t\t};\n\t}\n\n\tprivate snake_availability_type(data)\n\t{\n\t\tif(data == null)\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\treturn {\n\t\t\tname: data.name,\n\t\t\tcolor: data.color,\n\t\t\tpreferred_event_length_minutes: data.preferredEventLengthMinutes,\n\t\t\tsystem_code: data.systemCode,\n\t\t};\n\t}\n\n\tprivate snake_schedule_results(results, providerId)\n\t{\n\t\tif(!angular.isArray(results))\n\t\t{\n\t\t\treturn results;\n\t\t}\n\n\t\tvar snake_results = [];\n\n\t\tfor(var i = 0; i < results.length; i++)\n\t\t{\n\t\t\tvar result = results[i];\n\t\t\tsnake_results.push({\n\t\t\t\tresourceId: result.resourceId,\n\t\t\t\tstart: result.start,\n\t\t\t\tend: result.end,\n\t\t\t\tcolor: result.color,\n\t\t\t\trendering: result.rendering,\n\t\t\t\tschedule_template_code: result.scheduleTemplateCode,\n\t\t\t\tclassName: result.className,\n\t\t\t\tavailability_type: this.snake_availability_type(result.availabilityType),\n\t\t\t\tdata: this.snake_appointment_data(result.data, providerId),\n\t\t\t});\n\t\t}\n\n\t\treturn snake_results;\n\t}\n\n\tpublic load_schedule_templates()\n\t{\n\t\t// XXX: can't implement this because it requires the date range and provider number\n\t\t// because oscar stores it's templates per day and provider\n\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar schedule_templates = {};\n\t\tvar promise_array = [];\n\n\t\tdeferred.resolve([]);\n\t\t/*\t\t\t\tschedule_template_model.list().then(\n\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor(var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar result = results.data[i];\n\t\t\t\t\t\t\t\t\tpromise_array.push(schedule_template_model.load(result.uuid));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(\n\t\t\t\t\t\t\tfunction success()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$q.all(promise_array).then(\n\t\t\t\t\t\t\t\t\tfunction success(results_array)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor(var i=0; i<results_array.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar result = results_array[i].data;\n\t\t\t\t\t\t\t\t\t\t\tschedule_templates[result.uuid] = result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdeferred.resolve(schedule_templates);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});*/\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic load_availability_types()\n\t{\n\t\tvar deferred = this.$q.defer();\n\t\tvar availability_types = {};\n\n\t\tthis.scheduleService.getScheduleTemplateCodes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\t/*\tExample JSON result (P is the oscar scheduletemplatecode.code)\n\t\t\t\tvar example_result = {\n\t\t\t\t\tP: {\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\tname: \"Do Not Book\",\n\t\t\t\t\t\tpreferred_event_length_minutes: null,\n\t\t\t\t\t\tsystem_code: \"unavailable\",\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\t*/\n\n\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\tavailability_types[result.code] = {\n\t\t\t\t\t\tcolor: result.color,\n\t\t\t\t\t\tname: result.description,\n\t\t\t\t\t\tpreferred_event_length_minutes: result.duration,\n\t\t\t\t\t\tsystem_code: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdeferred.resolve(availability_types);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic load_event_statuses()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\t//this.scheduleService.getAppointmentStatuses().then(\n\t\tthis.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t(results) => {\n\t\t\t\tdeferred.resolve(CalendarApiAdapter.snake_appointment_statuses(results.data.body));\n\t\t\t}\n\t\t);\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate static snake_appointment_statuses(data: Array<CalendarAppointmentStatus>)\n\t{\n\t\tif (!angular.isArray(data))\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\tvar snake_data = [];\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tsnake_data.push({\n\t\t\t\tuuid: data[i].displayLetter,\n\t\t\t\tname: data[i].name,\n\t\t\t\tdisplay_letter: data[i].displayLetter,\n\t\t\t\tcolor: data[i].color,\n\t\t\t\ticon: data[i].icon,\n\t\t\t\trotates: data[i].rotates,\n\t\t\t\tsystem_code: data[i].systemCode,\n\t\t\t\tsort_order: data[i].sortOrder,\n\t\t\t});\n\t\t}\n\n\t\treturn snake_data;\n\t}\n\n\tpublic load_sites()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.scheduleService.getSites().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tvar out = [];\n\t\t\t\tif(angular.isArray(results))\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(out);\n\t\t\t}\n\t\t)\n\n\t\treturn deferred.promise;\n\t}\n\n\n\tpublic load_schedule_options()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.scheduleService.getScheduleGroups().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t{\n\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(results);\n\t\t\t}\n\t\t);\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic get_selected_schedule(schedule_options)\n\t{\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default (first in the list)\n\t\tvar selected_uuid = null;\n\t\tif(this.$stateParams.default_schedule)\n\t\t{\n\t\t\t// Passed in url string\n\t\t\tselected_uuid = this.$stateParams.default_schedule;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselected_uuid = this.get_global_state('schedule_default');\n\t\t}\n\t\tif(selected_uuid === null)\n\t\t{\n\t\t\tselected_uuid = this.get_global_preference_setting('schedule_default');\n\t\t}\n\n\t\tif(this.util.exists(selected_uuid))\n\t\t{\n\t\t\t// only choose it if it can be found in the options list\n\t\t\tfor(var i = 0; i < schedule_options.length; i++)\n\t\t\t{\n\t\t\t\tif(selected_uuid === schedule_options[i].uuid)\n\t\t\t\t{\n\t\t\t\t\treturn schedule_options[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(schedule_options.length > 0)\n\t\t{\n\t\t\t// select the first schedule in the list by default\n\t\t\treturn schedule_options[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic get_selected_resources(resource_options)\n\t{\n\t\treturn [];\n\n\t\t/*\tXXX: probably not using this because we don't select resources in juno\n\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default (all the non-doctor schedules)\n\n\t\tvar custom_resource_list =\n\t\t\tthis.get_global_state('schedule_resources');\n\n\t\tif(custom_resource_list === null)\n\t\t{\n\t\t\tcustom_resource_list = this.get_global_preference_setting(\n\t\t\t\t'schedule_resources');\n\t\t}\n\n\t\treturn this.get_group_resources(\n\t\t\tcustom_resource_list, resource_options);*/\n\t}\n\n/*\tpublic get_group_resources(default_selections, schedules)\n\t{\n\t\tvar has_defaults = this.util.exists(default_selections) && default_selections.length > 0;\n\n\t\tvar selected_resources = [];\n\t\tfor(var i = 0; i < schedules.length; i++)\n\t\t{\n\t\t\tvar schedule_data = schedules[i];\n\n\t\t\tif(has_defaults &&\n\t\t\t\tdefault_selections.indexOf(schedule_data.uuid) > -1)\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t\telse if(!has_defaults &&\n\t\t\t\t!this.util.exists(schedule_data.demographics_practitioner_uuid))\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t}\n\n\t\t// if default selections list is set but the schedules in it no longer exist,\n\t\t// or if there are no settings and no non-doctor schedules,\n\t\t// then could end up with nothing selected, so select everything\n\t\tif(selected_resources.length === 0)\n\t\t{\n\t\t\tfor(var j = 0; j < schedules.length; j++)\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t}\n\n\t\treturn selected_resources;\n\t}*/\n\n\tpublic get_selected_time_interval(\n\t\ttime_interval_options, default_time_interval)\n\t{\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default\n\n\t\tvar selected_time_interval = null;\n\n\t\tvar time_interval = this.get_global_state('schedule_time_interval');\n\t\tif(time_interval === null)\n\t\t{\n\t\t\ttime_interval = this.get_global_preference_setting(\n\t\t\t\t'schedule_time_interval');\n\t\t}\n\n\t\tif(this.util.exists(time_interval))\n\t\t{\n\t\t\t// only choose it if it can be found in the options list\n\t\t\tfor(var i = 0; i < time_interval_options.length; i++)\n\t\t\t{\n\t\t\t\tif(time_interval === time_interval_options[i])\n\t\t\t\t{\n\t\t\t\t\tselected_time_interval = time_interval_options[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(selected_time_interval === null)\n\t\t{\n\t\t\treturn default_time_interval;\n\t\t}\n\n\t\treturn selected_time_interval;\n\t}\n\n\tpublic get_schedule_min_time() {\n\t\t// restrict day view if user preferences are set\n\n\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\treturn \"08:00\";\n\t}\n\n\tpublic get_schedule_max_time()\n\t{\n\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\t\treturn \"20:00\";\n\t}\n\n\n\tpublic load_schedule(providerId: string, )\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\t// TODO: fill up availabilities and relations, or figure out how to show that info without them\n\t\tvar schedule = {\n\t\t\tuuid: providerId,\n\t\t\tavailabilities: [], // TODO: figure out if these have a Juno equivalent, I don't think\n\t\t\t\t\t\t\t\t// TODO: they do.  They are things like holidays and vacation days\n\t\t\trelations: [],\n\t\t\tevents: []\n\t\t};\n\n\t\tdeferred.resolve({data: schedule});\n\n\t\treturn deferred.promise;\n\t}\n\n\n\tpublic save_event(\n\t\tedit_mode: boolean,\n\t\tevent_uuid: string,\n\t\tstart_datetime: moment.Moment,\n\t\tend_datetime: moment.Moment,\n\t\tevent_data: {reason: string, description: string},\n\t\tschedule_uuid: string,\n\t\tselected_event_status_uuid: string,\n\t\tpatient_uuid: number,\n\t\tsite_uuid: string\n\t)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar dateString: string = this.util.get_date_string(start_datetime);\n\t\tvar startTimeString: string = this.util.get_time_string(start_datetime, \"HH:mm\");\n\t\tvar endTimeString: string = this.util.get_time_string(end_datetime, \"HH:mm\");\n\t\tvar duration: number = moment.duration(end_datetime.diff(start_datetime)).asMinutes();\n\n\n\t\tif(edit_mode)\n\t\t{\n\t\t\tvar appointment: AppointmentTo1 =  {\n\t\t\t\t\"id\": 0,\n\t\t\t\t\"providerNo\": schedule_uuid,\n\t\t\t\t\"appointmentDate\": start_datetime.toDate(),\n\t\t\t\t\"startTime\": start_datetime.toDate(),\n\t\t\t\t\"endTime\": end_datetime.toDate(),\n\t\t\t\t//\"name\": string,\n\t\t\t\t\"demographicNo\": patient_uuid,\n\t\t\t\t//\"programId\": number,\n\t\t\t\t\"notes\": event_data.description,\n\t\t\t\t\"reason\": event_data.reason,\n\t\t\t\t\"location\": site_uuid,\n\t\t\t\t//\"resources\": string,\n\t\t\t\t//\"type\": string,\n\t\t\t\t//\"style\": string,\n\t\t\t\t//\"billing\": string,\n\t\t\t\t\"status\": selected_event_status_uuid,\n\t\t\t\t//\"importedStatus\": string,\n\t\t\t\t//\"createDateTime\": Date,\n\t\t\t\t//\"updateDateTime\": Date,\n\t\t\t\t//\"creator\": string,\n\t\t\t\t//\"lastUpdateUser\": string,\n\t\t\t\t//\"remarks\": string,\n\t\t\t\t//\"urgency\": string,\n\t\t\t\t//\"creatorSecurityId\": number,\n\t\t\t\t//\"bookingSource\": AppointmentTo1.BookingSourceEnum,\n\t\t\t\t//\"reasonCode\": number,\n\t\t\t\t//\"demographic\": models.Demographic,\n\t\t\t\t//\"provider\": models.Provider,\n\t\t\t};\n\t\t\tconsole.log(appointment);\n\t\t\tdeferred.reject();\n\n/*\t\t\tthis.scheduleApi.updateAppointment(appointment).then(\n\t\t\tfunction(result: IHttpResponse<SchedulingResponse>)\n\t\t\t{\n\t\t\t\tdeferred.resolve(result.data);\n\t\t\t},\n\t\t\tfunction (result)\n\t\t\t{\n\t\t\t\tdeferred.reject(result.data);\n\t\t\t});*/\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar newAppointment: NewAppointmentTo1 =  {\n\t\t\t\t\"appointmentDate\": dateString,\n\t\t\t\t\"startTime\": startTimeString,\n\t\t\t\t\"duration\": duration,\n\t\t\t\t\"status\": selected_event_status_uuid,\n\t\t\t\t\"demographicNo\": patient_uuid,\n\t\t\t\t\"notes\": event_data.description,\n\t\t\t\t\"reason\": event_data.reason,\n\t\t\t\t\"location\": site_uuid,\n\t\t\t\t\"providerNo\": schedule_uuid,\n\t\t\t\t//\"name\": string,\n\t\t\t\t/*\t\t\t\"resources\": string,\n\t\t\t\t\t\t\t\"type\": string,\n\t\t\t\t\t\t\t\"urgency\": string,*/\n\t\t\t};\n\n\n\t\t\tconsole.log(edit_mode);\n\t\t\tthis.scheduleApi.addAppointment(newAppointment).then(\n\t\t\t\tfunction(result: IHttpResponse<RestResponseAppointmentTo1>)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction (result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t});\n\t\t}\n\n\n\t\treturn deferred.promise;\n\t}\n\n\t// Read the implementation-specific results and return a calendar-compatible object.\n\tpublic process_save_results(results, display_errors)\n\t{\n\t\tlet status = (results || {}).status;\n\n\t\tif(status == 'SUCCESS')\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet error_message = ((results || {}).error || {}).message;\n\t\tlet validation_error_array = ((results || {}).error || {}).validationErrors;\n\n\t\tif(Array.isArray(validation_error_array))\n\t\t{\n\t\t\tdisplay_errors.add_standard_error(error_message);\n\t\t\tfor(let error of validation_error_array)\n\t\t\t{\n\t\t\t\tdisplay_errors.add_field_error(error.path, error.message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\tpublic delete_event(event_uuid)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.event_model.del(event_uuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t}*/\n\n\n\t//-------------------------------------------------------------------------\n\t// Event Handlers\n\t//-------------------------------------------------------------------------/\n\n/*\tpublic drop_event(uuid, schedule_uuid, delta)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tevent_model.data.start_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.start_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.data.end_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.end_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.data.schedule_uuid = schedule_uuid;\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic resize_event(uuid, delta)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tevent_model.data.end_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.end_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic rotate_event_status(uuid, rotate_statuses)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tvar next_index = null;\n\t\t\t\tfor(var i = 0; i < rotate_statuses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(rotate_statuses[i].uuid ===\n\t\t\t\t\t\tevent_model.data.event_status_uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\tnext_index = (i + 1) % rotate_statuses.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tevent_model.data.event_status_uuid =\n\t\t\t\t\trotate_statuses[next_index].uuid;\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\t*/\n\n\t//-------------------------------------------------------------------------\n\t// Global State Manipulation\n\t//-------------------------------------------------------------------------/\n\n\tpublic get_global_preference_setting(key)\n\t{\n\t\tif(this.util.exists(this.globalStateService.preferences) &&\n\t\t\tthis.util.exists(this.globalStateService.preferences.settings))\n\t\t{\n\t\t\treturn this.globalStateService.preferences.settings[key];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic get_global_state(key)\n\t{\n\t\tvar setting = this.globalStateService[key];\n\t\tif(!this.util.exists(setting))\n\t\t{\n\t\t\tsetting = null;\n\t\t}\n\t\treturn setting;\n\t}\n\n\tpublic save_global_state(key, value)\n\t{\n\t\tthis.globalStateService[key] = value;\n\t}\n\n\t// -----------------------------------------------------------------------------------------------\n\t// Interface Actions\n\t// -----------------------------------------------------------------------------------------------\n\n\tpublic get_create_invoice_url(\n\t\tevent_uuid, demographics_practitioner_uuid, demographics_patient_uuid)\n\t{\n\t\tvar url = \"#/invoice/create?schedule_event_uuid=\" +\n\t\t\tencodeURIComponent(event_uuid);\n\n\t\tif(this.util.exists(demographics_patient_uuid))\n\t\t{\n\t\t\turl += \"&demographics_patient_uuid=\" +\n\t\t\t\tencodeURIComponent(demographics_patient_uuid);\n\t\t}\n\n\t\tif(this.util.exists(demographics_practitioner_uuid))\n\t\t{\n\t\t\turl += \"&demographics_practitioner_uuid=\" + encodeURIComponent(\n\t\t\t\tdemographics_practitioner_uuid);\n\t\t}\n\n\t\treturn url;\n\t}\n\n\tpublic get_patient_demographic_url(event)\n\t{\n\t\treturn \"#/patient/\" + encodeURIComponent(event.data.demographics_patient_uuid) + \"/view\";\n\t}\n\n\tpublic get_create_chart_note_url(event)\n\t{\n\t\treturn \"#/patient/\" + encodeURIComponent(event.data.demographics_patient_uuid) +\n\t\t\t\"/chart_notes?event_uuid=\" + encodeURIComponent(event.data.uuid);\n\t}\n\n\tpublic open_patient_dialog(edit_mode_callback, on_save_callback,\n\t\tload_error_link_patient_fn)\n\t{\n\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\treturn this.$uibModal.open({\n\t\t\tanimation: false,\n\t\t\tbackdrop: 'static',\n\t\t\tsize: 'lg',\n\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\tresolve: {\n\t\t\t\tedit_mode: edit_mode_callback,\n\t\t\t\ton_save_callback: on_save_callback,\n\t\t\t\tload_error_link_patient_fn: load_error_link_patient_fn\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic get_schedule_height()\n\t{\n/*\t\t// get the full window height, minus the header height, minus a buffer for schedule options\n\t\tvar schedule_height = $(window).height() - $('#right-pane').offset().top - 80;\n\t\tif(schedule_height < $scope.min_height) {\n\t\t\tschedule_height = $scope.min_height;\n\t\t}\n\t\treturn schedule_height;*/\n\t\treturn 814;\n\t}\n\n\n\t// ===============================================================================================\n\t// Private Methods\n\t// ===============================================================================================\n/*\n\tprivate create_schedule_event(event)\n\t{\n\t\tvar event_status_color =\n\t\t\tthis.event_statuses[event.event_status_uuid] ?\n\t\t\t\tthis.event_statuses[event.event_status_uuid].color :\n\t\t\t\tthis.default_event_color;\n\n\t\treturn {\n\t\t\tdata: event,\n\t\t\tstart: this.util.get_datetime_moment(event.start_time),\n\t\t\tend: this.util.get_datetime_moment(event.end_time),\n\t\t\tcolor: event_status_color,\n\t\t\tclassName: this.event_class(event_status_color),\n\t\t\tresourceId: event.schedule_uuid\n\t\t}\n\t}\n\n\tprivate event_class(bg_color)\n\t{\n\t\tvar red = parseInt(bg_color.substr(1,2),16);\n\t\tvar green = parseInt(bg_color.substr(3,2),16);\n\t\tvar blue = parseInt(bg_color.substr(5,2),16);\n\t\tvar yiq = ((red * 299) + (green * 587) + (blue * 114)) / 1000;\n\n\t\treturn (yiq >= 128) ? 'text-dark' : 'text-light';\n\t}\n\t*/\n\n/*\n\tprivate load_schedule_availabilities(schedule)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.schedule_availability_model.schedule_list(schedule).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tschedule.availabilities = results.data;\n\t\t\t\tdeferred.resolve(this.results_factory.factory(schedule));\n\t\t\t}, function error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('load_schedule_availabilities error', errors);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate load_schedule_tmpl_rels(schedule)\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tthis.schedule_template_relation_model.schedule_list(schedule).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tschedule.relations = results.data;\n\t\t\t\tdeferred.resolve(this.results_factory.factory(schedule));\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}*/\n}\n","\nimport {ScheduleApi} from \"../generated/api/ScheduleApi\";\nimport {CalendarApiAdapter} from './schedule/calendarApiAdapter';\n\nangular.module('Schedule').service(\n\t'Schedule.CalendarApiAdapter', CalendarApiAdapter);\n","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t$scope.ospInfo = {\n\t\t\tname: 'OscarHost.ca',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Oscarhost Support',\n\t\t\temail: 'support@oscarhost.ca',\n\t\t\turl: 'https://help.oscarhost.ca'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: '15-Beta',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Help', []);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function(data)\n\t\t\t{\n\t\t\t\talert('saved');\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Report').controller('Report.ReportSHMentalHealthController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run sh mental health report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/StreetHealthIntakeReportAction.do?startDate=' + startDate;\n\t\t\twindow.open(url, 'report_sh', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportRegistrationIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run registration intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=quick&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_registration_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportFollowUpIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run follow up intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=indepth&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_followup_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: new Date(),\n\t\t\t\tendDate: new Date(),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'General Forms',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/ClientManager.do?method=getGeneralFormsReport'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Registration Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_registration_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Follow-up Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_followup_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Activity Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/Reports/ProgramActivityReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UCF Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../SurveyManager.do?method=reportForm'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SH Mental Health Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_sh_mental_health.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\t\t\t}\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, ((page - 1) * count), count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.content);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === \"DOB\")\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = 'Name';\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: \"all\",\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === \"DOB\") ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Inbox', []);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tcontroller.consult = consult;\n\t\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\n\t\t\t\t\t//set default letterhead\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//show referringDoctor in list\n\t\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t\t{\n\t\t\t\tif(consult.referringDoctor !== null)\n\t\t\t\t{\n\t\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set patient cell phone\n\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1px;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ', ' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\t//set demographic info\n\t\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t\t//set cell phone\n\t\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//set specialist list\n\t\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tangular.forEach(controller.specialists, function(spec)\n\t\t\t{\n\t\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = 0;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\t\t\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar valid = true;\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (controller.invalidData())\n\t\t\t{\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif(valid)\n\t\t\t{\n\t\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\t\tcontroller.setAppointmentTime();\n\n\t\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.id == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(results.id);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(\n\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.setESendEnabled();\n\t\t\t\t\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\t\t\t\t\tcontroller.consultChanged = 0; //reset change count\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdeferred.reject(\"Invalid\");\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\")\n\t\t\t{\n\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$location.path(\"/consults\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndFax = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tvar demographicNo = consult.demographicId;\n\t\t\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\n\t\t\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.print(reqId);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.print = function print(reqId)\n\t\t{\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + reqId + \"&demographicNo=\" + consult.demographicId);\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.content[x].demographicNo,\n\t\t\t\t\t\t\tname: response.content[x].lastName + ', ' + response.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar refDate = moment(consult.referralDate).toDate();\n\t\t\t\t\t\t\t\trefDate.setMonth(refDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= refDate)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.outstanding = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('AdminCtrl', ['$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","angular.module('Schedule').controller('Schedule.AppointmentViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'appointment',\n\t'statusList',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tappointment,\n\t\tstatusList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.me = me;\n\t\tcontroller.appointment = appointment;\n\t\tcontroller.statusList = statusList.content;\n\t\tcontroller.appointmentUpdate = {};\n\n\t\tcontroller.appointmentWriteAccess = false;\n\n\t\tcontroller.getStatus = function getStatus(status)\n\t\t{\n\n\t\t\tfor (var x = 0; x < controller.statusList.length; x++)\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(controller.statusList[x]));\n\t\t\t\tif (controller.statusList[x].status == status)\n\t\t\t\t{\n\t\t\t\t\treturn controller.statusList[x].description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn status;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.deleteAppointment = function deleteAppointment()\n\t\t{\n\t\t\tif (confirm('Are you sure you want to delete this appointment?'))\n\t\t\t{\n\t\t\t\tscheduleService.deleteAppointment(controller.appointment.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\n\n\t\tcontroller.editProvider = function editProvider()\n\t\t{\n\t\t\tcontroller.showProviderFormControl = true;\n\t\t\tcontroller.appointmentUpdate.providerNo = controller.appointment.providerNo;\n\t\t\tcontroller.appointmentUpdate.providerName = controller.appointment.provider.lastName + \",\" + controller.appointment.provider.lastName;\n\t\t};\n\n\t\tcontroller.updateProvider = function updateProvider(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t\tcontroller.showProviderFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelProviderUpdate = function cancelProviderUpdate()\n\t\t{\n\t\t\tcontroller.appointmentUpdate.providerNo = null;\n\t\t\tcontroller.appointmentUpdate.providerName = null;\n\n\t\t\tcontroller.showProviderFormControl = false;\n\n\t\t};\n\n\t\tcontroller.showAppointmentHistory = function showAppointmentHistory()\n\t\t{\n\t\t\tscheduleService.appointmentHistory(controller.appointment.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\talert(JSON.stringify(results));\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.noShowAppointment = function noShowAppointment()\n\t\t{\n\t\t\tscheduleService.noShowAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancelAppointment = function cancelAppointment()\n\t\t{\n\t\t\tscheduleService.cancelAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t}\n]);","angular.module('Schedule').controller('Schedule.AppointmentAddController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'demographicsService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'apptDate',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tapptDate)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.types = [];\n\n\t\tcontroller.urgencies = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: 'Normal'\n\t\t},\n\t\t{\n\t\t\tvalue: 'critical',\n\t\t\tlabel: 'Critical'\n\t\t}];\n\n\t\tcontroller.me = me;\n\n\t\tcontroller.appointment = {\n\t\t\tstatus: 't',\n\t\t\tappointmentDate: $filter('date')(apptDate, 'yyyy-MM-dd'),\n\t\t\tstartTime: '09:00 AM',\n\t\t\ttype: '',\n\t\t\tduration: 15,\n\t\t\tproviderName: me.formattedName,\n\t\t\tproviderNo: me.providerNo,\n\t\t\treason: '',\n\t\t\tnotes: '',\n\t\t\tlocation: '',\n\t\t\tresources: '',\n\t\t\tcritical: ''\n\t\t};\n\n\t\tscheduleService.getTypes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.types = results.types;\n\t\t\t\tcontroller.types.unshift(\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tduration: 15,\n\t\t\t\t\tlocation: '',\n\t\t\t\t\tnotes: '',\n\t\t\t\t\treason: '',\n\t\t\t\t\tresources: ''\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.selectType = function selectType()\n\t\t{\n\t\t\tvar type = null;\n\n\t\t\tfor (var x = 0; x < controller.types.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.types[x].name == controller.appointment.type)\n\t\t\t\t{\n\t\t\t\t\ttype = controller.types[x];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type != null)\n\t\t\t{\n\t\t\t\tcontroller.appointment.duration = type.duration;\n\t\t\t\tcontroller.appointment.location = type.location;\n\t\t\t\tcontroller.appointment.notes = type.notes;\n\t\t\t\tcontroller.appointment.reason = type.reason;\n\t\t\t\tcontroller.appointment.resources = type.resources;\n\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.validate = function validate()\n\t\t{\n\t\t\tvar t = controller.appointment;\n\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.providerNo == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a provider');\n\t\t\t}\n\t\t\tif (t.startTime == null || t.startTime.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\t\t\tif (t.duration == null || t.duration.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar x = {};\n\t\t\tx.status = controller.appointment.status;\n\t\t\tx.appointmentDate = controller.appointment.appointmentDate;\n\t\t\tx.startTime12hWithMedian = controller.appointment.startTime;\n\t\t\tx.type = controller.appointment.type;\n\t\t\tx.duration = controller.appointment.duration;\n\t\t\tx.providerNo = controller.appointment.providerNo;\n\t\t\tx.reason = controller.appointment.reason;\n\t\t\tx.notes = controller.appointment.notes;\n\t\t\tx.location = controller.appointment.location;\n\t\t\tx.resources = controller.appointment.resources;\n\t\t\tx.urgency = controller.appointment.critical;\n\t\t\tx.demographicNo = controller.appointment.demographicNo;\n\n\t\t\t// TODO: make sure this works with the updated backend service (response changed)\n\t\t\tconsole.log(JSON.stringify(x));\n\t\t\tscheduleService.addAppointment(x).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\n\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.appointment.demographicNo = results.demographicNo;\n\t\t\t\t\tcontroller.appointment.demographicName = '';\n\t\t\t\t\tcontroller.appointment.demographic = results;\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\t}\n]);","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nangular.module('Schedule').controller('Schedule.EventController', [\n\n\t\t'$scope',\n\t\t'$q',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModalInstance',\n\n\t\t'errorsService',\n\t\t//'cpCalendar.Juno.Common.Util',\n\n\n\t\t'securityService',\n\t\t'keyBinding',\n\t\t'focus',\n\t\t'type', 'parentScope', 'label', 'editMode', 'data',\n\n\tfunction (\n\t\t$scope, $q, $timeout, $state, $uibModalInstance,\n\n\t\tmessagesFactory, //util,\n\n\t\tsecurityService,\n\t\tkeyBinding, focus,\n\t\ttype, parentScope, label, editMode, data\n\t)\n{\n\t$scope.parentScope = parentScope;\n\n\n\t//=========================================================================\n\t// Access Control\n\t//=========================================================================/\n\n\n\t//=========================================================================\n\t// Local scope variables\n\t//=========================================================================/\n\n\t$scope.label = label;\n\t$scope.editMode = editMode;\n\n\t$scope.keyBinding = keyBinding;\n\t$scope.eventUuid = data.uuid;\n\t$scope.numInvoices = data.numInvoices;\n\t$scope.tagNames = data.tagNames;\n\n\t$scope.schedule = data.schedule;\n\n\t$scope.availabilityTypes = data.availabilityTypes;\n\t$scope.scheduleTemplates = data.scheduleTemplates;\n\n\t$scope.eventData = {\n\t\tstart_time: null,\n\t\tend_time: null,\n\t\treason: null,\n\t\tdescription: null\n\t};\n\n\t$scope.timeInterval = data.timeInterval;\n\t$scope.startDate = null;\n\t$scope.startTime = null;\n\t$scope.endDate = null;\n\t$scope.endTime = null;\n\n\t$scope.lastEventLength = null;\n\n\t$scope.patient = parentScope.patientModel;\n\t$scope.autocompleteValues = {};\n\n\t$scope.activeTemplateEvents = [];\n\n\tconsole.log($scope.parentScope);\n\t$scope.eventStatuses = $scope.parentScope.eventStatuses;\n\t$scope.eventStatusOptions = [];\n\t$scope.selectedEventStatus = null;\n\t$scope.defaultEventStatus = null;\n\n\t$scope.selectedSiteName = null;\n\n\t$scope.timepickerFormat = \"h:mm A\";\n\n\t$scope.fieldValueMapping = {\n\t\tstart_date: 'Start Date',\n\t\tstart_time: 'Start Time',\n\t\tend_date: 'End Date',\n\t\tend_time: 'End Time'\n\t};\n\t$scope.displayMessages = messagesFactory.factory();\n\n\t$scope.initialized = false;\n\t$scope.working = false;\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\tif(!securityService.hasPermission('scheduling_create'))\n\t\t{\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\t$scope.cancel();\n\t\t\t});\n\t\t}\n\n\t\tvar momentStart = data.start_time;\n\t\tvar momentEnd = data.end_time;\n\n\t\t$scope.startTime = Juno.Common.Util.formatMomentTime(momentStart, $scope.timepickerFormat);\n\t\t$scope.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t$scope.startDate = Juno.Common.Util.formatMomentDate(momentStart);\n\t\t$scope.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\n\t\tconsole.log('start_time');\n\t\tconsole.log($scope.startDate);\n\t\tconsole.log($scope.startTime);\n\n\t\t$scope.lastEventLength = momentEnd.diff(momentStart, 'minutes');\n\n\t\t// maintain a list of the 'active' templates based on start time\n\t\t$scope.setActiveTemplateEvents();\n\n\t\tfor(var key in $scope.eventStatuses)\n\t\t{\n\t\t\tif($scope.eventStatuses.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t$scope.eventStatusOptions.push($scope.eventStatuses[key]);\n\t\t\t}\n\t\t}\n\t\t$scope.defaultEventStatus = data.defaultEventStatus;\n\t\t$scope.setSelectedEventStatus(data.event_status_uuid);\n\n\n\t\tif(editMode)\n\t\t{\n\t\t\t$scope.eventData.reason = data.reason;\n\t\t\t$scope.eventData.description = data.description;\n\n\t\t\t// either load the patient data and init the autocomplete\n\t\t\t// or ensure the patient model is clear\n\t\t\t$scope.patient.uuid = data.demographics_patient_uuid;\n\t\t\t$scope.initPatientAutocomplete().then(function() {\n\t\t\t\t$scope.initialized = true;\n\t\t\t});\n\t\t\t$scope.selectedSiteName = data.selected_site_name;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create mode: adjust the end date (if needed)\n\t\t\t// and clear the patient model\n\t\t\t$scope.adjustEndDatetime();\n\t\t\t$scope.patient.clear();\n\n\t\t\t// autofocus the patient field\n\t\t\tfocus.element(\"#input-patient\");\n\n\t\t\t$scope.initialized = true;\n\t\t}\n\t};\n\n\t$scope.initPatientAutocomplete = function initPatientAutocomplete()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tif(Juno.Common.Util.exists($scope.patient.uuid) && $scope.patient.uuid != 0)\n\t\t{\n\t\t\tparentScope.autocomplete.init_autocomplete_values(\n\t\t\t\t{ patient: $scope.patient.uuid },\n\t\t\t\t$scope.autocompleteValues).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.autocompleteValues = results.data;\n\t\t\t\t\t$scope.patient.fillData($scope.autocompleteValues.patient.data);\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t},\n\t\t\t\tfunction(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t\t$scope.patient.clear();\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.patient.clear();\n\t\t\tdeferred.resolve();\n\t\t}\n\n\t\treturn deferred.promise;\n\t};\n\n\t//=========================================================================\n\t// Private methods\n\t//=========================================================================/\n\n\t$scope.get_inclusive_days = function get_inclusive_days(\n\t\tmomentStart, momentEnd)\n\t{\n  \t\tvar days = [];\n  \t\tvar momentDay = momentStart.clone().hour(0).minute(0);\n  \t\twhile(momentDay.isBefore(momentEnd))\n  \t\t{\n  \t\t\tdays.push(momentDay.clone());\n  \t\t\tmomentDay.add(1, 'day');\n  \t\t}\n  \t\treturn days;\n\t};\n\n\t$scope.setSelectedEventStatus = function setSelectedEventStatus(uuid)\n\t{\n\t\tvar eventStatusUuid = $scope.defaultEventStatus;\n\t\tif(Juno.Common.Util.exists(uuid))\n\t\t{\n\t\t\teventStatusUuid = uuid;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists(eventStatusUuid) ||\n\t\t\t!Juno.Common.Util.exists($scope.eventStatuses[eventStatusUuid]))\n\t\t{\n\t\t\t// if not set or found just pick the first one\n\t\t\teventStatusUuid = $scope.eventStatusOptions[0].uuid;\n\t\t}\n\n\t\t$scope.selectedEventStatus = $scope.eventStatuses[eventStatusUuid];\n\t};\n\n\t$scope.setActiveTemplateEvents = function setActiveTemplateEvents()\n\t{\n\t\tif(!($scope.schedule || {}).events)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Get templates that happen during the time period\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.startDate, $scope.formattedTime($scope.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.endDate, $scope.formattedTime($scope.endTime));\n\n\t\tvar active_events = [];\n\n\t\tfor(var i = 0; i < $scope.schedule.events.length; i++)\n\t\t{\n\t\t\tvar event = angular.copy($scope.schedule.events[i]);\n\n\t\t\tif(!event.availability_type)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// if start time is before event end time or if end time is after event start\n\t\t\tevent.start = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\tevent.end = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\n\t\t\tif(momentStart.isValid() && momentEnd.isValid() &&\n\t\t\t\tevent.start.isValid() && event.end.isValid() &&\n\t\t\t\tmomentStart.isBefore(event.end) && momentEnd.isAfter(event.start))\n\t\t\t{\n\t\t\t\tactive_events.push(event);\n\t\t\t}\n\t\t}\n\n\t\t$scope.activeTemplateEvents = active_events;\n\t};\n\n\t$scope.adjustEndDatetime = function adjustEndDatetime(length_minutes)\n\t{\n\t\t// adjusts the end time to the specified length or\n\t\t// adjusts to keep the event length the same as it last was\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.startDate, $scope.formattedTime($scope.startTime));\n\t\tif(momentStart.isValid())\n\t\t{\n\t\t\tvar new_event_length = Juno.Common.Util.exists(length_minutes) ?\n\t\t\t\tlength_minutes : $scope.lastEventLength;\n\n\t\t\tvar momentEnd = momentStart.add(new_event_length, 'minutes');\n\n\t\t\t$scope.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\t\t\t$scope.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t}\n\t};\n\n\t$scope.updateLastEventLength = function updateLastEventLength()\n\t{\n\t\t// saves the current event length, if the date/times are valid\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.startDate, $scope.formattedTime($scope.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.endDate, $scope.formattedTime($scope.endTime));\n\n\t\tif(momentStart.isValid() && momentEnd.isValid())\n\t\t{\n\t\t\tvar eventLength = momentEnd.diff(momentStart, 'minutes');\n\t\t\tif(eventLength > 0)\n\t\t\t{\n\t\t\t$scope.lastEventLength = eventLength;\n\t\t\t}\n\t\t}\n\t};\n\n\t$scope.validateForm = function validateForm()\n\t{\n\t\t$scope.displayMessages.clear();\n\n\t\tJuno.Common.Util.validateDateString($scope.startDate,\n\t\t\t$scope.displayMessages, 'start_date', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.startTime),\n\t\t\t$scope.displayMessages, 'start_time', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateDateString($scope.endDate,\n\t\t\t$scope.displayMessages, 'end_date', 'End Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.endTime),\n\t\t\t$scope.displayMessages, 'end_time', 'End Time', true);\n\n\t\t// if all the date/time fields look good, validate range\n\t\tif(!$scope.displayMessages.has_errors())\n\t\t{\n\t\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.startDate, $scope.formattedTime($scope.startTime));\n\t\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.endDate, $scope.formattedTime($scope.endTime));\n\n\t\t\tif(endDatetime.isSame(startDatetime) ||\n\t\t\t\tendDatetime.isBefore(startDatetime))\n\t\t\t{\n\t\t\t\t$scope.displayMessages.addStandardError(\"The appointment must end after it starts\");\n\t\t\t}\n\t\t}\n\n\t\treturn !$scope.displayMessages.hasErrors();\n\t};\n\n\t$scope.saveEvent = function saveEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.startDate, $scope.formattedTime($scope.startTime));\n\n\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.endDate, $scope.formattedTime($scope.endTime));\n\n\t\tparentScope.saveEvent(\n\t\t\teditMode,\n\t\t\t$scope.eventUuid,\n\t\t\tstartDatetime,\n\t\t\tendDatetime,\n\t\t\t$scope.eventData,\n\t\t\t$scope.schedule.uuid,\n\t\t\t$scope.selectedEventStatus.uuid,\n\t\t\t$scope.patient.uuid,\n\t\t\t$scope.selectedSiteName\n\t\t).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tif(parentScope.processSaveResults(results, $scope.displayMessages))\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (results)\n\t\t\t{\n\t\t\t\tparentScope.processSaveResults(results, $scope.displayMessages);\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.deleteEvent = function deleteEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tparentScope.deleteEvent($scope.eventUuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.formattedTime = function formattedTime(time_str)\n\t{\n\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\treturn time_str.replace(/ /g,'');\n\t};\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t// when the start date is changed,\n\t// update the active template events\n\t$scope.$watch('start_date', function(newStartDate, oldStartDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartDate !== oldStartDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the start time is changed,\n\t// update the active template events and adjust the end time\n\t$scope.$watch('start_time', function(newStartTime, oldStartTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartTime !== oldStartTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the end date is changed, track the event length\n\t$scope.$watch('end_date', function(newEndDate, oldEndDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndDate !== oldEndDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t// when the end time is changed, track the event length\n\t$scope.$watch('end_time', function(newEndTime, oldEndTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndTime !== oldEndTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t//=========================================================================\n\t// Public methods\n\t//=========================================================================/\n\n\t$scope.loadedNewPhoto = function loadedNewPhoto(file, event)\n\t{\n\t\tif(file == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.preview_patient_image = file;\n\t\t$scope.new_photo = true;\n\t\t$scope.patient.has_photo = true;\n\t\t$scope.patient.uploadPhoto(file);\n\t};\n\n\t$scope.isWorking = function isWorking()\n\t{\n\t\treturn $scope.working;\n\t};\n\n\t$scope.isInitialized = function isInitialized()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.isPatientSelected = function isPatientSelected()\n\t{\n\t\treturn Juno.Common.Util.exists($scope.patient.uuid);\n\t};\n\n\t$scope.clearPatient = function clearPatient()\n\t{\n\t\t$scope.autocompleteValues.patient = null;\n\t\t$scope.patient.clear();\n\t};\n\n\t$scope.onSelectPatient = function onSelectPatient($item, $model, $label, $event)\n\t{\n\t\t// $item is a Patient pojo\n\t\t$scope.patient.uuid = $item.data[$item.value_field];\n\t\t$scope.patient.fillData($item.data);\n\t};\n\n\t$scope.setEventLength = function setEventLength(minutes)\n\t{\n\t\t$scope.adjustEndDatetime(minutes);\n\t};\n\n\t$scope.save = function save()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t\t\t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\tif(!$scope.displayMessages.hasStandardErrors())\n\t\t\t{\n\t\t\t\t$scope.displayMessages.addGenericFatalError();\n\t\t\t}\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.delete = function()\n\t{\n\t\t$scope.working = true;\n\t\t$scope.deleteEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.addGenericFatalError();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.cancel = function cancel()\n\t{\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\n\t$scope.saveAndBill = function saveAndBill()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t  \t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t\t$scope.parentScope.openCreateInvoice(\n\t\t\t\t$scope.eventUuid,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.patient.uuid);\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.addGenericFatalError();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.viewInvoices = function viewInvoices()\n\t{\n\t\t$scope.parentScope.open_view_invoices($scope.eventUuid);\n\t};\n\n\t$scope.createPatient = function createPatient()\n\t{\n\t\tvar editModeCallback = function() { return false; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.create_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t$scope.modify_patient = function modify_patient()\n\t{\n\t\tif(!$scope.patient.uuid)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar editModeCallback = function() { return true; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.modify_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t// for callback on create/edit patient modal\n\t$scope.onPatientModalSave = function onPatientModalSave(uuid)\n\t{\n\t\t// load the newly created/updated patient\n\t\t$scope.patient.uuid = uuid;\n\t\t$scope.initPatientAutocomplete();\n\t};\n\n\t//=========================================================================\n\t//  Key Bindings\n\t//=========================================================================\n\n\t$scope.keyBindSettings =\n\t{\n\t\t\"ctrl+enter\": {\n\t\t\ttitle: 'Ctrl+Enter',\n\t\t\ttooltip: 'Save',\n\t\t\tdescription: 'Save appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.save();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t},\n\t\t\"ctrl+shift+enter\": {\n\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\ttooltip: 'Save And Bill',\n\t\t\tdescription: 'Save and bill for appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.saveAndBill();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t}\n\t};\n\t$scope.keyBinding.bind_key_global(\"ctrl+enter\", $scope.keyBindSettings[\"ctrl+enter\"]);\n\t$scope.keyBinding.bind_key_global(\"ctrl+shift+enter\", $scope.keyBindSettings[\"ctrl+shift+enter\"]);\n}]);\n","\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\n\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\t'$stateParams',\n\t'$q',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$uibModal',\n\t'focusService',\n\t'scheduleService',\n\t'securityService',\n\t'uiCalendarConfig',\n\n\tfunction(\n\t\t$scope,\n\t\t$stateParams,\n\t\t$q,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$uibModal,\n\t\tfocusService,\n\t\tscheduleService,\n\t\tsecurityService,\n\t\tuiCalendarConfig\n\t)\n\t{\n\t\t//var controller = this;\n\n\t\t// XXX: put this address somewhere else\n\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'http://localhost:9090/ws/rs');\n\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.calendarName = 'cpCalendar';\n\t\t$scope.initialized = false;\n\t\t$scope.calendarLoading = false;\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.uiConfigApplied = {};\n\t\t$scope.eventSources = [];\n\t\t$scope.selectedSchedule = null;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.selectedTimeInterval = null;\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in\n\t\t// this object.\n\t\t$scope.cpCalendarControl = {};\n\n\n\t\t// Parameters from directive controller\n\n\t\t$scope.globalState = [];\n\t\t$scope.schedules = [];\n\t\t$scope.scheduleOptions = [];\n\t\t$scope.resourceOptions = [];\n\t\t$scope.siteOptions = [];\n\t\t$scope.defaultEventColor = \"#333\";\n\t\t$scope.defaultTimeInterval = '00:15:00';\n\t\t$scope.timeIntervalOptions =\n\t\t\t['00:05:00','00:10:00','00:15:00','00:30:00'];\n\t\t$scope.selectedTimeInterval = $scope.defaultTimeInterval;\n\t\t$scope.defaultAutoRefreshMinutes = 3;\n\t\t$scope.defaultCalendarView = 'agendaWeek';\n\t\t$scope.eventStatuses = {};\n\t\t$scope.rotateStatuses = [];\n\t\t$scope.availabilityTypes = {};\n\t\t$scope.resourceOptionHash = {};\n\t\t$scope.events = [];\n\t\t$scope.scheduleTemplates = {};\n\t\t$scope.sites = {};\n\n\t\t$scope.openingDialog = false;\n\t\t$scope.dialog = null;\n\n\t\t$scope.patientModel = {\n\t\t\tuuid: null,\n\t\t\tfull_name: null,\n\t\t\thas_photo: true,\n\t\t\tpatient_photo_url: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\t\tclear: function clear(){\n\t\t\t\tthis.uuid = null;\n\t\t\t\tthis.full_name = null;\n\t\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\t\tthis.data.birth_date = null;\n\t\t\t\tthis.data.health_number = null;\n\t\t\t\tthis.data.ontario_version_code = null;\n\t\t\t\tthis.data.phone_number_primary = null;\n\t\t\t},\n\t\t\tfillData: function fillData(data){\n\t\t\t\tthis.uuid = data.uuid;\n\t\t\t\tthis.full_name = data.full_name;\n\t\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=' + (data.uuid ? data.uuid : 0);\n\t\t\t\tthis.data.birth_date = data.birth_date;\n\t\t\t\tthis.data.health_number = data.health_number;\n\t\t\t\tthis.data.ontario_version_code = data.ontario_version_code;\n\t\t\t\tthis.data.phone_number_primary = data.phone_number_primary;\n\t\t\t},\n\t\t\tuploadPhoto: function uploadPhoto(file){},\n\t\t\tdata: {\n\t\t\t\tbirth_date: null,\n\t\t\t\thealth_number: null,\n\t\t\t\tontario_version_code: null,\n\t\t\t\tphone_number_primary: null\n\t\t\t}\n\t\t};\n\n\t\t$scope.init = function init()\n\t\t{\n\n\t\t\t$scope.defaultDate = $scope.globalState.selectedDate;\n\t\t\t//$scope.uiConfig.calendar.schedulerlicensekey = \"0752822575-fcs-1459294728\";\n\t\t\t//$scope.global_state.global_settings.interface_preferences.scheduler_license_key,\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\n\t\t\t// XXX: loadScheduleTemplates seems to not be used\n\t\t\t//$scope.loadScheduleTemplates().then(function()\n\t\t\t//{\n\t\t\t\t$scope.loadAvailabilityTypes().then(function()\n\t\t\t\t{\n\t\t\t\t\t$scope.loadEventStatuses().then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadScheduleOptions().then(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.loadSiteOptions().then(function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.loadDefaultSelections();\n\n\t\t\t\t\t\t\t\t$scope.loadSelectedSchedules().then(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$scope.setCalendarResources();\n\n\t\t\t\t\t\t\t\t\t$scope.setEventSources();\n\n\t\t\t\t\t\t\t\t\t$scope.initEventsAutoRefresh();\n\n\t\t\t\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t\t\t\t\tconsole.log(\"-- Calendar Initialized ----------------------------\");\n\t\t\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t//});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.calendar = function calendar()\n\t\t{\n\t\t\treturn uiCalendarConfig.calendars[$scope.calendarName];\n\t\t};\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t\t//return global_state.global_settings.addons.scheduling_enabled;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.initialized;\n\t\t};\n\n\t\t$scope.hasSchedules = function hasSchedules()\n\t\t{\n\t\t\treturn $scope.schedules.length > 0;\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.siteOptions.length > 0;\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.scheduleOptions;\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\tif(!angular.isDefined($scope.selectedSite) || $scope.selectedSite === null)\n\t\t\t{\n\t\t\t\t$scope.selectedSite = $scope.siteOptions[0];\n\t\t\t}\n\n\t\t\treturn $scope.siteOptions;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\t// XXX: global_state/preferences\n\t\t\tvar viewName = $scope.getGlobalState('schedule_view_name');\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.getGlobalPreferenceSetting(\n\t\t\t\t\t'schedule_view_name');\n\t\t\t}\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.defaultCalendarView;\n\t\t\t}\n\n\t\t\t$scope.saveGlobalState('schedule_view_name', viewName);\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t$scope.calendarEvents = function calendarEvents(start, end, timezone, callback)\n\t\t{\n\t\t\tconsole.log(\"-- Load Calendar Events ------------------------------------------\");\n\t\t\tconsole.log(start.toString());\n\t\t\tconsole.log(end.toString());\n\t\t\tconsole.log(\"------------------------------------------------------------------\");\n\n\t\t\t// load the events for each of the loaded schedules\n\t\t\tvar promise_array = [];\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tpromise_array.push(\n\t\t\t\t\t$scope.loadScheduleEvents(\n\t\t\t\t\t\t$scope.schedules[i], $scope.selected_site_name, start, end, $scope.viewName(), $scope.scheduleTemplates,\n\t\t\t\t\t\t$scope.eventStatuses, $scope.defaultEventColor, $scope.availabilityTypes));\n\t\t\t}\n\n\t\t\t// once all the events are loaded, concat them together and callback\n\t\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\tvar schedule_events = [];\n\t\t\t\t\tfor(var i = 0; i < results_array.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Pull the relations out of the result\n\t\t\t\t\t\tvar schedule = $scope.schedules[i];\n\t\t\t\t\t\tvar events = results_array[i];\n\n\t\t\t\t\t\tif(events && angular.isArray(events.data))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('-- schedule templates ---------------------');\n\t\t\t\t\t\t\tschedule.events = events.data;\n\t\t\t\t\t\t\t//$scope.extract_data_from_events(events.data, schedule, $scope.schedule_templates);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Display the result\n\t\t\t\t\t\tschedule_events.push(results_array[i].data);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.events = Array.prototype.concat.apply([], schedule_events);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.viewName() !== 'month';\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\treturn $scope.onScheduleChanged();\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\tvar selectedSchedule = $scope.selectedSchedule;\n\t\t\tvar selectedSiteName = $scope.selectedSiteName;\n\n\t\t\tif(!Juno.Common.Util.exists(selectedSchedule))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar scheduleUuid = selectedSchedule.uuid;\n\n\t\t\t$scope.saveGlobalState('schedule_default', scheduleUuid);\n\t\t\t$scope.selectedSchedule = $scope.calendar_api_adapter.getSelectedSchedule(\n\t\t\t\t$scope.scheduleOptions);\n\n\t\t\tif(Juno.Common.Util.exists(selectedSiteName))\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = selectedSiteName;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = null;\n\t\t\t}\n\n\t\t\t// reload the schedule and then events data, triggering a rerender\n\t\t\t$scope.loadSelectedSchedules().then($scope.refetchEvents);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.saveGlobalState(\n\t\t\t\t'schedule_time_interval', $scope.selectedTimeInterval);\n\n\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.changeView = function changeView(view)\n\t\t{\n\t\t\t// if switching to or from resourceDay view, need to update schedules\n\t\t\tvar reload_schedules = false;\n\t\t\tif(view === 'resourceDay' ||\n\t\t\t\t$scope.getGlobalState('schedule_view_name') === 'resourceDay')\n\t\t\t{\n\t\t\t\treload_schedules = true;\n\t\t\t}\n\n\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t$scope.saveGlobalState('schedule_view_name', view);\n\n\t\t\tif(reload_schedules)\n\t\t\t{\n\t\t\t\t$scope.loadSelectedSchedules().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.setCalendarResources();\n\t\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.updateCalendarView();\n\t\t\t}\n\t\t};\n\n\t\t$scope.showLegend = function showLegend()\n\t\t{\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar data = {\n\t\t\t\tevent_statuses: $scope.eventStatuses,\n\t\t\t\tavailability_types: $scope.availabilityTypes\n\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcontroller: 'Schedule.LegendController',\n\t\t\t\ttemplateUrl: 'code/schedule/legend.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tdata: function() { return data }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// when the dialog closes clear the variable\n\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t$scope.dialog = null;\n\t\t\t});\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.refetchEvents = function refetchEvents()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.viewName() != 'resourceDay')\n\t\t};\n\n\t\t$scope.saveEvent = function saveEvent(\n\t\t\teditMode,\n\t\t\teventUuid,\n\t\t\tstartDatetime,\n\t\t\tendDatetime,\n\t\t\teventData,\n\t\t\tscheduleUuid,\n\t\t\tselectedEventStatusUuid,\n\t\t\tpatientUuid,\n\t\t\tsiteUuid\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar dateString = util.get_date_string(startDatetime);\n\t\t\tvar startTimeString = util.get_time_string(startDatetime, \"HH:mm\");\n\t\t\tvar endTimeString = util.get_time_string(endDatetime, \"HH:mm\");\n\t\t\tvar duration = moment.duration(endDatetime.diff(startDatetime)).asMinutes();\n\n\n\t\t\tif(editMode)\n\t\t\t{\n\t\t\t\tvar appointment =  {\n\t\t\t\t\t\"id\": 0,\n\t\t\t\t\t\"providerNo\": scheduleUuid,\n\t\t\t\t\t\"appointmentDate\": startDatetime.toDate(),\n\t\t\t\t\t\"startTime\": startDatetime.toDate(),\n\t\t\t\t\t\"endTime\": endDatetime.toDate(),\n\t\t\t\t\t//\"name\": string,\n\t\t\t\t\t\"demographicNo\": patientUuid,\n\t\t\t\t\t//\"programId\": number,\n\t\t\t\t\t\"notes\": eventData.description,\n\t\t\t\t\t\"reason\": eventData.reason,\n\t\t\t\t\t\"location\": siteUuid,\n\t\t\t\t\t//\"resources\": string,\n\t\t\t\t\t//\"type\": string,\n\t\t\t\t\t//\"style\": string,\n\t\t\t\t\t//\"billing\": string,\n\t\t\t\t\t\"status\": selectedEventStatusUuid,\n\t\t\t\t\t//\"importedStatus\": string,\n\t\t\t\t\t//\"createDateTime\": Date,\n\t\t\t\t\t//\"updateDateTime\": Date,\n\t\t\t\t\t//\"creator\": string,\n\t\t\t\t\t//\"lastUpdateUser\": string,\n\t\t\t\t\t//\"remarks\": string,\n\t\t\t\t\t//\"urgency\": string,\n\t\t\t\t\t//\"creatorSecurityId\": number,\n\t\t\t\t\t//\"bookingSource\": AppointmentTo1.BookingSourceEnum,\n\t\t\t\t\t//\"reasonCode\": number,\n\t\t\t\t\t//\"demographic\": models.Demographic,\n\t\t\t\t\t//\"provider\": models.Provider,\n\t\t\t\t};\n\t\t\t\tconsole.log(appointment);\n\t\t\t\tdeferred.reject();\n\n\t\t\t\t/*\t\t\tthis.scheduleApi.updateAppointment(appointment).then(\n\t\t\t\t\t\t\tfunction(result: IHttpResponse<SchedulingResponse>)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (result)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t\t\t});*/\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar newAppointment =  {\n\t\t\t\t\t\"appointmentDate\": dateString,\n\t\t\t\t\t\"startTime\": startTimeString,\n\t\t\t\t\t\"duration\": duration,\n\t\t\t\t\t\"status\": selected_event_status_uuid,\n\t\t\t\t\t\"demographicNo\": patientUuid,\n\t\t\t\t\t\"notes\": event_data.description,\n\t\t\t\t\t\"reason\": event_data.reason,\n\t\t\t\t\t\"location\": siteUuid,\n\t\t\t\t\t\"providerNo\": scheduleUuid,\n\t\t\t\t\t//\"name\": string,\n\t\t\t\t\t/*\t\t\t\"resources\": string,\n\t\t\t\t\t\t\t\t\"type\": string,\n\t\t\t\t\t\t\t\t\"urgency\": string,*/\n\t\t\t\t};\n\n\n\t\t\t\tconsole.log(editMode);\n\t\t\t\t$scope.scheduleApi.addAppointment(newAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t});\n\t\t\t}\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Read the implementation-specific results and return a calendar-compatible object.\n\t\t$scope.processSaveResults = function processSaveResults(results, displayErrors)\n\t\t{\n\t\t\tvar status = (results || {}).status;\n\n\t\t\tif(status == 'SUCCESS')\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar errorMessage = ((results || {}).error || {}).message;\n\t\t\tvar validationErrorArray = ((results || {}).error || {}).validationErrors;\n\n\t\t\tif(Array.isArray(validationErrorArray))\n\t\t\t{\n\t\t\t\tdisplayErrors.add_standard_error(errorMessage);\n\t\t\t\t//for(var error in validationErrorArray)\n\t\t\t\tfor(var i = 0; i < validationErrorArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar error = validationErrorArray[i];\n\t\t\t\t\tdisplayErrors.add_field_error(error.path, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\tpublic deleteEvent(event_uuid)\n\t\t{\n\t\t\tvar deferred = this.$q.defer();\n\n\t\t\tthis.event_model.del(event_uuid).then(function()\n\t\t\t{\n\t\t\t\tdeferred.resolve();\n\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t}*/\n\n\t\t$scope.openCreateInvoice = function openCreateInvoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t\t{\n\t\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\n\t\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\t\twindow.window_scope = $scope;\n\t\t\t$window.open(url, '_blank');\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t// Calls the named function on the calendar control object.  This is here to fail without\n\t\t// an error if the calendar isn't initialized yet.\n\t\t$scope.callCalendarMethod = function callCalendarMethod(name, args)\n\t\t{\n\t\t\tif($scope.cpCalendarControl && angular.isFunction($scope.cpCalendarControl[name]))\n\t\t\t{\n\t\t\t\treturn $scope.cpCalendarControl[name].apply(this, args);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.getGlobalPreferenceSetting = function getGlobalPreferenceSetting(key)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.globalState.preferences) &&\n\t\t\t\tJuno.Common.Util.exists($scope.globalState.preferences.settings))\n\t\t\t{\n\t\t\t\treturn $scope.globalState.preferences.settings[key];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.getGlobalState = function getGlobalState(key)\n\t\t{\n\t\t\tvar setting = $scope.globalState[key];\n\t\t\tif(!Juno.Common.Util.exists(setting))\n\t\t\t{\n\t\t\t\tsetting = null;\n\t\t\t}\n\t\t\treturn setting;\n\t\t};\n\n\t\t$scope.saveGlobalState = function saveGlobalState(key, value)\n\t\t{\n\t\t\t$scope.globalState[key] = value;\n\t\t};\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tvar selectedUuid = null;\n\t\t\tif($stateParams.default_schedule)\n\t\t\t{\n\t\t\t\t// Passed in url string\n\t\t\t\tselectedUuid = $stateParams.default_schedule;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.getGlobalState('schedule_default');\n\t\t\t}\n\t\t\tif(selectedUuid === null)\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.getGlobalPreferenceSetting('schedule_default');\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.loadSelectedSchedules = function loadSelectedSchedules()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar promiseArray = [];\n\n\t\t\tif(\n\t\t\t\tJuno.Common.Util.exists($scope.selectedSchedule.providerNos) &&\n\t\t\t\tangular.isArray($scope.selectedSchedule.providerNos)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// TODO: this is really gross and I don't like it\n\t\t\t\t// Potentially put this in the calendarApiAdapter\n\t\t\t\tangular.forEach($scope.selectedSchedule.providerNos, function(providerNo)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(providerNo.toString()));\n\t\t\t\t});\n\n\t\t\t\tif($scope.selectedSchedule.providerNos.length > 1)\n\t\t\t\t{\n\t\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t\t$scope.selectedResources = $scope.buildSelectedResources($scope.selectedSchedule.providerNos);\n\t\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"resourceDay\";\n\n\t\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t\t$scope.saveGlobalState(\"schedule_view_name\", \"resourceDay\");\n\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"agendaWeek\";\n\t\t\t\t\t$scope.saveGlobalState(\"schedule_view_name\", \"agendaWeek\");\n\t\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t\t}\n\n\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t}\n\t\t\telse if(\n\t\t\t\t$scope.viewName() !== 'resourceDay' &&\n\t\t\t\t$scope.selectedSchedule !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tpromiseArray.push(\n\t\t\t\t\t$scope.loadSchedule($scope.selectedSchedule.uuid));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tangular.forEach($scope.selectedResources, function(selected)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(selected.uuid));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Loop through the schedules added above and add them to the schedule list.\n\t\t\t$q.all(promiseArray).then(\n\t\t\t\tfunction success(resultsArray)\n\t\t\t\t{\n\t\t\t\t\t$scope.schedules = [];\n\t\t\t\t\tfor(var i = 0; i < resultsArray.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.schedules[i] = resultsArray[i].data;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(resultsArray);\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('errors');\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSchedule = function loadSchedule(providerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// TODO: fill up availabilities and relations, or figure out how to show that info without them\n\t\t\tvar schedule = {\n\t\t\t\tuuid: providerId,\n\t\t\t\tavailabilities: [], // TODO: figure out if these have a Juno equivalent, I don't think\n\t\t\t\t\t\t\t\t\t// TODO: they do.  They are things like holidays and vacation days\n\t\t\t\trelations: [],\n\t\t\t\tevents: []\n\t\t\t};\n\n\t\t\tdeferred.resolve({data: schedule});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.updateCalendarView = function updateCalendarView()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t// This gets the view name, but if it's resourceDay, it will get agendaDay.\n\t\t// TODO Not sure why this works this way.  Maybe it uses it to get a day of events for each\n\t\t//      resource in the resource list?\n\t\t$scope.calendarViewName = function calendarViewName()\n\t\t{\n\t\t\tvar view = $scope.viewName();\n\t\t\tif(view == 'resourceDay')\n\t\t\t{\n\t\t\t\tview = 'agendaDay';\n\t\t\t}\n\t\t\treturn view;\n\t\t};\n\n\t\t$scope.setCalendarLoading = function setCalendarLoading(isLoading)\n\t\t{\n\t\t\t$scope.calendarLoading = isLoading;\n\t\t};\n\n\t\t$scope.getLoadedSchedule = function getLoadedSchedule(uuid)\n\t\t{\n\t\t\tvar schedule = null;\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tif($scope.schedules[i].uuid === uuid)\n\t\t\t\t{\n\t\t\t\t\tschedule = $scope.schedules[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schedule;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\tvar viewName = $scope.getGlobalState('schedule_view_name');\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.getGlobalPreferenceSetting(\n\t\t\t\t\t'schedule_view_name');\n\t\t\t}\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.defaultCalendarView;\n\t\t\t}\n\n\t\t\t$scope.saveGlobalState('schedule_view_name', viewName);\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t\t$scope.buildSelectedResources = function buildSelectedResources(providerNos)\n\t\t{\n\t\t\tvar selectedResources = [];\n\n\t\t\tfor(var i = 0; i < providerNos.length; i++)\n\t\t\t{\n\t\t\t\tselectedResources.push($scope.resourceOptionHash[providerNos[i]]);\n\t\t\t}\n\n\t\t\treturn selectedResources;\n\t\t};\n\n\t\t$scope.setCalendarResources = function setCalendarResources()\n\t\t{\n\t\t\tif($scope.viewName() === 'resourceDay')\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t}\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.setEventSources = function setEventSources()\n\t\t{\n\t\t\t$scope.eventSources.push($scope.calendarEvents);\n\t\t};\n\n\t\t$scope.timeIntervalMinutes = function timeIntervalMinutes()\n\t\t{\n\t\t\treturn parseInt($scope.selectedTimeInterval.split(\":\")[1]);\n\t\t};\n\n\t\t$scope.loadAvailabilityTypes = function loadAvailabilityTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar availabilityTypes = {};\n\n\t\t\tscheduleService.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t/*\tExample JSON result (P is the oscar scheduletemplatecode.code)\n\t\t\t\t\tvar example_result = {\n\t\t\t\t\t\tP: {\n\t\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\tname: \"Do Not Book\",\n\t\t\t\t\t\t\tpreferred_event_length_minutes: null,\n\t\t\t\t\t\t\tsystem_code: \"unavailable\",\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\t*/\n\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\t\tavailabilityTypes[result.code] = {\n\t\t\t\t\t\t\tcolor: result.color,\n\t\t\t\t\t\t\tname: result.description,\n\t\t\t\t\t\t\tpreferred_event_length_minutes: result.duration,\n\t\t\t\t\t\t\tsystem_code: null,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.availabilityTypes = availabilityTypes;\n\t\t\t\t\tdeferred.resolve(availabilityTypes);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadDefaultSelections = function loadDefaultSelections()\n\t\t{\n\t\t\t$scope.selectedSchedule = $scope.getSelectedSchedule($scope.scheduleOptions);\n\n\t\t\t$scope.selectedResources = $scope.getSelectedResources($scope.resourceOptions);\n\n\t\t\t$scope.selectedTimeInterval = $scope.getSelectedTimeInterval(\n\t\t\t\t$scope.timeIntervalOptions, $scope.defaultTimeInterval);\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.uiConfig.calendar.minTime = $scope.getScheduleMinTime();\n\t\t\t$scope.uiConfig.calendar.maxTime = $scope.getScheduleMaxTime();\n\n\t\t\t// scroll so that one hour ago is the top of the calendar\n\t\t\t$scope.uiConfig.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t\t};\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tvar selectedUuid = null;\n\t\t\tif($stateParams.default_schedule)\n\t\t\t{\n\t\t\t\t// Passed in url string\n\t\t\t\tselectedUuid = $stateParams.default_schedule;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.getGlobalState('schedule_default');\n\t\t\t}\n\t\t\tif(selectedUuid === null)\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.getGlobalPreferenceSetting('schedule_default');\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.getSelectedResources = function getSelectedResources(resourceOptions)\n\t\t{\n\t\t\treturn [];\n\n\t\t\t/*\tXXX: probably not using this because we don't select resources in juno\n\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (all the non-doctor schedules)\n\n\t\t\tvar custom_resource_list =\n\t\t\t\tthis.get_global_state('schedule_resources');\n\n\t\t\tif(custom_resource_list === null)\n\t\t\t{\n\t\t\t\tcustom_resource_list = this.get_global_preference_setting(\n\t\t\t\t\t'schedule_resources');\n\t\t\t}\n\n\t\t\treturn this.get_group_resources(\n\t\t\t\tcustom_resource_list, resource_options);*/\n\t\t};\n\n\t\t$scope.getSelectedTimeInterval = function getSelectedTimeInterval(\n\t\t\ttimeIntervalOptions, defaultTimeInterval)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default\n\n\t\t\tvar selectedTimeInterval = null;\n\n\t\t\tvar timeInterval = $scope.getGlobalState('schedule_time_interval');\n\t\t\tif(timeInterval === null)\n\t\t\t{\n\t\t\t\ttimeInterval = $scope.getGlobalPreferenceSetting(\n\t\t\t\t\t'schedule_time_interval');\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(timeInterval))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < timeIntervalOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(timeInterval === timeIntervalOptions[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedTimeInterval = timeIntervalOptions[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(selectedTimeInterval === null)\n\t\t\t{\n\t\t\t\treturn defaultTimeInterval;\n\t\t\t}\n\n\t\t\treturn selectedTimeInterval;\n\t\t};\n\n\t\t$scope.getScheduleMinTime = function getScheduleMinTime()\n\t\t{\n\t\t\t// restrict day view if user preferences are set\n\n\t\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\t\treturn \"08:00\";\n\t\t};\n\n\t\t$scope.getScheduleMaxTime = function getScheduleMaxTime()\n\t\t{\n\t\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;*/\n\t\t\treturn \"20:00\";\n\t\t};\n\n\t\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t\t// $scope.event_statuses - a table to look up a status by uuid.\n\t\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t\t$scope.loadEventStatuses = function loadEventStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.eventStatuses = {};\n\t\t\t$scope.rotateStatuses = [];\n\t\t\t//$scope.calendar_api_adapter.load_event_statuses().then(\n\t\t\t$scope.scheduleApi.getCalendarAppointmentStatuses().then(//function(results)\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = snakeAppointmentStatuses(rawResults.data.body);\n\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t\t$scope.eventStatuses[result.uuid] = result;\n\t\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.rotateStatuses.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log($scope.eventStatuses);\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// XXX: unused variables\n\t\t$scope.loadScheduleEvents = function loadScheduleEvents(schedule, siteName, start, end,\n\t\t\tviewName, scheduleTemplates, eventStatuses, defaultEventColor, availabilityTypes)\n\t\t{\n\t\t\t//console.log(\"FETCHING: \" + providerId + \" \" + start.format(\"YYYY-MM-DD\") + \" \" + end.subtract(1, \"seconds\").format(\"YYYY-MM-DD\"));\n\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar providerId = schedule.uuid;\n\n\t\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t\t// the end time to convert to the correct date.\n\t\t\tvar startDateString = start.format(\"YYYY-MM-DD\");\n\t\t\tvar endDateString = end.subtract(1, 'seconds').format(\"YYYY-MM-DD\");\n\n\t\t\tscheduleService.getSchedulesForCalendar(\n\t\t\t\tproviderId,\n\t\t\t\tstartDateString,\n\t\t\t\tendDateString,\n\t\t\t\tsiteName\n\t\t\t).then(function(results)\n\t\t\t{\n\t\t\t\t// Transform from camel to snake.  Normally this wouldn't need to happen, but\n\t\t\t\t// this is an external library that requires a certain format.\n\t\t\t\tdeferred.resolve({data: snakeScheduleResults(results, providerId)});\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Local methods\n\t\t//=========================================================================\n\n\t\tfunction snakeAppointmentStatuses(data)\n\t\t{\n\t\t\tif (!angular.isArray(data))\n\t\t\t{\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tvar snake_data = [];\n\n\t\t\tfor (var i = 0; i < data.length; i++)\n\t\t\t{\n\t\t\t\tsnake_data.push({\n\t\t\t\t\tuuid: data[i].displayLetter,\n\t\t\t\t\tname: data[i].name,\n\t\t\t\t\tdisplay_letter: data[i].displayLetter,\n\t\t\t\t\tcolor: data[i].color,\n\t\t\t\t\ticon: data[i].icon,\n\t\t\t\t\trotates: data[i].rotates,\n\t\t\t\t\tsystem_code: data[i].systemCode,\n\t\t\t\t\tsort_order: data[i].sortOrder,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log(snake_data);\n\n\t\t\treturn snake_data;\n\t\t}\n\n\t\tfunction snakeAppointmentData(data, providerId)\n\t\t{\n\t\t\tif(data == null)\n\t\t\t{\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tappointment_uuid: data.scheduleUuid,\n\t\t\t\tschedule_uuid: providerId,\n\t\t\t\tevent_status_uuid: data.eventStatusUuid,\n\t\t\t\tevent_status_modifier: data.eventStatusModifier,\n\t\t\t\tstart_time: data.startTime,\n\t\t\t\tend_time: data.endTime,\n\t\t\t\tsite: data.site,\n\t\t\t\treason: data.reason,\n\t\t\t\tnum_invoices: data.numInvoices,\n\t\t\t\tdemographics_patient_dob: data.demographicPatientDob,\n\t\t\t\tdemographics_patient_name: data.demographicPatientName,\n\t\t\t\tdemographics_patient_phone: data.demographicPatientPhone,\n\t\t\t\tdemographics_patient_uuid: data.demographicPatientUuid,\n\t\t\t\tdemographics_practitioner_uuid: data.demographicPractitionerUuid,\n\t\t\t\ttag_names: data.tagNames,\n\t\t\t\ttag_self_booked: data.tagSelfBooked,\n\t\t\t\ttag_self_cancelled: data.tagSelfCancelled,\n\t\t\t\ttag_system_codes: data.tagSystemCodes\n\t\t\t};\n\t\t}\n\n\t\tfunction snakeAvailabilityType(data)\n\t\t{\n\t\t\tif(data == null)\n\t\t\t{\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: data.name,\n\t\t\t\tcolor: data.color,\n\t\t\t\tpreferred_event_length_minutes: data.preferredEventLengthMinutes,\n\t\t\t\tsystem_code: data.systemCode,\n\t\t\t};\n\t\t}\n\n\t\tfunction snakeScheduleResults(results, providerId)\n\t\t{\n\t\t\tif(!angular.isArray(results))\n\t\t\t{\n\t\t\t\treturn results;\n\t\t\t}\n\n\t\t\tvar snake_results = [];\n\n\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t{\n\t\t\t\tvar result = results[i];\n\t\t\t\tsnake_results.push({\n\t\t\t\t\tresourceId: result.resourceId,\n\t\t\t\t\tstart: result.start,\n\t\t\t\t\tend: result.end,\n\t\t\t\t\tcolor: result.color,\n\t\t\t\t\trendering: result.rendering,\n\t\t\t\t\tschedule_template_code: result.scheduleTemplateCode,\n\t\t\t\t\tclassName: result.className,\n\t\t\t\t\tavailability_type: snakeAvailabilityType(result.availabilityType),\n\t\t\t\t\tdata: snakeAppointmentData(result.data, providerId),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn snake_results;\n\t\t}\n\n\n\t\t//=========================================================================\n\t\t// Event Handlers\n\t\t//=========================================================================/\n\n\t\t$scope.getIconPath = function getIconPath(icon, statusModifier)\n\t\t{\n\t\t\tif(!Juno.Common.Util.exists(icon))\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tvar modifierString = \"\";\n\n\t\t\tif(Juno.Common.Util.exists(statusModifier))\n\t\t\t{\n\t\t\t\tmodifierString = statusModifier;\n\t\t\t}\n\n\t\t\treturn \"../images/\" + modifierString + icon;\n\t\t};\n\n\t\t$scope.onEventRender = function onEventRender(event, element, view)\n\t\t{\n\t\t\tif(event.rendering !== 'background')\n\t\t\t{\n\t\t\t\tvar eventSiteHtml = '';\n\t\t\t\tvar eventSite = $scope.sites[event.data.site];\n\n\t\t\t\tif(Juno.Common.Util.exists(eventSite))\n\t\t\t\t{\n\t\t\t\t\teventSiteHtml += \"<span style='background-color: \" + eventSite.color + \"'>&nbsp;</span>\"\n\t\t\t\t}\n\n\n\t\t\t\tvar eventStatusHtml = '';\n\t\t\t\tvar eventStatus =\n\t\t\t\t\t$scope.eventStatuses[event.data.event_status_uuid];\n\n\t\t\t\tif(Juno.Common.Util.exists(eventStatus) && Juno.Common.Util.exists(eventStatus.icon) &&\n\t\t\t\t\tJuno.Common.Util.exists(event) && Juno.Common.Util.exists(event.data))\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml += \"<img src='\" + $scope.getIconPath(eventStatus.icon, event.data.event_status_modifier) + \"' />\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml = '<span class=\"event-status';\n\t\t\t\t\tif(Juno.Common.Util.exists(eventStatus))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar eventStatusRotate = Juno.Common.Util.exists(eventStatus.sort_order);\n\t\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teventStatusHtml += ' rotate ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\teventStatusHtml += '\"' + ' title=\"' + Juno.Common.Util.escapeHtml(eventStatus.name) + '\">' +\n\t\t\t\t\t\t\tJuno.Common.Util.escapeHtml(eventStatus.display_letter) + '</span>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += '\" title=\"Unknown\">?</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar eventInvoiceHtml = '<span class=\"event-invoice';\n\t\t\t\tif(event.data.num_invoices > 0)\n\t\t\t\t{\n\t\t\t\t\teventInvoiceHtml += ' edit\" title=\"View Invoice' +\n\t\t\t\t\t\t(event.data.num_invoices > 1 ? \"s\" : \"\") + '\">B</span>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\teventInvoiceHtml += '\" title=\"Create Invoice\">$</span>';\n\t\t\t\t}\n\n\t\t\t\tvar eventDetails = \"\";\n\t\t\t\tif(Juno.Common.Util.exists(event.data.demographics_patient_name))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.demographics_patient_name);\n\t\t\t\t\tif(Juno.Common.Util.exists(event.data.reason))\n\t\t\t\t\t{\n\t\t\t\t\t\teventDetails += \" (\" + Juno.Common.Util.escapeHtml(event.data.reason) + \")\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(Juno.Common.Util.exists(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.reason);\n\t\t\t\t}\n\n\t\t\t\tvar eventDetailsHtml = \"<span class='event-details' title='\" + eventDetails + \"'>\" +\n\t\t\t\t\teventDetails + \"</span>\";\n\n\t\t\t\tvar eventDemographicHtml = \"\";\n\t\t\t\tif(securityService.hasOneOfPermissions(['patient_view', 'patient_manage']) &&\n\t\t\t\t\tJuno.Common.Util.exists(event.data.demographics_patient_uuid))\n\t\t\t\t{\n\t\t\t\t\teventDemographicHtml =\n\t\t\t\t\t\t'<span class=\"event-demographic\" title=\"View Patient\">' +\n\t\t\t\t\t\t'<i class=\"fa fa-user\"></i></span>';\n\t\t\t\t}\n\n\t\t\t\tvar eventNoteHtml = \"\";\n\t\t\t\tif(securityService.hasOneOfPermissions(['chart_note_view', 'chart_note_manage']) &&\n\t\t\t\t\tJuno.Common.Util.exists(event.data.demographics_patient_uuid))\n\t\t\t\t{\n\t\t\t\t\teventNoteHtml =\n\t\t\t\t\t\t'<span class=\"event-note\" title=\"Add Patient Note\">' +\n\t\t\t\t\t\t'<i class=\"fa fa-file-text-o\"></i></span>';\n\t\t\t\t}\n\n\t\t\t\tvar eventTagsHtml = '';\n\t\t\t\tvar tagClass = element.hasClass('text-light') ? 'icon-white' : '';\n\n\t\t\t\tif(Juno.Common.Util.exists(event.data.tag_names))\n\t\t\t\t{\n\t\t\t\t\teventTagsHtml = '<span class=\"event-tags\" title=\"' +\n\t\t\t\t\t\tevent.data.tag_names.join(\", \") +\n\t\t\t\t\t\t'\"><i class=\"icon ' + tagClass + ' icon-tags\"/></span>';\n\t\t\t\t}\n\n\t\t\t\t$(element).find('.fc-content').html(eventSiteHtml + eventStatusHtml + eventInvoiceHtml +\n\t\t\t\t\teventDemographicHtml + eventNoteHtml + eventTagsHtml + eventDetailsHtml);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onViewRender = function onViewRender()\n\t\t{\n\t\t\tif($scope.isInitialized() && $scope.calendar())\n\t\t\t{\n\t\t\t\t$scope.globalState.selected_date = moment(Juno.Common.Util.formatMomentDate(\n\t\t\t\t\tmoment($scope.calendar().fullCalendar('getDate'))));\n\t\t\t}\n\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$(\"#ca-calendar\").css('min-width',$('.fc-resource-cell').length*125);\n\t\t};\n\n\t\t$scope.afterRender = function afterRender()\n\t\t{\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$('.fc-agendaDay-button').click(function()\n\t\t\t{\n\t\t\t\t$(\"#schedule_container\").css('min-width',$('.fc-resource-cell').length*125);\n\t\t\t});\n\t\t};\n\n\t\t$scope.rotateEventStatus = function rotateEventStatus(calEvent)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\t$scope.calendar_api_adapter.rotate_event_status(calEvent.data.uuid, $scope.rotate_statuses).then(\n\t\t\t\tfunction success(event_data)\n\t\t\t\t{\n\n\t\t\t\t\tvar event_status_uuid = event_data.event_status_uuid;\n\t\t\t\t\tvar event_status_color =\n\t\t\t\t\t\t$scope.eventStatuses[event_status_uuid] ?\n\t\t\t\t\t\t\t$scope.eventStatuses[event_status_uuid].color :\n\t\t\t\t\t\t\t$scope.default_event_color;\n\n\t\t\t\t\tcalEvent.data.event_status_uuid = event_status_uuid;\n\t\t\t\t\tcalEvent.color = event_status_color;\n\t\t\t\t\t// This is being set to an array because of a bug:\n\t\t\t\t\t// https://github.com/fullcalendar/fullcalendar/issues/4011\n\t\t\t\t\tcalEvent.className = [$scope.calendar_api_adapter.event_class(event_status_color)];\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\n\t\t\t/*\n\t\t\tevent_model.load(uuid).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tvar next_index = null;\n\t\t\t\t\tfor(var i = 0; i < rotate_statuses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rotate_statuses[i].uuid ===\n\t\t\t\t\t\t\tevent_model.data.event_status_uuid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnext_index = (i + 1) % rotate_statuses.length;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tevent_model.data.event_status_uuid =\n\t\t\t\t\t\trotate_statuses[next_index].uuid;\n\n\t\t\t\t\tevent_model.save().then(\n\t\t\t\t\t\tfunction success()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t*/\n\t\t};\n\n\t\t$scope.openCreateEventDialog = function openCreateEventDialog(\n\t\t\tstart, end, jsEvent, view, resource)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = null;\n\t\t\tvar displayName = \"\";\n\t\t\tif(Juno.Common.Util.exists(resource))\n\t\t\t{\n\t\t\t\tscheduleUuid = resource.id;\n\t\t\t\tdisplayName = resource.display_name;\n\t\t\t}\n\t\t\telse if($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\tscheduleUuid = $scope.selectedSchedule.uuid;\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefault_event_status: null, //defaultEventStatus,\n\t\t\t\t\tstart_time: start,\n\t\t\t\t\tend_time: end,\n\t\t\t\t\ttime_interval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tschedule_templates: $scope.scheduleTemplates,\n\t\t\t\t\tavailability_types: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return false }],\n\t\t\t\t\t\t//access_control: [function() {return securityService}],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t// XXX: make this work\n\t\t$scope.openPatientDialog = function openPatientDialog(editModeCallback, onSaveCallback,\n\t\t\tloadErrorLinkPatientFn)\n\t\t{\n\t\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\t\treturn this.$uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tedit_mode: editModeCallback,\n\t\t\t\t\ton_save_callback: onSaveCallback,\n\t\t\t\t\tload_error_link_patient_fn: loadErrorLinkPatientFn\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$scope.onEventClicked = function onEventClicked(calEvent, jsEvent, view)\n\t\t{\n\t\t\tif($(jsEvent.target).is(\".event-status.rotate\"))\n\t\t\t{\n\t\t\t\t$scope.rotateEventStatus(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-invoice.edit\"))\n\t\t\t{\n\t\t\t\t$scope.openViewInvoices(calEvent.data.uuid);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-invoice\"))\n\t\t\t{\n\t\t\t\t$scope.openCreateInvoice(\n\t\t\t\t\tcalEvent.data.uuid,\n\t\t\t\t\tcalEvent.data.schedule_uuid,\n\t\t\t\t\tcalEvent.data.demographics_patient_uuid);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-demographic\") ||\n\t\t\t\t$(jsEvent.target).parent().is(\".event-demographic\"))\n\t\t\t{\n\t\t\t\t$scope.openPatientDemographic(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-note\") ||\n\t\t\t\t$(jsEvent.target).parent().is(\".event-note\"))\n\t\t\t{\n\t\t\t\t$scope.openCreateChartNote(calEvent);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.openEditEventDialog(calEvent);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventDrop = function onEventDrop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was dragged and dropped on the calendar:\n\t\t\t// load then update the start and end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\t$scope.dropEvent(calEvent.data.uuid, calEvent.resourceId, delta).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tcalEvent.data.start_time = eventData.start_time;\n\t\t\t\t\tcalEvent.data.end_time = eventData.end_time;\n\t\t\t\t\tcalEvent.data.schedule_uuid = eventData.schedule_uuid;\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.onEventResize = function onEventResize(calEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t\t// load then update the end time based on the delta\n\t\t\t$scope.set_calendar_loading(true);\n\n\t\t\t$scope.calendar_api_adapter.resize_event(calEvent.data.uuid, delta).then(\n\t\t\t\tfunction success(event_data)\n\t\t\t\t{\n\t\t\t\t\tcalEvent.data.end_time = event_data.end_time;\n\n\t\t\t\t\t$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.set_calendar_loading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.set_calendar_loading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// API Methods from directive\n\t\t//=========================================================================/\n\n\t\t/*\n\t\tthis.has_sites = function has_sites() {\n\t\t\treturn $scope.site_options.length > 0;\n\t\t};\n\n\t\tthis.get_schedule_options = function get_schedule_options()\n\t\t{\n\t\t\treturn $scope.schedule_options;\n\t\t};\n\n\t\tthis.get_site_options = function get_site_options()\n\t\t{\n\t\t\treturn $scope.site_options;\n\t\t};\n\n\t\tthis.on_schedule_changed = function on_schedule_changed(schedule_uuid, site)\n\t\t{\n\t\t\treturn $scope.on_schedule_changed(schedule_uuid, site);\n\t\t};\n\n\t\tthis.on_time_interval_changed = function on_time_interval_changed(selected_time_interval)\n\t\t{\n\t\t\treturn $scope.on_time_interval_changed(selected_time_interval);\n\t\t};\n\n\t\tthis.change_view = function change_view(view)\n\t\t{\n\t\t\treturn $scope.change_view(view);\n\t\t};\n\n\t\tthis.view_name = function view_name()\n\t\t{\n\t\t\treturn $scope.view_name();\n\t\t};\n\n\t\tthis.get_time_interval_options = function get_time_interval_options()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\tthis.show_legend = function show_legend()\n\t\t{\n\t\t\treturn $scope.show_legend();\n\t\t};\n\t\t*/\n\n\n\t\t//=========================================================================\n\t\t// Methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t$scope.initialized = false;\n\n\n\t\t//=========================================================================\n\t\t// Init methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t\t// $scope.resourceOptionHash - table to look up schedule information by providerNo.  This is\n\t\t//                               used to create the resource view headers.\n\t\t$scope.loadScheduleOptions = function loadScheduleOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t/*\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t//);\n\t\t\t*/\n\n\t\t\t//$scope.loadScheduleOptions().then(\n\n\t\t\tscheduleService.getScheduleGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\n\t\t\t\t\t\t$scope.scheduleOptions.push(scheduleData);\n\n\t\t\t\t\t\t// Get the possible resources by inferring that the group is a provider\n\t\t\t\t\t\t// by checking if the array has one entry and matches the identifier\n\t\t\t\t\t\t// Also uses fields specific to Juno.\n\t\t\t\t\t\t// TODO: CHANGE THIS!!\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\tangular.isArray(scheduleData.providerNos) &&\n\t\t\t\t\t\t\tscheduleData.providerNos.length == 1 &&\n\t\t\t\t\t\t\tscheduleData.providerNos[0].toString() == scheduleData.identifier\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar providerNo = scheduleData.providerNos[0];\n\n\t\t\t\t\t\t\t$scope.resourceOptionHash[providerNo] = {\n\t\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t\t'uuid': providerNo,\n\t\t\t\t\t\t\t\t'name': providerNo,\n\t\t\t\t\t\t\t\t'title': scheduleData.name,\n\t\t\t\t\t\t\t\t'display_name': scheduleData.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.load_schedule_options = function load_schedule_options()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getScheduleGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Load the list of available sites from the API.  Sets the following:\n\t\t// $scope.sites - a table to lookup a site's info by name\n\t\t// $scope.site_options - the options for the site selection dropdown\n\t\t$scope.loadSiteOptions = function loadSiteOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.loadSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.sites = {};\n\t\t\t\t\t$scope.siteOptions = [];\n\t\t\t\t\tif(angular.isArray(results) && results.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t\t$scope.siteOptions = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\t\tdisplay_name: \"All\",\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\t$scope.siteOptions = $scope.siteOptions.concat(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSites = function loadSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif(angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(out);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Config Array\n\t\t//=========================================================================/\n\n\t\t$scope.applyUiConfig = function applyUiConfig(uiConfig)\n\t\t{\n\t\t\t$scope.uiConfigApplied = angular.copy(uiConfig);\n\t\t};\n\n\t\t$scope.initEventsAutoRefresh = function initEventsAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = $scope.getGlobalState('schedule_auto_refresh');\n\t\t\tif(refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = $scope.getGlobalPreferenceSetting(\n\t\t\t\t'schedule_auto_refresh_minutes');\n\t\t\tif(!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = $scope.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif(minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\t$scope.saveGlobalState('schedule_auto_refresh',\n\t\t\t\t\tsetInterval($scope.refetchEvents, minutes * 60 * 1000));\n\t\t\t}\n\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Any changes to this array need to be applied by calling applyUiConfig()\n\t\t$scope.uiConfig = {\n\t\t\tcalendar: {\n\t\t\t\theight: 800,//$scope.get_schedule_height(),\n\t\t\t\tnowIndicator: true,\n\t\t\t\theader: {\n\t\t\t\t\tleft: 'title',\n\t\t\t\t\tcenter: '',\n\t\t\t\t\tright: 'today prev,next'\n\t\t\t\t},\n\n\t\t\t\tallDaySlot: false,\n\n\t\t\t\tdefaultView: null,\n\t\t\t\tdefaultDate: $scope.defaultDate,\n\t\t\t\tslotDuration: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelInterval: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelFormat: 'h:mma',\n\n\t\t\t\tloading: $scope.setCalendarLoading,\n\n\t\t\t\tselectable: true,\n\t\t\t\tselect: $scope.openCreateEventDialog,\n\t\t\t\teventClick: $scope.onEventClicked,\n\t\t\t\teventRender: $scope.onEventRender,\n\t\t\t\tviewRender: $scope.onViewRender,\n\t\t\t\teventAfterAllRender: $scope.afterRender,\n\n\t\t\t\teditable: true,\n\t\t\t\teventDrop: $scope.onEventDrop,\n\t\t\t\teventResize: $scope.onEventResize\n\t\t\t}\n\t\t};\n\n\t\t$scope.init();\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services']);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A'\n\t\t\t\t\t};\n\n\n\t\t\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n                                        ticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'demographicService',\n\t'demographicsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.setSwipeReady(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// controller.page.demo = demo;\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tcontroller.setSwipeReady();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\n\t\t// //calculate age\n\t\t// var now = new Date();\n\t\t// controller.calculateAge = function calculateAge()\n\t\t// {\n\t\t// \tcontroller.page.demo.age = now.getFullYear() - controller.page.demo.dobYear;\n\t\t// \tif (now.getMonth() < controller.page.demo.dobMonth - 1) controller.page.demo.age--;\n\t\t// \telse if (now.getMonth() == controller.page.demo.dobMonth - 1 && now.getDate() < controller.page.demo.dobDay) controller.page.demo.age--;\n\t\t// };\n\t\t//\n\t\t// controller.calculateAge(); //done on page load\n\n\t\t//set ready for swipe card\n\t\tcontroller.setSwipeReady = function setSwipeReady(status)\n\t\t{\n\t\t\tif (status == \"off\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Click for Card Swipe\";\n\t\t\t}\n\t\t\telse if (status == \"done\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-primary\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-success\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Ready for Card Swipe\";\n\t\t\t\tcontroller.page.swipecard = \"\";\n\t\t\t}\n\t\t};\n\n\t\t//Health card verification\n\t\tcontroller.healthCardHandler = function healthCardHandler(keycode)\n\t\t{\n\t\t\tif (keycode == 13)\n\t\t\t{ //carriage-return\n\t\t\t\tvar swipeCardData = controller.page.swipecard;\n\t\t\t\tcontroller.page.swipecard = \"\";\n\n\t\t\t\tif (swipeCardData.substring(0, 3) == \"%E?\")\n\t\t\t\t{ //swipe card error\n\t\t\t\t\talert(\"Error reading card\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (swipeCardData.substring(2, 8) == \"610054\")\n\t\t\t\t\t{ //Ontario\n\t\t\t\t\t\thcParts[\"issuer\"] = \"ON\";\n\t\t\t\t\t\thcParts[\"hin\"] = swipeCardData.substring(8, 18);\n\n\t\t\t\t\t\tvar namePos = swipeCardData.indexOf(\"^\") + 1;\n\t\t\t\t\t\tvar endNamePos = swipeCardData.indexOf(\"^\", namePos);\n\t\t\t\t\t\thcParts[\"fullName\"] = swipeCardData.substring(namePos, endNamePos);\n\t\t\t\t\t\thcParts[\"lastName\"] = hcParts[\"fullName\"].split(\"/\")[0];\n\t\t\t\t\t\thcParts[\"firstName\"] = hcParts[\"fullName\"].split(\"/\")[1].trim();\n\n\t\t\t\t\t\thcParts[\"sex\"] = swipeCardData.substring(endNamePos + 8, endNamePos + 9);\n\t\t\t\t\t\thcParts[\"dob\"] = swipeCardData.substring(endNamePos + 9, endNamePos + 17);\n\t\t\t\t\t\thcParts[\"hinExp\"] = swipeCardData.substring(endNamePos + 1, endNamePos + 5) + hcParts[\"dob\"].substring(6, 8);\n\t\t\t\t\t\thcParts[\"hinVer\"] = swipeCardData.substring(endNamePos + 17, endNamePos + 19);\n\t\t\t\t\t\thcParts[\"firstNameShort\"] = swipeCardData.substring(endNamePos + 19, endNamePos + 24);\n\t\t\t\t\t\thcParts[\"issueDate\"] = swipeCardData.substring(endNamePos + 24, endNamePos + 30);\n\t\t\t\t\t\thcParts[\"lang\"] = swipeCardData.substring(endNamePos + 30, endNamePos + 32);\n\n\t\t\t\t\t\tif (!isNumber(hcParts[\"dob\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"dob\"] = null;\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"hinExp\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"issueDate\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"issueDate\"] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.setSwipeReady(\"done\");\n\t\t\t\t\t\tcontroller.healthCardUpdateDemographics();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\talert(\"Not Ontario Health Card\");\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.validateHC(); //Run HCValidation\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.healthCardUpdateDemographics = function healthCardUpdateDemographics()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.hcType != hcParts[\"issuer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcType = hcParts[\"issuer\"];\n\t\t\t\tcontroller.page.hcTypeColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.lastName != hcParts[\"lastName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = hcParts[\"lastName\"];\n\t\t\t\tcontroller.page.lastNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.firstName != hcParts[\"firstName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = hcParts[\"firstName\"];\n\t\t\t\tcontroller.page.firstNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (isNumber(hcParts[\"hin\"]) && controller.page.demo.hin != hcParts[\"hin\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = hcParts[\"hin\"];\n\t\t\t\tcontroller.page.hinColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.ver != hcParts[\"hinVer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = hcParts[\"hinVer\"];\n\t\t\t\tcontroller.page.verColor = colorAttn;\n\t\t\t}\n\t\t\tvar hcSex = hcParts[\"sex\"] == 1 ? \"M\" : (hcParts[\"sex\"] == 2 ? \"F\" : null);\n\t\t\tif (hcSex != null && controller.page.demo.sex != hcSex)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = hcSex;\n\t\t\t\tcontroller.page.sexColor = colorAttn;\n\t\t\t}\n\t\t\tvar dateParts = {};\n\t\t\tif (hcParts[\"dob\"] != null)\n\t\t\t{\n\t\t\t\tdateParts[\"year\"] = hcParts[\"dob\"].substring(0, 4);\n\t\t\t\tdateParts[\"month\"] = hcParts[\"dob\"].substring(4, 6);\n\t\t\t\tdateParts[\"day\"] = hcParts[\"dob\"].substring(6);\n\t\t\t\tif (controller.page.demo.dobYear != dateParts[\"year\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobYear = dateParts[\"year\"];\n\t\t\t\t\tcontroller.page.dobYearColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobMonth != dateParts[\"month\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobMonth = dateParts[\"month\"];\n\t\t\t\t\tcontroller.page.dobMonthColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobDay != dateParts[\"day\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobDay = dateParts[\"day\"];\n\t\t\t\t\tcontroller.page.dobDayColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"issueDate\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"issueDate\"].substring(0, 2) + \"-\" + hcParts[\"issueDate\"].substring(2, 4) + \"-\" + hcParts[\"issueDate\"].substring(4);\n\t\t\t\tif (controller.page.demo.effDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.effDate = swipeDate;\n\t\t\t\t\tcontroller.page.effDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"hinExp\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"hinExp\"].substring(0, 2) + \"-\" + hcParts[\"hinExp\"].substring(2, 4) + \"-\" + hcParts[\"hinExp\"].substring(4);\n\t\t\t\tif (controller.page.demo.hcRenewDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.hcRenewDate = swipeDate;\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tvar hinExpDate = buildDate(\"20\" + hcParts[\"hinExp\"].substring(0, 2), hcParts[\"hinExp\"].substring(2, 4), hcParts[\"hinExp\"].substring(4));\n\t\t\t\tif (hinExpDate != null && now > hinExpDate)\n\t\t\t\t{\n\t\t\t\t\talert(\"This health card has expired!\");\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t}\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t}\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t}\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t}\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t}\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t}\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t}\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t}\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t}\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t}\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t}\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t}\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t}\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t}\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t}\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t}\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t}\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t}\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t}\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t}\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label == \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t}\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t}\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t}\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t}\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func == \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion == \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion == \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func == \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func == \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t}\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"form ctrl \", $stateParams, $state);\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = $stateParams.formListId;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length == 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Library'\n\t\t}]; //Need to get this from the server.\n\n\t\tcontroller.page.formlists.forEach(function(item, index)\n\t\t{\n\t\t\tconsole.log('What is the item ', item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, item.label).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentFormList[index] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t});\n\n\n\t\tcontroller.page.encounterFormlist = [];\n\t\tcontroller.page.formGroups = [];\n\t\tcontroller.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tformService.getFormGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups = results;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups.push(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < controller.page.formGroups.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!(controller.page.formGroups[i].summaryItem instanceof Array))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.formGroups[i].summaryItem = [controller.page.formGroups[i].summaryItem];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getFormGroups();\n\t\tcontroller.page.formOptions = [];\n\t\tcontroller.favouriteGroup = null;\n\n\t\tgetFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tformService.getFavouriteFormGroup().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.favouriteGroup = results;\n\n\t\t\t\t\tif (!(controller.favouriteGroup.summaryItem instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.favouriteGroup.summaryItem = [controller.favouriteGroup.summaryItem];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tgetFavouriteFormGroup();\n\n\t\tformService.getFormOptions(controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(\"data\", results);\n\n\t\t\t\tif (results.items instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions = results.items;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions.push(results.items);\n\t\t\t\t}\n\n\n\t\t\t\tconsole.log(\"form options\", controller.page.formOptions);\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[0] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getSelectedEncounterForms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[1] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item, view)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar queryName = $location.search().name;\n\t\t\tvar params = {\n\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\ttype: item.type === 'eform' ? 'eform' : 'form',\n\t\t\t\tid: item.id || item.formId\n\t\t\t};\n\n\t\t\t// The items sent from the server are such that\n\t\t\t// 1. Existing eforms have a formId and an id\n\t\t\t// 2. Existing forms have a formId only\n\t\t\t// 3. Library/available eforms have a formId only\n\t\t\t// 4. Library/available forms have neither\n\t\t\tif ((item.type === 'eform' && item.id) || (item.type === 'form' && item.formId))\n\t\t\t{\n\t\t\t\tparams.name = item.type === 'form' ? item.name || queryName : '';\n\t\t\t\t$state.go('record.forms.view', params);\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\t$state.go('record.forms.add', params);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.go('record.forms');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* 1=frame\n\t\t\t* 2=newwindow\n\t\t\t*/\n\t\t\tif (view === undefined)\n\t\t\t{\n\t\t\t\tview = 1;\n\t\t\t}\n\n\t\t\tvar url = '';\n\t\t\tif (item.type === 'eform')\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmshowform_data.jsp?fdid=' + item.id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmformadd_data.jsp?fid=' + item.formId + '&demographic_no=' + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //form\n\t\t\t\tif (angular.isDefined(item.formId))\n\t\t\t\t{\n\t\t\t\t\tvar name = item.name || queryName;\n\t\t\t\t\turl = '../form/forwardshortcutname.jsp?formname=' + name + '&demographic_no=' + $stateParams.demographicNo + '&formId=' + item.formId;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = item.formValue + $stateParams.demographicNo + \"&formId=0&provNo=\" + user.providerNo + \"&parentAjaxId=forms\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view === 1)\n\t\t\t{\n\t\t\t\t$(\"html, body\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, \"slow\");\n\t\t\t}\n\t\t\telse if (view === 2)\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.page.currentForm = item;\n\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t{});\n\t\t\tcontroller.pymParent = pymParent;\n\n\t\t\t/*if(item.type != 'eform' && view==1){\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = \"1600px\"; //temp hack for the forms\n\t\t\t}*/\n\n\t\t\t//resize iframe for both form and eforms\n\t\t\t$('iframe').load(function()\n\t\t\t{\n\t\t\t\tvar maxheight = Math.max(document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.scrollHeight, document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.offsetHeight) + 30 + 'px';\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = maxheight;\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.isEmpty = function isEmpty(obj)\n\t\t{\n\t\t\tfor (var i in obj)\n\t\t\t\tif (obj.hasOwnProperty(i)) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.currentEformGroup = {};\n\n\t\tcontroller.setCurrentEFormGroup = function setCurrentEFormGroup(mod)\n\t\t{\n\t\t\tcontroller.currentEformGroup = mod;\n\t\t};\n\n\t\tcontroller.openFormFromGroups = function openFormFromGroups(item)\n\t\t{\n\t\t\tconsole.log(\"group item\", item);\n\t\t\titem.formId = item.id;\n\t\t\tdelete item.id;\n\t\t\tcontroller.viewFormState(item, 2);\n\t\t};\n\n\t\tcontroller.formOption = function formOption(opt)\n\t\t{\n\t\t\tvar atleastOneItemSelected = false;\n\t\t\tif (opt.extra == \"send2PHR\")\n\t\t\t{\n\t\t\t\tvar docIds = \"\";\n\t\t\t\tfor (var i = 0; i < controller.page.currentFormList[controller.page.currentlistId].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.page.currentFormList[controller.page.currentlistId][i].isChecked)\n\t\t\t\t\t{\n\t\t\t\t\t\tdocIds = docIds + '&sendToPhr=' + controller.page.currentFormList[controller.page.currentlistId][i].id;\n\t\t\t\t\t\tatleastOneItemSelected = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (atleastOneItemSelected)\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t\tvar url = '../eform/efmpatientformlistSendPhrAction.jsp?clientId=' + controller.demographicNo + docIds;\n\t\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atleastOneItemSelected)\n\t\t\t{\n\t\t\t\talert(\"No Documents Selected\");\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to make group setting active\n\t\t */\n\t\tcontroller.getGroupListClass = function getGroupListClass(grp)\n\t\t{\n\t\t\tif (grp === controller.currentEformGroup)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type === controller.page.currentForm.type && item.id === controller.page.currentForm.id && !Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type === controller.page.currentForm.type && item.formId === controller.page.currentForm.formId && Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t}\n\n\t\tvar currentState = $state.current.name;\n\t\tif (currentState === 'record.forms.view' || currentState === 'record.forms.add')\n\t\t{\n\t\t\tvar item = {};\n\t\t\titem.type = $state.params.type;\n\n\t\t\t// set item properties in a way that matches the content that the server returns\n\t\t\tif (currentState === 'record.forms.view' && item.type === 'eform')\n\t\t\t{\n\t\t\t\titem.id = $state.params.id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\titem.formId = $state.params.id;\n\t\t\t}\n\n\t\t\tcontroller.viewFormState(item);\n\t\t\tcontroller.changeTo(currentState === 'record.forms.view' ? 0 : 1);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.keyCode == 38)\n\t\t\t{ //up\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.keyCode == 40)\n\t\t\t{ //Down\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\tcontroller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code; //'ongoingconcerns';\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: true,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\n\t\t\tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t\teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\n\t\t\titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t\titvCheck = $interval(function()\n\t\t\t{\n\t\t\t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\n\t\t\t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}, 10000); //check for new edit every 10 sec\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\titvSet = null;\n\t\t\t\titvCheck = null;\n\t\t\t\teditingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$filter',\n\t'mod',\n\t'action',\n\t'$stateParams',\n\t'summaryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\tmod,\n\t\taction,\n\t\t$stateParams,\n\t\tsummaryService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.pageOptions = {};\n\t\tcontroller.pageOptions.printType = {};\n\t\tcontroller.pageOptions.dates = {};\n\t\tcontroller.page = {};\n\t\tcontroller.page.selectedWarning = false;\n\n\t\t/*\n\t\t *If mod length > 0 than the user has selected a note. = Default to Note\n\t\t *Other wise default to All\n\t\t */\n\t\tvar atleastOneSelected = false;\n\t\tfor (var i = 0; i < mod.length; i++)\n\t\t{\n\t\t\tif (mod[i].isSelected)\n\t\t\t{\n\t\t\t\tatleastOneSelected = true;\n\t\t\t\ti = mod.length;\n\t\t\t}\n\t\t}\n\n\t\tif (atleastOneSelected)\n\t\t{\n\t\t\tconsole.log(\"mod len \", mod.length);\n\t\t\tcontroller.pageOptions.printType = 'selected';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"printType = all\");\n\t\t\tcontroller.pageOptions.printType = 'all';\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = 'dates';\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType == 'all')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'selected')\n\t\t\t{\n\t\t\t\t//get array\n\t\t\t\tvar selectedList = [];\n\t\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueryString = queryString + '&notes2print=' + selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'dates')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tvar selectedList = [];\n\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t{\n\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t{\n\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tcontroller.pageOptions.selectedList = selectedList;\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"in summary Ctrl \", $stateParams);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNotes = [];\n\n\t\tcontroller.page.notes = {};\n\t\tcontroller.index = 0;\n\t\tcontroller.page.notes = {};\n\t\tcontroller.page.notes.notelist = [];\n\t\tcontroller.busy = false;\n\t\tcontroller.page.noteFilter = {};\n\t\tcontroller.page.currentFilter = 'none';\n\t\tcontroller.page.onlyNotes = false; // Filter for only showing encounter notes\n\t\tcontroller.page.onlyMine = false; // Filter for only showing notes the current user has created/edited\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(note)\n\t\t{\n\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAssessments = function openAssessments()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms', {formListId: 1});\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tconsole.log(controller.busy);\n\t\t\tif (controller.busy) return;\n\n\t\t\tcontroller.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, controller.index, 20, controller.page.noteFilter).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('whats the data', angular.isUndefined(results.notelist), results.notelist);\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.page.notes = data;\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"ok its in an array\", controller.busy);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.addMoreItems();\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\t// Call the findGroupNote function and search for the given note, if found, open the groupNote editor\n\t\tcontroller.editGroupNote = function editGroupNote(note)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\n\t\t\tif (obj !== null)\n\t\t\t{\n\t\t\t\tobj.module.editorNames = note.editorNames;\n\t\t\t\tcontroller.gotoState(obj.note, obj.module, obj.note.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.page.currentEditNote = {};\n\n\t\tcontroller.isNoteBeingEdited = function isNoteBeingEdited(note)\n\t\t{\n\n\t\t\tif (note.uuid === controller.page.currentEditNote.uuid && note.uuid !== null)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$rootScope.$on('currentlyEditingNote', function(event, data)\n\t\t{\n\t\t\tcontroller.page.currentEditNote = data;\n\t\t});\n\n\t\t// TODO\n\t\t$rootScope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tcontroller.page.currentEditNote = {};\n\t\t});\n\n\t\t$rootScope.$on('noteSaved', function(event, data)\n\t\t{\n\t\t\tconsole.log('new data coming in', data);\n\t\t\tvar noteFound = false;\n\t\t\tfor (var notecount = 0; notecount < controller.page.notes.notelist.length; notecount++)\n\t\t\t{\n\t\t\t\tif (data.uuid == controller.page.notes.notelist[notecount].uuid)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('uuid ' + data.uuid + ' notecount ' + notecount, data, controller.page.notes.notelist[notecount]);\n\t\t\t\t\tcontroller.page.notes.notelist[notecount] = data;\n\t\t\t\t\tnoteFound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (noteFound == false)\n\t\t\t{\n\t\t\t\tcontroller.page.notes.notelist.unshift(data);\n\t\t\t}\n\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t});\n\n\t\t// Check if note regular note, if not, we must either display the group note edit window or have no edit option\n\t\tcontroller.isRegularNote = function isRegularNote(note)\n\t\t{\n\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.setColor = function setColor(note)\n\t\t{\n\t\t\tif (note.eformData)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#DFF0D8',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.document)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#617CB2',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.rxAnnotation)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#D3D3D3',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.encounterForm)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#BCAD75',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.invoice)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '##FF7272',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.ticklerNote)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#FFA96F',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.cpp)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#9B8166',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showNoteHeader = function showNoteHeader(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.showNote = function showNote(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(controller.page.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (user.providerNo !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tcontroller.getNoteHeader = function firstLine(noteObj)\n\t\t{\n\t\t\treturn  noteObj.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tcontroller.toggleList = function toggleList(mod)\n\t\t{\n\n\t\t\t// If all the items are displayed, reset displaySize to 5 (min), else, show all the items\n\t\t\tif (mod.displaySize >= mod.summaryItem.length)\n\t\t\t{\n\t\t\t\tmod.displaySize = 5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmod.displaySize = mod.summaryItem.length;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showMoreItems = function showMoreItems(mod)\n\t\t{\n\n\t\t\tif (!angular.isDefined(mod.summaryItem))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mod.summaryItem.length == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Return true if a given section is expanded, otherwise return false\n\t\tcontroller.isSectionExpanded = function isSectionExpanded(mod)\n\t\t{\n\t\t\tif (mod.displaySize > 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Return true if a given section is empty, otherwise return false\n\t\tcontroller.isSectionEmpty = function isSectionEmpty(mod)\n\t\t{\n\t\t\tif (mod.summaryItem.length <= 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tcontroller.isUnsignedEncounterNote = function isUnsignedEncounterNote(note)\n\t\t{\n\t\t\treturn (!note.isSigned && !note.cpp && !note.document && !note.ticklerNote && !note.eformData);\n\t\t};\n\n\t\t// controller.showMoreItemsSymbol = function(mod)\n\t\t// {\n\t\t// \tif (!angular.isDefined(mod.summaryItem))\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif ((mod.displaySize < mod.summaryItem.length) && mod.displaySize == initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if ((mod.displaySize == mod.summaryItem.length) && mod.displaySize != initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if (mod.summaryItem.length <= initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down glyphicon-chevron-down-disabled pull-right\";\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif (controller.isSectionExpanded(mod))\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\n\t\t// \treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\n\t\t// };\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"left\", results);\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"right\", results);\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tif (editingNoteId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t\t\titvSet = null;\n\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\teditingNoteId = null;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\n\t\tcontroller.gotoState = function gotoState(item, mod, itemId)\n\t\t{\n\t\t\tconsole.log('ITEM: ', item);\n\t\t\tconsole.log('MOD: ', mod);\n\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal(mod, action)\n\t\t{\n\t\t\tvar size = 'lg';\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// Toggle whether the note is selected for printing\n\t\tcontroller.toggleIsSelectedForPrint = function toggleIsSelectedForPrint(note)\n\t\t{\n\t\t\tnote.isSelected = !note.isSelected;\n\t\t};\n\n\t}\n]);\n\n\nvar itvSet = null;\nvar itvCheck = null;\nvar editingNoteId = null;","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'scheduleService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\t/*\n\t\tcontroller.recordtabs2 = [ \n\t\t {id : 0,name : 'Master',url : 'partials/master.html'},\n\t\t {id : 1,name : 'Summary',url : 'partials/summary.html'},\n\t\t {id : 2,name : 'Rx',url : 'partials/rx.jsp'},\n\t\t {id : 3,name : 'Msg',url : 'partials/summary.html'},\n\t\t {id : 4,name : 'Trackers',url : 'partials/tracker.jsp'},\n\t\t {id : 5,name : 'Consults',url : 'partials/summary.html'},\n\t\t {id : 6,name : 'Forms',url : 'partials/formview.html'},\n\t\t {id : 7,name : 'Prevs/Measurements',url : 'partials/summary.html'},\n\t\t {id : 8,name : 'Ticklers',url : 'partials/summary.html'},\n\t\t {id : 9,name : 'MyOscar',url : 'partials/blank.jsp'},\n\t\t {id : 10,name : 'Allergies',url : 'partials/summary.html'},\n\t\t {id : 11,name : 'CPP',url : 'partials/cpp.html'},\n\t\t {id : 12,name : 'Labs/Docs',url : 'partials/labview.html'},\n\t\t {id : 13,name : 'Billing',url : 'partials/billing.jsp'}\t\n\t\t*/\n\t\tcontroller.recordtabs2 = [];\n\t\t/*\n\t\t                 \t {id : 0,displayName : 'Details'  ,path : 'record.details'},\n\t\t                 \t {id : 1,displayName : 'Summary'  ,path : 'record.summary'},\n\t\t                 \t {id : 2,displayName : 'Forms'    ,path : 'record.forms'},\n\t\t                 \t {id : 3,displayName : 'Labs/Docs',path : 'partials/eform.jsp'},\n\t\t                 \t {id : 4,displayName : 'Rx'       ,path : 'partials/eform.jsp'}];\n\t\t*/\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//var transitionP = $state.transitionTo(controller.recordtabs2[0].path,$stateParams,{location:'replace',notify:true});\n\t\t//console.log(\"transition \",transitionP);\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t\t//console.log(controller.recordtabs2[temp].path);\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn ($state.current.name === tab.state);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tconsole.log(\"whats the val \", (newVal != oldVal));\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$rootScope.$emit('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\t// if (controller.page.encounterNote.issueDescriptions == null)\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions = controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\t// else\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions += \",\" + controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$rootScope.$emit('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tscheduleService.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\n\t\tconsole.log('RecordCtrlEnd', $state);\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t// controller.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t// controller.$storage.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","angular.module('PatientList').controller('PatientList.PatientListProgramController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\t$scope.$on('updatePatientList', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientList=' + JSON.stringify(data));\n\t\t\tcontroller.updateData(data.currentPage, data.pageSize);\n\t\t});\n\n\n\t\t//the currentPage is 0 based\n\t\tcontroller.updateData = function updateData(currentPage, pageSize)\n\t\t{\n\t\t\tvar startIndex = currentPage * pageSize;\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/program/patientList?startIndex=' + startIndex + '&numToReturn=' + pageSize,\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders:\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.admissions = results.data.content;\n\t\t\t\t\t$scope.$emit('updatePatientListPagination', results.data.total);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//initialize..\n\t\tcontroller.updateData(0, controller.pageSize);\n\t\t$scope.$emit('togglePatientListFilter', false);\n\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListDemographicSetController', [\n\t'$scope',\n\t'$http',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\treportingService.getDemographicSetList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.sets = results.content;\n\t\t\t},\n\t\t\tfunction error(error)\n\t\t\t{\n\t\t\t\talert('Failed to get sets lists.');\n\t\t\t});\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListConfigController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'config',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tconfig)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.patientListConfig = config;\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\tcontroller.saveConfiguration = function saveConfiguration()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.patientListConfig);\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListAppointmentListController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$filter',\n\t'$uibModal',\n\t'Navigation',\n\t'scheduleService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$filter,\n\t\t$uibModal,\n\t\tNavigation,\n\t\tscheduleService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.statusCodeMap = new Map();\n\t\tcontroller.statuses = null;\n\n\n\t\tcontroller.dateOptions = {\n\t\t\tshowWeeks: false\n\t\t};\n\n\t\tscheduleService.getStatuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.statuses = results.content;\n\t\t\t\tcontroller.statusCodeMap = new Map(controller.statuses.map(i => [i.status, i]));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.getAppointmentStatusDescriptionByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet description = \"\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tdescription = status.description;\n\t\t\t}\n\t\t\treturn description;\n\t\t};\n\t\tcontroller.getAppointmentStatusColourByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet colour = \"#000000\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tcolour = status.color;\n\t\t\t}\n\t\t\treturn colour;\n\t\t};\n\n\t\tcontroller.today = function today()\n\t\t{\n\t\t\tcontroller.appointmentDate = new Date();\n\t\t};\n\n\t\tcontroller.today();\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.appointmentDate = null;\n\t\t};\n\n\t\tcontroller.open = function open($event)\n\t\t{\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t\tcontroller.opened = true;\n\t\t};\n\n\t\tDate.prototype.AddDays = function AddDays(noOfDays)\n\t\t{\n\t\t\tthis.setTime(this.getTime() + (noOfDays * (1000 * 60 * 60 * 24)));\n\t\t\treturn this;\n\t\t};\n\n\t\tcontroller.switchDay = function switchDay(n)\n\t\t{\n\t\t\tvar dateNew = controller.appointmentDate;\n\t\t\tdateNew.AddDays(n);\n\n\t\t\tcontroller.appointmentDate = dateNew;\n\n\t\t\tvar formattedDate = $filter('date')(dateNew, 'yyyy-MM-dd');\n\n\t\t\tcontroller.changeApptList(formattedDate);\n\n\n\t\t};\n\n\t\tcontroller.changeApptDate = function changeApptDate()\n\t\t{\n\t\t\tif (controller.appointmentDate == undefined)\n\t\t\t{\n\t\t\t\tcontroller.today();\n\t\t\t}\n\t\t\tvar formattedDate = $filter('date')(controller.appointmentDate, 'yyyy-MM-dd');\n\t\t\tcontroller.changeApptList(formattedDate);\n\t\t};\n\n\t\tcontroller.changeApptList = function changeApptList(day)\n\t\t{\n\t\t\tcontroller.currenttab = patientListState.tabItems[0];\n\t\t\tcontroller.currenttab.serviceMethod = function ()\n\t\t\t{\n\t\t\t\treturn scheduleService.getAppointments(day).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\t\t\tcontroller.showFilter = true;\n\t\t\t$scope.$emit('juno:patientListRefresh');\n\t\t};\n\n\t\tcontroller.addNewAppointment = function addNewAppointment()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentAdd.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentAddController as appointmentAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tapptDate: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.appointmentDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.viewAppointment = function viewAppointment(apptNo)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentView.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentViewController as appointmentViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tappointment: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getAppointment(apptNo);\n\t\t\t\t\t},\n\t\t\t\t\tstatusList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getStatuses();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('PatientList').controller('PatientList.PatientListController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'angularUtil',\n\t'Navigation',\n\t'personaService',\n\t'providerService',\n\t'patientListState',\n\t'scheduleService',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\tangularUtil,\n\t\tNavigation,\n\t\tpersonaService,\n\t\tproviderService,\n\t\tpatientListState,\n\t\tscheduleService,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.sidebar = Navigation;\n\t\tcontroller.showFilter = true;\n\t\tcontroller.patientListConfig = {};\n\n\n\t\tcontroller.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t};\n\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hidePatientList();\n\t\t\t\t\t\tconsole.log('hiding patientlist');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"params\", params);\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t//for filter box\n\t\tcontroller.query = '';\n\n\n\t\tcontroller.isActive = function isActive(temp)\n\t\t{\n\t\t\tif (controller.currenttab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currenttab.id;\n\t\t};\n\n\t\tcontroller.isMoreActive = function isMoreActive(temp)\n\t\t{\n\t\t\tif (controller.currentmoretab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currentmoretab.id;\n\t\t};\n\n\t\tcontroller.showPatientList = function showPatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', true);\n\t\t};\n\n\t\tcontroller.hidePatientList = function hidePatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', false);\n\t\t};\n\n\t\tcontroller.changeMoreTab = function changeMoreTab(moreTabItemsIndex, filter)\n\t\t{\n\t\t\tvar beforeChangeTab = controller.currentmoretab;\n\t\t\tcontroller.currentmoretab = controller.moreTabItems[moreTabItemsIndex];\n\n\t\t\tcontroller.showFilter = true;\n\t\t\tcontroller.currenttab = null;\n\t\t\tcontroller.refresh(filter);\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(tabItemIndex, filter)\n\t\t{\n\t\t\tif(controller.currenttab !== patientListState.tabItems[tabItemIndex])\n\t\t\t{\n\t\t\t\tcontroller.currenttab = patientListState.tabItems[tabItemIndex];\n\t\t\t\tcontroller.showFilter = true;\n\t\t\t\tcontroller.currentmoretab = null;\n\t\t\t\tcontroller.refresh(filter);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getMoreTabClass = function getMoreTabClass(id)\n\t\t{\n\t\t\tif (controller.currentmoretab != null && id == controller.currentmoretab.id)\n\t\t\t{\n\t\t\t\treturn \"more-tab-highlight\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\tcontroller.currentPage = 0;\n\t\tcontroller.pageSize = 8;\n\t\tcontroller.patients = null;\n\n\t\tcontroller.numberOfPages = function numberOfPages()\n\t\t{\n\t\t\tif (controller.nPages == null || controller.nPages == 0)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn controller.nPages;\n\t\t};\n\n\n\t\t$scope.$on('updatePatientListPagination', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientListPagination=' + data);\n\t\t\tcontroller.nPages = Math.ceil(data / controller.pageSize);\n\t\t\tconsole.log('nPages=' + controller.nPages);\n\t\t});\n\n\n\t\tcontroller.changePage = function changePage(pageNum)\n\t\t{\n\t\t\tcontroller.currentPage = pageNum;\n\t\t\t//broadcast the change page\n\t\t\t$scope.$broadcast('updatePatientList',\n\t\t\t{\n\t\t\t\tcurrentPage: controller.currentPage,\n\t\t\t\tpageSize: controller.pageSize\n\t\t\t});\n\t\t};\n\n\t\t$scope.$on('togglePatientListFilter', function(event, data)\n\t\t{\n\t\t\tconsole.log(\"received a togglePatientListFilter event:\" + data);\n\t\t\tcontroller.showFilter = data;\n\t\t});\n\n\n\t\tcontroller.process = function process(tab, filter)\n\t\t{\n\t\t\ttab.serviceMethod().then(\n\t\t\t\tfunction success(resultList)\n\t\t\t\t{\n\t\t\t\t\tcontroller.patients = resultList;\n\n\t\t\t\t\tcontroller.nPages = 1;\n\t\t\t\t\tif (controller.patients != null && controller.patients.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.nPages = Math.ceil(controller.patients.length / controller.pageSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.template = tab.template;\n\t\t\t\t\tNavigation.load(controller.template);\n\t\t\t\t\tcontroller.changePage(0);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\talert('error loading data for patient list:' + error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.refresh = function refresh(filter)\n\t\t{\n\n\t\t\tif (controller.currenttab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currenttab, filter);\n\t\t\t}\n\t\t\tif (controller.currentmoretab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currentmoretab, filter);\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function()\n\t\t{\n\t\t\tcontroller.refresh();\n\t\t});\n\n\t\tproviderService.getRecentPatientList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tpersonaService.getPatientListConfig().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.getTabItems = function getTabItems()\n\t\t{\n\t\t\treturn patientListState.tabItems;\n\t\t};\n\n\t\tcontroller.manageConfiguration = function manageConfiguration()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientlist/patientListConfiguration.jsp',\n\t\t\t\tcontroller: 'PatientList.PatientListConfigController as patientListConfigCtrl',\n\t\t\t\tbackdrop: false,\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconfig: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.patientListConfig;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tpersonaService.setPatientListConfig(results).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t\t\t\t\t$scope.$emit('updatePatientListPagination', controller.patients.length);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tpatientListState.tabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Appts.\",\n\t\t\t\ttemplate: \"src/patientlist/patientList1.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\t// this gets overwritten by the appointmentListController, when it sets specific dates\n\t\t\t\t\treturn scheduleService.getAppointments('today').then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Recent\",\n\t\t\t\ttemplate: \"src/patientlist/recent.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getRecentPatientList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.moreTabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Patient Sets\",\n\t\t\t\ttemplate: \"src/patientlist/demographicSets.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn reportingService.getDemographicSetList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.content;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Caseload\",\n\t\t\t\ttemplate: \"src/patientlist/program.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.changeTab(0);\n\t}\n]);\n","angular.module(\"PatientList\").service(\"patientListState\", [\n\t// Store variables here that must be accessible across controllers in patientlist\n\tfunction()\n\t{\n\t\tvar service = this;\n\n\t\tservice.tabItems = [];\n\n\t}\n]);","'use strict';\n\nangular.module('PatientList', ['Common', 'Common.Services']);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        console.log('TABLE PARAMS', NgTableParams);\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n                \tconsole.log(\"k2a feed response\", response);\n\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateMessages();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n            }\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n    }\n]);","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Patient').controller('Patient.NewPatientController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'demographicService',\n\t'securityService',\n\t'programService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tprogramService,\n\t\tstaticDataService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.demographic = {};\n\n\t\tcontroller.submitDisabled = false;\n\n\t\t//get access right for creating new patient\n\t\tsecurityService.hasRight(\"_demographic\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.hasRight = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.programs = results;\n\t\t\t\tif (controller.programs.length == 1)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographic.admissionProgramId = controller.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get genders to be selected\n\t\tcontroller.genders = staticDataService.getGenders();\n\n\t\tcontroller.save = function save(ngModelContoller)\n\t\t{\n\t\t\tconsole.log(controller.demographic.lastName);\n\t\t\tconsole.log(controller.demographic.firstName);\n\t\t\tconsole.log(controller.demographic.dobYear);\n\t\t\tconsole.log(controller.demographic.dobMonth);\n\t\t\tconsole.log(controller.demographic.dobDay);\n\t\t\tconsole.log(controller.demographic.sex);\n\t\t\tconsole.log(controller.demographic);\n\t\t\tconsole.log(ngModelContoller.$valid);\n\t\t\tconsole.log($scope);\n\n\t\t\tcontroller.submitDisabled = true;\n\n\t\t\tif (ngModelContoller.$valid)\n\t\t\t{\n\t\t\t\tconsole.log(\"Saving...\");\n\n\t\t\t\tif (!controller.isCorrectDate(controller.demographic.dobYear,\n\t\t\t\t\t\tcontroller.demographic.dobMonth, controller.demographic.dobDay))\n\t\t\t\t{\n\t\t\t\t\talert(\"Incorrect Date of Birth!\");\n\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.demographic.dateOfBirth =\n\t\t\t\t\tcontroller.demographic.dobYear + '-' +\n\t\t\t\t\tcontroller.demographic.dobMonth + \"-\" +\n\t\t\t\t\tcontroller.demographic.dobDay;\n\n\t\t\t\tcontroller.demographic.patientStatusDate = new Date();\n\t\t\t\tcontroller.demographic.dateJoined = new Date();\n\t\t\t\tcontroller.demoRetVal = {};\n\n\t\t\t\tdemographicService.saveDemographic(controller.demographic).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tcontroller.demoRetVal = results;\n\t\t\t\t\t\t$uibModalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"ERR!!\");\n\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.ok = function ok()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.selected.item);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.capName = function capName()\n\t\t{\n\t\t\tif (controller.demographic.lastName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.lastName = controller.demographic.lastName.toUpperCase();\n\t\t\t}\n\n\t\t\tif (controller.demographic.firstName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.firstName = controller.demographic.firstName.toUpperCase();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isCorrectDate = function isCorrectDate(year, month, day)\n\t\t{\n\t\t\tvar d = new Date(year, month - 1, day);\n\n\t\t\tif (d == \"Invalid Date\") return false;\n\t\t\tif (d.getFullYear() != year) return false;\n\t\t\tif (d.getMonth() != month - 1) return false;\n\t\t\tif (d.getDate() != day) return false;\n\n\t\t\treturn true;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Layout').controller('Layout.NavBarController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$q',\n\t'$timeout',\n\t'$location',\n\t'$state',\n\t'$uibModal',\n\t'securityService',\n\t'personaService',\n\t'billingService',\n\t'inboxService',\n\t'messageService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$q,\n\t\t$timeout,\n\t\t$location,\n\t\t$state,\n\t\t$uibModal,\n\t\tsecurityService,\n\t\tpersonaService,\n\t\tbillingService,\n\t\tinboxService,\n\t\tmessageService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.unAckLabDocTotal = 0;\n\t\t\tcontroller.unreadMessageTotal = 0;\n\t\t\tcontroller.demographicSearch = null;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'w'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.searchRights = results.content[0];\n\t\t\t\t\t\tcontroller.newDemographicRights = results.content[1];\n\t\t\t\t\t\tcontroller.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.getUnAckLabDocCount();\n\t\t\t\t\tcontroller.getUnreadMessageCount();\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tcontroller.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tconsole.log('NavBarController::watch demographicSearch', controller.demographicSearch);\n\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tcontroller.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tcontroller.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tcontroller.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tcontroller.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tcontroller.demographicSearch = null;\n\t\t};\n\n\t\tcontroller.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t{\n\t\t\t\tterm: search\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'search'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'record.details'\n\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tcontroller.transition = function transition(item)\n\t\t{\n\t\t\tconsole.log('transition', item);\n\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Admin\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../administration/\";\n\t\t\t\t\twname = \"admin\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openMessenger = function(item)\n\t\t{\n\t\t\tif (controller.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\t\t\t\t\tconsole.log($location.path());\n\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\n\t\t\t\t\tconsole.log($location.path());\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn ($state.current.name === tab.state);\n\t\t};\n\n\t\tcontroller.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\n\t\t\t\tvar labelsToShow = ['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tcontroller.smallNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Dashboard'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = true;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tconsole.log(\"Layout.BodyController updating showPatientList\", value);\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplay_field_errors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.display_field_errors) ||\n\t\t\t$scope.display_field_errors !== false)\n\t\t{\n\t\t\t$scope.display_field_errors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.display_field_errors &&\n\t\t\t\t$scope.errors.display_field_errors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.rows = '@caRows';\n\tscope.max_characters = '@caMaxCharacters';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.model)\n\t\t{\n\t\t\t$scope.model = '';\n\t\t}\n\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t{\n\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t}\n\t\t});\n\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.options = '=caOptions';\n\tscope.include_empty_option = '@caEmptyOption';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t};\n\n  return {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function(e) {\n\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","/*\r\n*  AngularJs Fullcalendar Wrapper for the JQuery FullCalendar\r\n*  API @ http://arshaw.com/fullcalendar/\r\n*\r\n*  Angular Calendar Directive that takes in the [eventSources] nested array object as the ng-model and watches it deeply changes.\r\n*       Can also take in multiple event urls as a source object(s) and feed the events per view.\r\n*       The calendar will watch any eventSource array and update itself when a change is made.\r\n*\r\n*/\r\n\r\n/*\r\n * Copied and modified for use at Cloudpractice because I couldn't figure out how to keep it from\r\n * loading before our initialization was done.  I've marked the changes with a CP below.\r\n */\r\n\r\nangular.module('ui.calendar', [])\r\n  .constant('uiCalendarConfig', {calendars: {}})\r\n  .controller('uiCalendarCtrl', ['$scope', \r\n                                 '$locale', function(\r\n                                  $scope, \r\n                                  $locale){\r\n\r\n      var sources = $scope.eventSources,\r\n          extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop,\r\n\r\n          wrapFunctionWithScopeApply = function(functionToWrap){\r\n              return function(){\r\n                  // This may happen outside of angular context, so create one if outside.\r\n\r\n                  if ($scope.$root.$$phase) {\r\n                      return functionToWrap.apply(this, arguments);\r\n                  } else {\r\n                      var args = arguments;\r\n                      var self = this;\r\n                      return $scope.$root.$apply(function(){\r\n                          return functionToWrap.apply(self, args);\r\n                      });\r\n                  }\r\n              };\r\n          };\r\n\r\n      var eventSerialId = 1;\r\n      // @return {String} fingerprint of the event object and its properties\r\n      this.eventFingerprint = function(e) {\r\n        if (!e._id) {\r\n          e._id = eventSerialId++;\r\n        }\r\n        \r\n        var extraSignature = extraEventSignature({event: e}) || '';\r\n        var start = moment.isMoment(e.start) ? e.start.unix() : (e.start ? moment(e.start).unix() : '');\r\n        var end =   moment.isMoment(e.end)   ? e.end.unix()   : (e.end   ? moment(e.end).unix()   : '');\r\n        \r\n        // This extracts all the information we need from the event. http://jsperf.com/angular-calendar-events-fingerprint/3\r\n        return \"\" + e._id + (e.id || '') + (e.title || '') + (e.url || '') + start + end +\r\n          (e.allDay || '') + (e.className || '') + extraSignature;\r\n      };\r\n\r\n      var sourceSerialId = 1, sourceEventsSerialId = 1;\r\n      // @return {String} fingerprint of the source object and its events array\r\n      this.sourceFingerprint = function(source) {\r\n          var fp = '' + (source.__id || (source.__id = sourceSerialId++)),\r\n              events = angular.isObject(source) && source.events;\r\n          if (events) {\r\n              fp = fp + '-' + (events.__id || (events.__id = sourceEventsSerialId++));\r\n          }\r\n          return fp;\r\n      };\r\n\r\n      // @return {Array} all events from all sources\r\n      this.allEvents = function() {\r\n        // do sources.map(&:events).flatten(), but we don't have flatten\r\n        var arraySources = [];\r\n        for (var i = 0, srcLen = sources.length; i < srcLen; i++) {\r\n          var source = sources[i];\r\n          if (angular.isArray(source)) {\r\n            // event source as array\r\n            arraySources.push(source);\r\n          } else if(angular.isObject(source) && angular.isArray(source.events)){\r\n            // event source as object, ie extended form\r\n            var extEvent = {};\r\n            for(var key in source){\r\n              if(key !== '_id' && key !== 'events'){\r\n                 extEvent[key] = source[key];\r\n              }\r\n            }\r\n            for(var eI = 0;eI < source.events.length;eI++){\r\n              angular.extend(source.events[eI],extEvent);\r\n            }\r\n            arraySources.push(source.events);\r\n          }\r\n        }\r\n        return Array.prototype.concat.apply([], arraySources);\r\n      };\r\n\r\n      // Track changes in array of objects by assigning id tokens to each element and watching the scope for changes in the tokens\r\n      // @param {Array|Function} arraySource array of objects to watch\r\n      // @param tokenFn {Function} that returns the token for a given object\r\n      // @return {Object}\r\n      //  subscribe: function(scope, function(newTokens, oldTokens))\r\n      //    called when source has changed. return false to prevent individual callbacks from firing\r\n      //  onAdded/Removed/Changed:\r\n      //    when set to a callback, called each item where a respective change is detected\r\n      this.changeWatcher = function(arraySource, tokenFn) {\r\n        var self;\r\n        var getTokens = function() {\r\n          var array = angular.isFunction(arraySource) ? arraySource() : arraySource;\r\n          var result = [], token, el;\r\n          for (var i = 0, n = array.length; i < n; i++) {\r\n            el = array[i];\r\n            token = tokenFn(el);\r\n            map[token] = el;\r\n            result.push(token);\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // @param {Array} a\r\n        // @param {Array} b\r\n        // @return {Array} elements in that are in a but not in b\r\n        // @example\r\n        //  subtractAsSets([6, 100, 4, 5], [4, 5, 7]) // [6, 100]\r\n        var subtractAsSets = function(a, b) {\r\n          var result = [], inB = {}, i, n;\r\n          for (i = 0, n = b.length; i < n; i++) {\r\n            inB[b[i]] = true;\r\n          }\r\n          for (i = 0, n = a.length; i < n; i++) {\r\n            if (!inB[a[i]]) {\r\n              result.push(a[i]);\r\n            }\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // Map objects to tokens and vice-versa\r\n        var map = {};\r\n\r\n        // Compare newTokens to oldTokens and call onAdded, onRemoved, and onChanged handlers for each affected event respectively.\r\n        var applyChanges = function(newTokens, oldTokens) {\r\n          var i, n, el, token;\r\n          var replacedTokens = {};\r\n          var removedTokens = subtractAsSets(oldTokens, newTokens);\r\n          for (i = 0, n = removedTokens.length; i < n; i++) {\r\n            var removedToken = removedTokens[i];\r\n            el = map[removedToken];\r\n            delete map[removedToken];\r\n            var newToken = tokenFn(el);\r\n            // if the element wasn't removed but simply got a new token, its old token will be different from the current one\r\n            if (newToken === removedToken) {\r\n              self.onRemoved(el);\r\n            } else {\r\n              replacedTokens[newToken] = removedToken;\r\n              self.onChanged(el);\r\n            }\r\n          }\r\n\r\n          var addedTokens = subtractAsSets(newTokens, oldTokens);\r\n          for (i = 0, n = addedTokens.length; i < n; i++) {\r\n            token = addedTokens[i];\r\n            el = map[token];\r\n            if (!replacedTokens[token]) {\r\n              self.onAdded(el);\r\n            }\r\n          }\r\n        };\r\n        return self = {\r\n          subscribe: function(scope, onArrayChanged) {\r\n            scope.$watch(getTokens, function(newTokens, oldTokens) {\r\n              var notify = !(onArrayChanged && onArrayChanged(newTokens, oldTokens) === false);\r\n              if (notify) {\r\n                applyChanges(newTokens, oldTokens);\r\n              }\r\n            }, true);\r\n          },\r\n          onAdded: angular.noop,\r\n          onChanged: angular.noop,\r\n          onRemoved: angular.noop\r\n        };\r\n      };\r\n\r\n      this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig){\r\n          var config = {};\r\n\r\n          angular.extend(config, uiCalendarConfig);\r\n          angular.extend(config, calendarSettings);\r\n\r\n          angular.forEach(config, function(value,key){\r\n            if (typeof value === 'function'){\r\n              config[key] = wrapFunctionWithScopeApply(config[key]);\r\n            }\r\n          });\r\n\r\n          return config;\r\n      };\r\n\r\n    this.getLocaleConfig = function(fullCalendarConfig) {\r\n      if (!fullCalendarConfig.lang || fullCalendarConfig.useNgLocale) {\r\n        // Configure to use locale names by default\r\n        var tValues = function(data) {\r\n          // convert {0: \"Jan\", 1: \"Feb\", ...} to [\"Jan\", \"Feb\", ...]\r\n          var r, k;\r\n          r = [];\r\n          for (k in data) {\r\n            r[k] = data[k];\r\n          }\r\n          return r;\r\n        };\r\n        var dtf = $locale.DATETIME_FORMATS;\r\n        return {\r\n          monthNames: tValues(dtf.MONTH),\r\n          monthNamesShort: tValues(dtf.SHORTMONTH),\r\n          dayNames: tValues(dtf.DAY),\r\n          dayNamesShort: tValues(dtf.SHORTDAY)\r\n        };\r\n      }\r\n      return {};\r\n    };\r\n  }])\r\n  .directive('uiCalendar', ['uiCalendarConfig', function(uiCalendarConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        eventSources:'=ngModel',\r\n        calendarWatchEvent: '&',\r\n        enabled: '=ngEnabled'     // CP: Added an option to enable the calendar\r\n      },\r\n      controller: 'uiCalendarCtrl',\r\n      link: function(scope, elm, attrs, controller) {\r\n\r\n        var sources = scope.eventSources,\r\n            sourcesChanged = false,\r\n            calendar,\r\n            eventSourcesWatcher = controller.changeWatcher(sources, controller.sourceFingerprint),\r\n            eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventFingerprint),\r\n            options = null;\r\n\r\n        function getOptions(){\r\n          var calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {},\r\n              fullCalendarConfig;\r\n\r\n          fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig);\r\n\r\n          var localeFullCalendarConfig = controller.getLocaleConfig(fullCalendarConfig);\r\n          angular.extend(localeFullCalendarConfig, fullCalendarConfig);\r\n          options = { eventSources: sources };\r\n          angular.extend(options, localeFullCalendarConfig);\r\n          //remove calendars from options\r\n          options.calendars = null;\r\n\r\n          var options2 = {};\r\n          for(var o in options){\r\n            if(o !== 'eventSources'){\r\n              options2[o] = options[o];\r\n            }\r\n          }\r\n          return JSON.stringify(options2);\r\n        }\r\n\r\n        scope.destroyCalendar = function(){\r\n          if(calendar && calendar.fullCalendar){\r\n            calendar.fullCalendar('destroy');\r\n          }\r\n          if(attrs.calendar) {\r\n            calendar = uiCalendarConfig.calendars[attrs.calendar] = $(elm).html('');\r\n          } else {\r\n            calendar = $(elm).html('');\r\n          }\r\n        };\r\n\r\n        scope.initCalendar = function(){\r\n          // CP: The calendar won't initialize when it's not enabled\r\n          if(scope.enabled) {\r\n\t\t    if (!calendar) {\r\n\t\t      calendar = angular.element(elm).html('');\r\n\t\t    }\r\n\t\t    calendar.fullCalendar(options);\r\n\t\t    if(attrs.calendar) {\r\n\t\t      uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n\t\t    }\r\n\t\t  }\r\n        };\r\n        scope.$on('$destroy', function() {\r\n          scope.destroyCalendar();\r\n        });\r\n\r\n        eventSourcesWatcher.onAdded = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar(options);\r\n            if (attrs.calendar) {\r\n                uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n            }\r\n            calendar.fullCalendar('addEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onRemoved = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onChanged = function() {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('refetchEvents');\r\n            sourcesChanged = true;\r\n          }\r\n\r\n        };\r\n\r\n        eventsWatcher.onAdded = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('renderEvent', event, (event.stick ? true : false));\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onRemoved = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEvents', event._id);\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onChanged = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            var clientEvents = calendar.fullCalendar('clientEvents', event._id);\r\n            for (var i = 0; i < clientEvents.length; i++) {\r\n              var clientEvent = clientEvents[i];\r\n              clientEvent = angular.extend(clientEvent, event);\r\n              calendar.fullCalendar('updateEvent', clientEvent);\r\n            }\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.subscribe(scope);\r\n        eventsWatcher.subscribe(scope, function() {\r\n          if (sourcesChanged === true) {\r\n            sourcesChanged = false;\r\n            // return false to prevent onAdded/Removed/Changed handlers from firing in this case\r\n            return false;\r\n          }\r\n        });\r\n\r\n        scope.$watch(getOptions, function(newValue, oldValue) {\r\n          if(newValue !== oldValue) {\r\n            scope.destroyCalendar();\r\n            scope.initCalendar();\r\n          } else if((newValue && angular.isUndefined(calendar))) {\r\n            scope.initCalendar();\r\n          }\r\n        });\r\n      }\r\n    };\r\n}]);\r\n","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\tconsole.log('DRAGGABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\tconsole.log('RESIZABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\n\t\t\t\tconsole.log('RESIZABLE DIRECTIVE HEIGHT ', $(\".note-editor-textarea\").height());\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: 'Name',\n\t\t\t\t\t'term': search,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(function success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(data.content);\n\t\t\t\t\t\tconsole.log('dataa', data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = results.data;\n\t\t\t\t\t\tvar meta = results.meta;\n\n\t\t\t\t\t\tif(meta.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\tconsole.log('typeaheadHelper::onSelect - setting model', $item);\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onChange - setting model (isTypeaheadSearchQuery)');\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgender\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasOneOfPermissions = function hasOneOfPermissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.hasPermission = function hasPermission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"scheduleService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getStatuses = function getStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/statuses',\n\t\t\t\tservice.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching statuses\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTypes = function getTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/types',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointments = function getAppointments(day)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'schedule/day/' + encodeURIComponent(day), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointments\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAppointment = function addAppointment(appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(appointment),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::addAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointment = function getAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/getAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.appointment);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.deleteAppointment = function deleteAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/deleteAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::deleteAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while deleting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.appointmentHistory = function appointmentHistory(demoNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/' +\n\t\t\t\t\tencodeURIComponent(demoNo) + \"/appointmentHistory\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::appointmentHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.cancelAppointment = function cancelAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'C'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::cancelAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while cancelling appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.noShowAppointment = function noShowAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'N'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::noShowAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting no show appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleGroups = function getScheduleGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/groups',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getScheduleGroups error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSchedulesForCalendar = function getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\tsiteName\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'schedule/calendar/';\n\t\t\turl += encodeURIComponent(providerId) + '/';\n\t\t\turl += '?startDate=' + encodeURIComponent(startDate);\n\t\t\turl += '&endDate=' + encodeURIComponent(endDate);\n\n\t\t\tif(siteName != null)\n\t\t\t{\n\t\t\t\turl += '&site=' + encodeURIComponent(siteName);\n\t\t\t}\n\n\t\t\tjunoHttp.get(\n\t\t\t\turl,\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSchedulesForCalendar error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleTemplateCodes = function getAvailabilityCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/templateCodes',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAvailabilityTypes error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointmentStatuses = function getAppointmentStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/calendar/statuses',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointmentStatuses error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSites = function getSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'sites',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSites error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportingService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/reporting/';\n\n\t\tservice.getDemographicSetList = function getDemographicSetList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'demographicSets/list', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportingService::demographicSets error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching demographicSets\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"providerService::getRecentDemographicsViewed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results.data);\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\toffset: encodeURIComponent(offset),\n\t\t\t\tnumToReturn: encodeURIComponent(numberToReturn),\n\t\t\t\tnoteConfig: noteConfig\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/' + demographicNo + '/completedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getCompletedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching completed encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur'\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errors_hash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t\t\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errors_hash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errors_hash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    console.log('converted RESULTS: ', results.data);\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while saving demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getLetterheadList = function getLetterheadList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'getLetterheadList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getLetterheadList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching letterheads\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\t\"$q\",\n\t\"demographicService\",\n\tfunction(\n\t\t$q,\n\t\tdemographicService\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.init_autocomplete_values = function init_autocomplete_values(patient, autocomplete_values){\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tdemographicService.getDemographic(patient.patient).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\tresult.dob = moment([result.dobYear, result.dobMonth, result.dobDay]);\n\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tpatient:{\n\t\t\t\t\t\t\tdata: service.formatDemographic(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.formatDemographic = function formatDemographic(result)\n\t\t{\n\t\t\treturn {\n\t\t\t\tuuid: result.demographicNo,\n\t\t\t\tfull_name: result.lastName + ',' + result.firstName,\n\t\t\t\tbirth_date: Juno.Common.Util.formatMomentDate(result.dob),\n\t\t\t\thealth_number: result.hin,\n\t\t\t\tphone_number_primary: result.phone\n\t\t\t};\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable')\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable')\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\n//require('angular-ui-calendar');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('ngstorage');\nrequire('./scss/juno.scss')\nrequire('font-awesome/css/font-awesome.min.css');\n// TODO: make sure this works, fix if it doesn't\n//require('components-font-awesome');\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n//\t'cpCalendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'PatientList',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController'\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin_popup.jsp',\n\t\t\tcontroller: 'AdminCtrl'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tformListId: 0\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.view',\n\t\t{\n\t\t\turl: '/view/:type/:id?name',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tparams: { name: { dynamic: true } },\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.forms.add',\n\t\t{\n\t\t\turl: '/add/:type/:id',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t{\n\t\t\turl:'/k2aNotification',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t});\n\n}]);\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.settings = {\n\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\tdatetime_no_timezone_format: \"YYYY-MM-DDTHH:mm:ss\",\n\ttime_format: \"h:mma\",\n\tdate_format: \"YYYY-MM-DD\",\n\tdayofweek_format: \"dddd\"\n};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatMomentDate = function formatMomentDate(d) {\n\treturn d.format(Juno.Common.Util.settings.date_format);\n};\n\nJuno.Common.Util.formatMomentTime = function formatMomentTime(d, format) {\n\tif(!format) {\n\t\tformat = Juno.Common.Util.settings.time_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.getDateMoment = function getDateMoment(date_string)\n{\n\treturn moment.utc(date_string, Juno.Common.Util.settings.date_format, true);\n};\n\nJuno.Common.Util.getTimeMoment = function getTimeMoment(time_string)\n{\n\treturn moment.utc(time_string, Juno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDateAndTimeMoment = function getCombinedMoment(dateString, timeString)\n{\n\treturn moment.utc(dateString + \" \" + timeString,\n\t\tJuno.Common.Util.settings.date_format + \" \" +\n\t\tJuno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDatetimeNoTimezoneMoment = function getDatetimeNoTimezoneMoment(datetime_string)\n{\n\treturn moment.utc(datetime_string,\n\t\tJuno.Common.Util.settings.datetime_no_timezone_format, true);\n};\n\nJuno.Common.Util.validateDateString = function validateDateString(\n\tdateString, displayErrors, field, fieldDisplayName, required)\n{\n\tif(Juno.Common.Util.exists(dateString))\n\t{\n\t\tvar moment = Juno.Common.Util.getDateMoment(dateString);\n\t\tif(!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.addFieldError(field, fieldDisplayName + ' is invalid');\n\t\t}\n\t}\n\telse if(required)\n\t{\n\t\tdisplayErrors.addFieldError(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.validateTimeString = function validateTimeString(\n\ttimeString, displayErrors, field, fieldDisplayName, required)\n{\n\tif (Juno.Common.Util.exists(timeString))\n\t{\n\t\tvar moment = Juno.Common.Util.getTimeMoment(timeString);\n\t\tif (!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.addFieldError(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.addFieldError(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n {\n\n\tvar dateOfBirth = new Date(parseInt(dobYear, 10), parseInt(dobMonth, 10), parseInt(dobDay, 10));\n\tvar currDate = new Date();\n\n\tvar years = (currDate.getFullYear() - dateOfBirth.getFullYear());\n\n\tif (currDate.getMonth() < dateOfBirth.getMonth() ||\n\t\tcurrDate.getMonth() == dateOfBirth.getMonth() && currDate.getDate() < dateOfBirth.getDate())\n\t{\n\t\tyears--;\n\t}\n\treturn years;\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nJuno.Common.Util.escapeHtml = function escapeHtml(str)\n{\n\tvar entityMap = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t'\"': '&quot;',\n\t\t\"'\": '&#39;',\n\t\t\"/\": '&#x2F;'\n\t};\n\n\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t{\n\t\treturn entityMap[s];\n\t});\n};\n","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {}\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}"],"sourceRoot":""}