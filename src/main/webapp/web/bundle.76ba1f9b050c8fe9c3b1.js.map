{"version":3,"sources":["webpack:///./generated/api/AppointmentApi.ts","webpack:///./generated/api/ScheduleApi.ts","webpack:///../webapp/share/javascript/Oscar.js","webpack:///./src/common/displayMessages.js","webpack:///./src/common/util/util.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/consults/common.js","webpack:///./app.js","webpack:///./src/common/module.js","webpack:///./src/common/util/module.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/searchListHelper.js","webpack:///./src/common/services/module.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/faxAccountService.js","webpack:///./src/common/services/faxInboundService.js","webpack:///./src/common/services/faxOutboundService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/reportingService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/scheduleService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/systemPreferenceService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/angular-ui-calendar.js","webpack:///./src/common/directives/selectOptionTooltip.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/layout/module.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/navBarController.js","webpack:///./src/patient/module.js","webpack:///./src/patient/newPatientController.js","webpack:///./src/dashboard/module.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/patientlist/module.js","webpack:///./src/patientlist/patientListState.js","webpack:///./src/patientlist/patientListController.js","webpack:///./src/patientlist/patientListAppointmentListController.js","webpack:///./src/patientlist/patientListConfigController.js","webpack:///./src/patientlist/patientListDemographicSetController.js","webpack:///./src/patientlist/patientListProgramController.js","webpack:///./src/record/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/details/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/tickler/module.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/schedule/module.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/eventController.js","webpack:///./src/schedule/appointmentAddController.js","webpack:///./src/schedule/appointmentViewController.js","webpack:///./src/admin/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/integration/fax/module.js","webpack:///./src/admin/integration/fax/faxConfigurationController.js","webpack:///./src/admin/integration/fax/faxConfigurationEditController.js","webpack:///./src/admin/integration/fax/faxSendReceiveController.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/billing/billingController.js","webpack:///./src/consults/module.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/inbox/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/patient/search/module.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/report/module.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportFollowUpIntakeController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/report/reportRegistrationIntakeController.js","webpack:///./src/report/reportSHMentalHealthController.js","webpack:///./src/document/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/settings/module.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/help/module.js","webpack:///./src/help/supportController.js","webpack:///./src/help/helpController.js"],"names":["AppointmentApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","addAppointment","calendarAppointment","extraHttpRequestParams","httpRequestParams","method","url","data","params","headers","Object","assign","deleteAppointment","appointmentNo","localVarPath","replace","encodeURIComponent","String","headerParams","Error","setNextStatus","updateAppointment","$inject","exports","ScheduleApi","fetchMonthlyData","year","month","providerNo","findExistAppointments","demographicNo","getAppointment","appointmentTo1","getAppointmentReasons","getAppointmentStatuses","getAppointmentTypes","getAppointmentsForDay","date","getAppointmentsForDay1","getCalendarAppointmentStatuses","getCalendarEvents","providerId","startDate","endDate","site","queryParameters","getScheduleGroups","getScheduleTemplateCodes","updateAppointmentStatus","id","updateAppointmentType","popup","height","width","windowName","popup2","newWindow","w","document","getElementsByTagName","clientWidth","h","clientHeight","Math","max","window","innerWidth","innerHeight","top","left","winRefs","closed","windowprops","open","location","href","resizeTo","focus","confirmNGo","message","confirm","showHideItem","getElementById","style","display","showItem","hideItem","validDate","validDateText","value","completeRawDate","delimiter","indexOf","dateArray","split","length","day","dateObject","Date","getDate","getMonth","getFullYear","validDateFieldsByClass","className","parentEle","datefields","getElementsByClassName","i","getMouseCoords","e","array","Array","posx","posy","event","pageX","pageY","clientX","clientY","body","scrollLeft","documentElement","scrollTop","checkAll","master","val","checked","chkList","oscarLog","str","console","log","grabEnter","callb","keyCode","which","eval","isNumericInt","sText","chara","isNumber","charAt","isNumeric","trim","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","all","arrReturnElements","oAttributeValue","RegExp","getAttribute","test","push","Juno","Common","DisplayMessages","messages_hash","options","me","display_field_errors","field_errors_label_map","field_errors_label_map_key","extra_info","meta","saving_message","init","Util","exists","force_field_error_arrays","merge","display_messages","angular","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","has_standard_errors","standard_errors","add_standard_error","add_generic_fatal_error","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","has_field_errors","field_errors","equals","prepend_label","key","has_one_of_field_error","keys","isArray","has_field_error","has_indexed_field_error","index","field_error_string","concat_string","join","add_field_error","remove_field_error","has_error_links","error_links","add_error_link","has_errors","clear","copy","field","label","out_field_errors","error_message","merge_messages","merge_display_messages","standard_infos","hasOwnProperty","moment","$","settings","datetime_format","datetime_no_timezone_format","time_format","date_format","dayofweek_format","object","isDefined","isBlank","toArray","obj","pad0","n","s","toString","toTrimmedString","formatDate","d","formatTime","getHours","getMinutes","formatMomentDate","format","formatMomentTime","formatMomentDateTimeNoTimezone","getDateMoment","date_string","utc","getTimeMoment","time_string","getDateMomentFromComponents","year_string","month_string","day_string","getDateAndTimeMoment","dateString","timeString","getDatetimeNoTimezoneMoment","datetime_string","validateDateString","displayErrors","fieldDisplayName","required","isValid","validateTimeString","addNewLine","line","mssg","calcAge","dobYear","dobMonth","dobDay","dateOfBirth","parseInt","currDate","years","isInArray","mergeHash","baseHash","toMerge","extend","noNull","isUndefinedOrNull","isUndefined","isDefinedAndNotNull","objectArrayIndexOf","searchTerm","property","len","isIntegerString","string","escapeHtml","entityMap","&","<",">","\"","'","/","formatName","firstName","lastName","ServiceHelper","configHeaders","Content-Type","Accept","configHeadersWithCache","cache","Consults","sortAttachmentDocs","arrayOfDocs","sort","doc1","doc2","documentType","displayName","__webpack_require__","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","controller","resolve","providers","providerService","searchProviders","active","term","user","getMe","billingServiceTypes","billingService","getUniqueServiceTypes","providerList","loadedSettings","getSettings","encounterForms","formService","getAllEncounterForms","eforms","getAllEForms","teams","getActiveTeams","groupNames","getGroupNames","loadedApps","appService","getApps","tab","demo","$stateParams","demographicService","getDemographic","properties","uxService","getDisplayProperties","formListId","name","dynamic","consult","consultService","requestId","getNewRequest","getRequest","getResponse","responseId","factory","load","msg","service","$window","inMobileView","$q","http_util","request","request_hash","deferred","defer","then","response","success_function","errors","errors_function","progress","notify","promise","request_result","status","results","error","reject","call","get","post","put","del","SearchListHelper","defaultParams","searchParams","defaults","page","perPage","initSearchParameters","fieldName","getParams","outParams","apiPath","init_autocomplete_values","patient","autocomplete_values","result","dob","formatDemographic","uuid","full_name","birth_date","health_number","hin","phone_number_primary","phone","content","getBillingRegion","errorsz","getDefaultView","junoHttp","searchRequests","search","referralDate","toDate","appointmentDate","followUpDate","getRequestAttachments","demographicId","attached","saveRequest","eSendRequest","searchResponses","responseDate","getResponseAttachments","saveResponse","getReferralPathwaysByService","serviceName","getLetterheadList","effDate","hcRenewDate","patientStatusDate","onWaitingListSinceDate","scrPaperChartArchivedDate","dateJoined","rosterTerminationDate","rosterDate","getDemographicContacts","contactCategory","category","saveDemographic","demographic","updateDemographic","quickSearch","query","startIndex","itemsToReturn","jsonData","searchIntegrator","getStatusList","listType","type","getQuickLists","getIssueQuickLists","addToDxRegistry","disease","issueToSend","code","description","findDxIssue","codingSystem","messages","errorsHash","listAccounts","isEnabled","getAccountSettings","addAccountSettings","transfer","updateAccountSettings","testConnection","getInbox","accountId","searchListHelper","getOutbox","getNextPullTime","resendOutboundFax","getNextPushTime","getDownloadUrl","$timeout","helper","default_scope","form_group_class","label_size","input_size","text_length","hide_label_colon","template","title","hint","tab_index","warning_message","depends_on_field","depends_on_value","model","disabled","hide","focus_field","on_focus_fn","change_fn","blur_fn","resolve_template","attributes","base_default_template","merge_title_messages","$scope","title_array","title_string","default_link_function","element","attribute","focus_fn","isFunction","is","find","$watch","select","first","$on","default_controller","$element","$attrs","ignore_focus_field","selector","first_form_input","first_error_input","opts","isObject","first_alert","scroll_offset","hasClass","animate","offset","getAllFormsByHeading","heading","getSelectedEncounterForms","getCompletedEncounterForms","getFormGroups","getFavouriteFormGroup","getFormOptions","global_settings","interface_preferences","scheduler_license_key","getDashboardItems","limit","getUnAckLabDocCount","getK2aFeed","startPoint","numberOfRows","isK2AInit","initK2A","clinicName","transferObj","postK2AComment","commentItem","removeK2AComment","commentId","preventionRulesList","loadPreventionRuleById","getCurrentPreventionRulesVersion","getNotifications","getMoreNotification","ackNotification","getUnread","getUnreadCount","getNotesFrom","numberToReturn","noteConfig","numToReturn","saveNote","note","saveIssueNote","getCurrentNote","tmpSave","getNoteExt","noteId","getIssueNote","getIssueId","issueCode","getTicklerNote","ticklerId","saveTicklerNote","ticklerNote","JSON","stringify","searchIssues","getIssue","issueId","setEditingNoteFlag","noteUUID","userId","checkEditNoteNew","removeEditingNoteFlag","getStatus","validateHC","healthCardNo","versionCode","isUniqueHC","getDashboardMenu","getNavBar","getPatientListConfig","setPatientListConfig","patientListConfig","setCurrentProgram","programId","getDashboardPreferences","updateDashboardPreferences","prefs","getPrograms","getProvider","filter","saveSettings","getRecentPatientList","searchText","searchMode","getBySecurityRole","role","getByType","getDemographicSetList","results_hash","meta_hash","results_object","has_results","error_type","util","pagination","per_page","total","total_pages","selectedDate","getStatuses","getTypes","getAppointments","appointment","apptNo","appointmentHistory","demoNo","cancelAppointment","noShowAppointment","getSchedulesForCalendar","siteName","getSites","getUser","setUser","u","hasRight","objectName","privilege","success","hasRights","listOfItems","isAllowedAccessToPatientRecord","hasOneOfPermissions","permission_array","hasPermission","permission","getGenders","genders","getTitles","titles","getProvinces","provinces","getCountries","countries","getEngFre","langs","getSpokenLanguages","getRosterTerminationReasons","reasons","getSecurityQuestions","questions","getConsultUrgencies","urgencies","getConsultRequestStatuses","statuses","getConsultResponseStatuses","getRxInteractionLevels","levels","getSummaryHeaders","getFullSummary","summaryCode","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","getRiskFactors","getPreference","defaultValue","default","setPreference","isPreferenceEnabled","setCompleted","ticklerIds","ticklers","setDeleted","update","tickler","getTextSuggestions","add","getAllK2AReports","getK2AReportById","getK2AUrl","menu","searchTemplates","getTemplate","searchSpecialists","searchName","searchRefNo","searchReferralDoctors","input","months","days","wordwise","tail","substr","lastspace","lastIndexOf","start","slice","defaultTypeaheadScope","scope","placeholder","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","initTypeahead","findMatches","$viewValue","formatMatchSelection","$model","optionsTemplateUrl","forceSelection","searchField","typeaheadModelOptions","debounce","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","searchQuery","onSelect","$item","$label","$event","onBlur","isString","onChange","createDummySelection","onSearch","onAdd","isTypeaheadSearchQuery","match","directive","typeaheadHelper","demographicsService","restrict","link","matches","moreResults","integrator","outofdomain","typeaheadLabel","showIcon","disableInput","elem","dateOptions","showWeeks","opened","openDatepicker","callback","attrs","resizable","handles","minHeight","minWidth","maxWidth","maxHeight","on","evt","ui","css","newHeight","draggable","axis","containment","constant","calendars","$locale","sources","eventSources","extraEventSignature","calendarWatchEvent","noop","eventSerialId","eventFingerprint","_id","extraSignature","isMoment","unix","end","allDay","sourceSerialId","sourceEventsSerialId","sourceFingerprint","source","fp","__id","events","allEvents","arraySources","srcLen","extEvent","eI","concat","apply","changeWatcher","arraySource","tokenFn","self","getTokens","token","el","map","subtractAsSets","a","b","inB","subscribe","onArrayChanged","newTokens","oldTokens","replacedTokens","removedTokens","removedToken","newToken","onRemoved","onChanged","addedTokens","onAdded","applyChanges","getFullCalendarConfig","calendarSettings","uiCalendarConfig","forEach","functionToWrap","$root","$$phase","arguments","args","$apply","getLocaleConfig","fullCalendarConfig","lang","useNgLocale","tValues","r","k","dtf","DATETIME_FORMATS","monthNames","MONTH","monthNamesShort","SHORTMONTH","dayNames","DAY","dayNamesShort","SHORTDAY","enabled","elm","calendar","sourcesChanged","eventSourcesWatcher","eventsWatcher","destroyCalendar","fullCalendar","html","initCalendar","stick","clientEvents","clientEvent","uiCalendar","$parent","$eval","localeFullCalendarConfig","options2","o","newValue","oldValue","$parse","priority","require","addCustomAttr","attr","fnDisableIfTrue","each","locals","expElements","attrToWatch","$watchCollection","input_placeholder","on_blur","momentDate","global_state","autocomplete","results_factory","min_length_zero_types","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","editable","ca_exclude_list","search_field","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","create_on_not_found_fn","temp_model","on_change","build_model_object","model_on_focus","on_focus","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","items","in_list","ii","exclude_item","value_field","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","new_value","old_value","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","splice","$filter","ngModelController","$parsers","text","tempValue","parseFloat","toFixed","isNaN","$formatters","unshift","currencyFilter","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","$compile","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","container","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","open_date_picker","on_click","dates","new_is_multi_date","input_box","caDatePickerId","dropdown","footer","replaceWith","contents","pad_length","include_empty_option","rows","max_characters","minute_step","picker_container","toggle_widget","timepicker","defaultTime","minuteStep","icons","up","down","true_text","false_text","true_value","false_value","field_controllers","ignore","form_nav","saving","field_value_map","success_message","field_value_map_label_key","displayFieldErrors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","item","has_sub_errors","error_link_has_function","error_link","execute_error_link_fn","should_display_field_errors","$rootScope","identifier","key_combo","callback_fn","key_bind_settings","hierarchy","parents","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","change_page_callback","mode","change_page","page_number","current_page","expand_ellipsis","go_to_page_num","close_ellipsis","go_to_page","page_int","ngModel","editor","modules","toolbar","image-tooltip","link-tooltip","theme","extraOptions","quill","Quill","children","$render","delta","getHTML","$setViewValue","setHTML","$document","eventName","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","update_search_results_footer","addClass","removeClass","ctrl","compileHtml","jsp","modelSetter","fileModel","bind","files","resizeHandler","$broadcast","scrollHandler","caZeroPad","securityService","showPatientList","$location","$state","$uibModal","personaService","inboxService","messageService","unAckLabDocTotal","unreadMessageTotal","demographicSearch","billRegion","searchRights","newDemographicRights","messageRights","menus","dashboardMenu","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","newVal","goToPatientSearch","goToPatientRecord","onPatientSearch","go","reload","hideNote","transition","wname","qs","path","param","substring","openNewWindow","openMessenger","extra","newDemographic","size","backdrop","isActive","current","changeProgram","mediumNavItemFilter","inverse","filterValue","inArray","smallNavItemFilter","$uibModalInstance","programService","staticDataService","submitDisabled","programs","admissionProgramId","save","ngModelContoller","sex","$valid","isCorrectDate","alert","demoRetVal","close","ok","selected","cancel","dismiss","capName","toUpperCase","NgTableParams","ticklerService","k2aService","noteService","displayDate","k2aActive","k2aFeedActive","busyLoadingData","dashboardPreferences","ticklerWriteAccess","ticklerReadAccess","inboxTableParams","count","getData","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","agreeId","agreeCount","reason","disagree","newComment","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","commentCount","comments","updateTicklers","creator","overdueOnly","totalTicklers","arr","updateMessages","totalMessages","updateReports","inbox","totalInbox","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","parse","serviceDate","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","tabItems","angularUtil","Navigation","patientListState","scheduleService","reportingService","sidebar","showFilter","goToRecord","encType","hidePatientList","temp","currenttab","isMoreActive","currentmoretab","$emit","changeMoreTab","moreTabItemsIndex","moreTabItems","refresh","changeTab","tabItemIndex","getMoreTabClass","currentPage","pageSize","patients","numberOfPages","nPages","ceil","changePage","pageNum","process","serviceMethod","resultList","recentPatientList","numberOfApptstoShow","getTabItems","manageConfiguration","Promise","statusCodeMap","Map","getAppointmentStatusDescriptionByStatusCode","statusCode","getAppointmentStatusColourByStatusCode","colour","color","today","preventDefault","stopPropagation","AddDays","noOfDays","setTime","getTime","switchDay","dateNew","formattedDate","changeApptList","changeApptDate","addNewAppointment","apptDate","viewAppointment","statusList","isScheduleActive","saveConfiguration","sets","updateData","admissions","zero","$localStorage","$interval","assignedCMIssues","itvSet","itvCheck","editingNoteId","isNoteSaved","$storage","recordtabs2","fillMenu","cannotChange","checkAction","num","currenttab2","demoId","win","rnd","round","random","onbeforeunload","encounterNote","timeout","saveUpdates","initNote","skipTmpSave","oldVal","saveIntervalSeconds","totalSeconds","myVar","setInterval","innerHTML","pad","valString","getCurrentTimerToggle","toggleTimer","clearInterval","pasteTimer","ed","toggleNote","cancelNoteEdit","assignedIssues","issueDescriptions","editorNames","issue","saveSignNote","isSigned","saveSignVerifyNote","isVerified","billregion","defaultView","saveSignBillNote","dxCode","apptProvider","apptStartTime","dt","startTime","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","editNote","displayWarning","noteEditorText","observationDate","doSetEditingNoteFlag","resp","x","templates","encounterTemplateName","insertTemplate","encounterTemplateValue","magicVal","noteToEdit","assignIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","removeIssue","unchecked","newList","age","summaryService","columnOne","columnThree","selectedNotes","notes","notelist","busy","noteFilter","currentFilter","onlyNotes","onlyMine","canRead","cannotAdd","openRevisionHistory","openRx","openAllergies","openPreventions","openAssessments","addMoreItems","editGroupNote","findGroupNote","gotoState","moduleList","summaryItems","summaryItem","currentEditNote","isNoteBeingEdited","noteFound","notecount","isRegularNote","rxAnnotation","eformData","encounterForm","invoice","cpp","setColor","border-left-color","showNoteHeader","showNote","deleted","getNoteHeader","noteObj","trackerUrl","getTrackerUrl","toggleList","mod","displaySize","showMoreItems","isSectionExpanded","isSectionEmpty","isUnsignedEncounterNote","fillItems","summaryLists","itemsToFill","editGroupedNotes","action","windowClass","itemId","transitionTo","viewEform","eFormId","viewDocument","documentId","itemArray","showPrintModal","toggleIsSelectedForPrint","isSelected","pageOptions","printType","selectedWarning","atleastOneSelected","printToday","cancelPrint","sendToPhr","queryString","selectedList","print","ops","diseaseRegistryService","quickLists","groupNotesForm","position","now","annotation_attrib","addDxItem","displayIssueId","displayGroupNote","groupNoteExt","setAvailablePositions","itemExtra","availablePositions","changeNote","saveGroupNotes","encounterType","encounterTime","inherit","removeGroupNoteIssue","restoreIssue","archiveGroupNotes","archived","clearChanges","pym","currentFormList","currentForm","currentlistId","adminAccess","adminEformAccess","hasAdminAccess","formlists","list","encounterFormlist","formGroups","formOptions","favouriteGroup","changeTo","listId","debug","viewFormState","view","hasChildNodes","removeChild","firstChild","queryName","formId","formValue","pymParent","Parent","maxheight","contentWindow","scrollHeight","offsetHeight","isEmpty","currentEformGroup","setCurrentEFormGroup","openFormFromGroups","formOption","opt","atleastOneItemSelected","docIds","isChecked","getListClass","getGroupListClass","grp","getActiveFormClass","currentState","keypress","altKey","currIdx","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","buildDate","dateEmpty","date3Valid","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","hcParts","phoneNum","defPhTitle","prefPhTitle","recordCtrl","initDemographicVars","checkAccess","doctors","nurses","midwives","demoContacts","demoContactShow","demoContactPros","scrNotes","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","extras","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","alternativePhone","waitingListNames","tmp","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","engFre","spokenlangs","rosterTermReasons","securityQuestions","rxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","rosterStatusList","patientStatusList","formatLastName","formatFirstName","setSwipeReady","validateHCSave","ver","chartNo","sin","readyForSwipe","swipecardMsg","swipecard","healthCardHandler","keycode","swipeCardData","namePos","endNamePos","healthCardUpdateDemographics","hcType","hcTypeColor","lastNameColor","firstNameColor","hinColor","verColor","hcSex","sexColor","dateParts","dobYearColor","dobMonthColor","dobDayColor","swipeDate","effDateColor","hcRenewDateColor","hinExpDate","valid","HCValidation","responseDescription","responseCode","checkHin","checkHinVer","checkDate","checkYear","checkMonth","daysOfMonth","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","dateValid","isPostalComplete","province","address","postal","isPostalValid","resetEditState","checkEmail","email","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","Number","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchReferralDocs","searchReferralDocsRefNo","referralDoctors","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doc","doSave","newDemoExtras","maxDaysOfMonth","demoContact","contactShow","sdm","ec","resizeIframe","iframe","$resource","ticklerAPI","lastResponse","tableParams","sorting","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","myRegexp","exec","sortColumn","sortDirection","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","doSearch","checkNone","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","editNote2","revision","showComments","printArea","tableName","tableId","ticklerUpdate","serviceDateInput","serviceTimeInput","needsUpdate","showUpdates","showCommentFormControl","priorities","selectedStatus","newDate","finalVal","updateTaskAssignedTo","taskAssignedTo","taskAssignedToName","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","dp","tp","serviceTime","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","providerName","formattedName","updateDate","cancelCommentUpdate","saveChanges","postData","completeTickler","deleteTickler","printTickler","serviceDateDate","serviceDateTime","suggestedTextId","updateDemographicNo","textSuggestions","suggestedText","validate","t","showErrors","givenDate","givenTime","setHours","setMinutes","searchPatients","updateProviderNo","setSuggestedText","addMonthsFromNow","originalNote","focusService","appointmentApi","_generated_api_AppointmentApi__WEBPACK_IMPORTED_MODULE_0__","scheduleApi","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_1__","calendarName","initialized","calendarLoading","uiConfig","uiConfigApplied","selectedSchedule","selectedSiteName","selectedTimeInterval","cpCalendarControl","schedules","scheduleOptions","resourceOptions","siteOptions","defaultEventColor","defaultTimeInterval","timeIntervalOptions","defaultAutoRefreshMinutes","defaultCalendarView","eventStatuses","rotateStatuses","availabilityTypes","resourceOptionHash","scheduleTemplates","sites","openingDialog","dialog","defaultDate","scheduleViewName","scheduleDefault","scheduleTimeInterval","scheduleAutoRefresh","scheduleAutoRefreshMinutes","calendarViewName","loadAvailabilityTypes","loadEventStatuses","loadScheduleOptions","loadSiteOptions","loadDefaultSelections","loadSelectedSchedules","setCalendarResources","setEventSources","initEventsAutoRefresh","applyUiConfig","isSchedulingEnabled","isInitialized","hasSchedules","hasSites","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","selectedSite","viewName","calendarEvents","timezone","promise_array","loadScheduleEvents","results_array","err","showTimeIntervals","changeView","reload_schedules","updateCalendarView","showLegend","event_statuses","availability_types","animation","refetchEvents","changeDate","isAgendaView","getSelectedSchedule","selectedUuid","promiseArray","providerNos","loadSchedule","selectedResources","buildSelectedResources","resources","resultsArray","schedule","availabilities","relations","setCalendarLoading","isLoading","getLoadedSchedule","updateEvent","calEvent","timeIntervalMinutes","getSelectedTimeInterval","slotDuration","slotLabelInterval","minTime","getScheduleMinTime","maxTime","getScheduleMaxTime","scrollTime","subtract","timeInterval","rawResults","displayLetter","rotates","startDateString","endDateString","saveEvent","editMode","moveEvent","adjustStartTime","startMoment","endMoment","endTime","movedAppointment","asMinutes","processSaveResults","errorMessage","validationErrorArray","validationErrors","deleteEvent","openCreateInvoice","event_uuid","schedule_uuid","demographics_patient_uuid","get_loaded_schedule","calendar_api_adapter","get_create_invoice_url","demographics_practitioner_uuid","window_scope","getIconPath","icon","statusModifier","modifierString","rotateEventStatus","newStatus","eventStatusCode","getBillingLink","resourceId","referralNoParameter","billingRdohip","billingRegion","billingForm","demographicName","userProviderNo","getEncounterLink","userFirstName","userLastName","getRxLink","onEventRender","rendering","eventSiteHtml","eventSite","eventStatusHtml","eventStatus","eventStatusRotate","sortOrder","eventStatusModifier","eventDetails","onViewRender","afterRender","click","openCreateEventDialog","jsEvent","resource","scheduleUuid","display_name","modalSchedule","defaultEventStatus","eventData","parentScope","keyBinding","bindKeyGlobal","catch","res","openPatientDialog","editModeCallback","onSaveCallback","loadErrorLinkPatientFn","edit_mode","on_save_callback","load_error_link_patient_fn","openPatientDemographic","openEditEventDialog","onEventClicked","target","onEventDrop","revertFunc","onEventResize","onSiteChanged","onScheduleChanged","onTimeIntervalChanged","scheduleData","loadSites","out","siteId","bgColor","minutes","nowIndicator","header","center","right","allDaySlot","slotLabelFormat","loading","selectable","eventClick","eventRender","viewRender","eventAfterAllRender","eventDrop","eventResize","schedulerLicenseKey","messagesFactory","eventUuid","lastEventLength","patientTypeahead","autocompleteValues","activeTemplateEvents","eventStatusOptions","selectedEventStatus","timepickerFormat","fieldValueMapping","displayMessages","working","demographicModel","fullName","hasPhoto","patientPhotoUrl","birthDate","healthNumber","ontarioVersionCode","phoneNumberPrimary","fillData","uploadPhoto","file","momentStart","momentEnd","diff","setActiveTemplateEvents","setSelectedEventStatus","initPatientAutocomplete","adjustEndDatetime","selectedCode","formattedTime","activeEvents","isBefore","isAfter","availabilityType","scheduleTemplateCode","lengthMinutes","newEventLength","updateLastEventLength","eventLength","validateForm","startDatetime","endDatetime","isSame","addStandardError","time_str","loadPatientFromTypeahead","newStartDate","oldStartDate","newStartTime","oldStartTime","newEndDate","oldEndDate","newEndTime","oldEndTime","loadedNewPhoto","preview_patient_image","new_photo","isWorking","isPatientSelected","clearPatient","setEventLength","saveAndBill","viewInvoices","open_view_invoices","createPatient","create_patient_dialog","onPatientModalSave","modify_patient","modify_patient_dialog","keyBindSettings","ctrl+enter","tooltip","ctrl+shift+enter","types","duration","critical","selectType","startTime12hWithMedian","urgency","appointmentUpdate","appointmentWriteAccess","editProvider","showProviderFormControl","provider","updateProvider","cancelProviderUpdate","showAppointmentHistory","faxAccountService","systemPreferenceService","faxAccountList","loggedInProvider","masterFaxDisabled","masterFaxEnabledInbound","masterFaxEnabledOutbound","initialize","updateMasterFaxDisabledStatus","editNewFaxAccount","editFaxAccount","faxAccount","isNewAcct","updatedAccount","saveMasterFaxEnabledStateInbound","setSystemProperty","saveMasterFaxEnabledStateOutbound","connectionStatusEnum","freeze","unknown","failure","coverLetterOptions","connectionStatus","setDefaultConnectionStatus","enableInbound","enableOutbound","accountLogin","accountEmail","password","coverLetterOption","faxNumber","form","closeSuccess","closeError","faxInboundService","faxOutboundService","systemStatusEnum","sent","queued","tabEnum","outbox","activeTab","loggedInProviderNo","nextPullTime","nextPushTime","selectedFaxAccount","outboxItemList","inboxItemList","DateSent","loadNextPushTime","loadNextPullTime","loadOutboxItems","tableParamsOutbox","formatOptionalDateParam","loadInboxItems","tableParamsInbox","info","resendFax","outboxItem","systemStatus","systemStatusMessage","tabId","openDocument","openDocumentWindow","viewDownloadFile","outboundId","dateObj","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","checkStatus","getPreventionRulesList","prevSet","increasePrevListQuantity","notifications","readMore","notif","archive","reportByTemplateService","k2aReports","K2A_URL","dtOptions","saveK2AReport","refreshParent","openK2AUrl","opener","onunload","atth","patientName","attachedDocs","attachments","selectedAttachedDoc","consultId","availableDocs","selectedAvailableDoc","openDoc","attach","removeIndex","documentNo","selectionIndex","selectedIndex","attachmentsChanged","detach","done","consultReadAccess","consultUpdateAccess","consultWriteAccess","team","searchMrps","mrpNo","updateMrpNo","mrpName","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","searchDemoNo","setSearchParams","$current","srhDemoNo","srhMrpNo","srhStatus","srhTeam","referralStartDate","srhRefStartDate","referralEndDate","srhRefEndDate","appointmentStartDate","srhApptStartDate","appointmentEndDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","ReferralDate","getSavedSearchVals","search1","j","statusDescription","urgencyDescription","urgencyColor","refDate","setMonth","outstanding","hideSearchPatient","sortMode","vheight","vwidth","varpage","winname","faxList","serviceList","sendToList","hours","parseTime","time","tArray","appointmentHour","appointmentMinute","appointmentTime","cellPhone","letterheadList","letterhead","changeLetterhead","letterheadName","serviceId","specialists","spec","professionalSpecialist","letterheadAddress","letterheadPhone","letterheadFax","fax","consultChanged","changeService","writeToBox","boxId","boxData","clinicalInfo","concurrentProblems","currentMeds","getAllergies","invalidData","setAppointmentTime","patientWillBook","apptTime","set","openAttach","attachment","attachFiles","setESendEnabled","eSendEnabled","eDataUrl","consultSaving","finally","saveAndFax","reqId","eSend","saveAndPrint","onRecordPage","getAccessRights","getTeams","getSavedSearchParams","_params","tmpSearch","countPerPage","toPage","referringDoctorList","referringDoc","referringDoctor","p_page1","sendFax","p_urgency","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","printPreview","printWin","p_attachments","write","p_clinicName","p_responseDate","p_referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","p_patientBirthdate","p_patientSex","sexDesc","p_patientHealthCardNo","p_patientChartNo","p_patientAddress","city","p_appointmentDate","p_appointmentTime","p_reason","reasonForReferral","examination","impression","plan","allergies","demographicReadAccess","clearParams","initTable","Name","integratorResults","demographicSearchResults","promiseErrors","dobMoment","searchType","searchTermPlaceHolder","toggleParam","loadRecord","showIntegratorResults","doImport","myUrl","remoteFacilityId","prevPage","nextPage","$log","ReportNavigation","reports","iframeUrl","group","reportGroup","reportGroups","getReportGroups","reportSidebar","editDemographicSet","selectReport","getReports","groups","groupMap","report","currentReport","direct","generateReport","p","reset","version","region","includePastForms","openPopup","pref","recentPatients","formGroupNames","billingServiceTypesMod","appointmentScreenForms","formName","appointmentScreenEforms","tabs","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","currentTab","appointmentScreenQuickLinks","selectEncounterForms","selectEForms","removeQuickLinks","openChangePasswordModal","openQuickLinkModal","selectedItem","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","changePassword","qll","addQuickLink","qlForm","ospInfo","contact","buildInfo","versionDisplayName"],"mappings":"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","file":"bundle.76ba1f9b050c8fe9c3b1.js","sourcesContent":["/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class AppointmentApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public addAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public deleteAppointment (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseInteger> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling deleteAppointment.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'DELETE',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public setNextStatus (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/rotate_status'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling setNextStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public updateAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param year \n     * @param month \n     * @param providerNo \n     */\n    public fetchMonthlyData (year: number, month: number, providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/fetchMonthly/{providerNo}/{year}/{month}'\n            .replace('{' + 'year' + '}', encodeURIComponent(String(year)))\n            .replace('{' + 'month' + '}', encodeURIComponent(String(month)))\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'year' is not null or undefined\n        if (year === null || year === undefined) {\n            throw new Error('Required parameter year was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'month' is not null or undefined\n        if (month === null || month === undefined) {\n            throw new Error('Required parameter month was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling fetchMonthlyData.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param demographicNo \n     */\n    public findExistAppointments (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling findExistAppointments.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public getAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/getAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param date \n     */\n    public getAppointmentsForDay (providerNo: string, date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/{providerNo}/day/{date}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay1 (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerId \n     * @param startDate \n     * @param endDate \n     * @param site \n     */\n    public getCalendarEvents (providerId: number, startDate?: string, endDate?: string, site?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarEvent> {\n        const localVarPath = this.basePath + '/schedule/calendar/{providerId}'\n            .replace('{' + 'providerId' + '}', encodeURIComponent(String(providerId)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerId' is not null or undefined\n        if (providerId === null || providerId === undefined) {\n            throw new Error('Required parameter providerId was null or undefined when calling getCalendarEvents.');\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentStatus (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateStatus'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentType (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateType'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentType.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {}\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.settings = {\n\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\tdatetime_no_timezone_format: \"YYYY-MM-DDTHH:mm:ss\",\n\ttime_format: \"h:mma\",\n\tdate_format: \"YYYY-MM-DD\",\n\tdayofweek_format: \"dddd\"\n};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatMomentDate = function formatMomentDate(d) {\n\treturn d.format(Juno.Common.Util.settings.date_format);\n};\n\nJuno.Common.Util.formatMomentTime = function formatMomentTime(d, format) {\n\tif(!format) {\n\t\tformat = Juno.Common.Util.settings.time_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.formatMomentDateTimeNoTimezone = function formatMomentDateTimeNoTimezone(d) {\n\treturn d.format(Juno.Common.Util.settings.datetime_no_timezone_format);\n};\n\nJuno.Common.Util.getDateMoment = function getDateMoment(date_string)\n{\n\treturn moment.utc(date_string, Juno.Common.Util.settings.date_format, true);\n};\n\nJuno.Common.Util.getTimeMoment = function getTimeMoment(time_string)\n{\n\treturn moment.utc(time_string, Juno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDateMomentFromComponents = function getDateMomentFromComponents(year_string, month_string, day_string)\n{\n\treturn moment.utc({year: year_string, month: month_string, day: day_string});\n};\n\nJuno.Common.Util.getDateAndTimeMoment = function getCombinedMoment(dateString, timeString)\n{\n\treturn moment.utc(dateString + \" \" + timeString,\n\t\tJuno.Common.Util.settings.date_format + \" \" +\n\t\tJuno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDatetimeNoTimezoneMoment = function getDatetimeNoTimezoneMoment(datetime_string)\n{\n\treturn moment.utc(datetime_string,\n\t\tJuno.Common.Util.settings.datetime_no_timezone_format, true);\n};\n\nJuno.Common.Util.validateDateString = function validateDateString(\n\tdateString, displayErrors, field, fieldDisplayName, required)\n{\n\tif(Juno.Common.Util.exists(dateString))\n\t{\n\t\tvar moment = Juno.Common.Util.getDateMoment(dateString);\n\t\tif(!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + ' is invalid');\n\t\t}\n\t}\n\telse if(required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.validateTimeString = function validateTimeString(\n\ttimeString, displayErrors, field, fieldDisplayName, required)\n{\n\tif (Juno.Common.Util.exists(timeString))\n\t{\n\t\tvar moment = Juno.Common.Util.getTimeMoment(timeString);\n\t\tif (!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n {\n\n\tvar dateOfBirth = new Date(parseInt(dobYear, 10), parseInt(dobMonth, 10), parseInt(dobDay, 10));\n\tvar currDate = new Date();\n\n\tvar years = (currDate.getFullYear() - dateOfBirth.getFullYear());\n\n\tif (currDate.getMonth() < dateOfBirth.getMonth() ||\n\t\tcurrDate.getMonth() == dateOfBirth.getMonth() && currDate.getDate() < dateOfBirth.getDate())\n\t{\n\t\tyears--;\n\t}\n\treturn years;\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nJuno.Common.Util.escapeHtml = function escapeHtml(str)\n{\n\tvar entityMap = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t'\"': '&quot;',\n\t\t\"'\": '&#39;',\n\t\t\"/\": '&#x2F;'\n\t};\n\n\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t{\n\t\treturn entityMap[s];\n\t});\n};\n\nJuno.Common.Util.formatName = function formatName(firstName, lastName)\n{\n\tif(!lastName && !firstName)\n\t{\n\t\treturn null;\n\t}\n\telse if(!firstName)\n\t{\n\t\treturn lastName;\n\t}\n\telse if(!lastName)\n\t{\n\t\treturn firstName;\n\t}\n\n\treturn lastName + ', ' + firstName;\n};\n","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable')\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable')\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('bootstrap-sass');\nrequire('ngstorage');\nrequire('pym.js');\nrequire('./scss/juno.scss');\nrequire('font-awesome/css/font-awesome.min.css');\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'PatientList',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act',\n\t'Admin.Integration.Fax'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController'\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin_popup.jsp',\n\t\t\tcontroller: 'AdminCtrl'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tformListId: 0\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.view',\n\t\t{\n\t\t\turl: '/view/:type/:id?name',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tparams: { name: { dynamic: true } },\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.forms.add',\n\t\t{\n\t\t\turl: '/add/:type/:id',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t\t{\n\t\t\t\turl: '/k2aNotification',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t\t})\n\t\t.state('faxConfig',\n\t\t\t{\n\t\t\t\turl: '/faxConfig',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfiguration.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationController as faxController'\n\t\t\t})\n\t\t.state('faxSendReceive',\n\t\t\t{\n\t\t\t\turl: '/faxSendReceive',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxSendReceive.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxSendReceiveController as faxSendReceiveController'\n\t\t\t})\n\t;\n\n}]);\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.SearchListHelper = function SearchListHelper(defaultParams, searchParams)\n{\n\tvar me = this;\n\n\tme.searchParams = searchParams || {};\n\tme.defaults = {\n\t\tpage: 1,\n\t\tperPage: 10,\n\t};\n\n\tme.initSearchParameters = function initSearchParameters()\n\t{\n\t\tvar fieldName;\n\n\t\t// Merge default params\n\t\tif(Juno.Common.Util.exists(defaultParams))\n\t\t{\n\t\t\tfor(fieldName in defaultParams)\n\t\t\t{\n\t\t\t\tif(defaultParams.hasOwnProperty(fieldName))\n\t\t\t\t{\n\t\t\t\t\tme.defaults[fieldName] = defaultParams[fieldName];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.getParams = function getParams()\n\t{\n\t\tvar outParams = {};\n\t\tfor(var fieldName in me.searchParams)\n\t\t{\n\t\t\tif(me.searchParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.searchParams[fieldName];\n\t\t\t}\n\t\t}\n\t\tfor(var fieldName in me.defaults)\n\t\t{\n\t\t\tif(!outParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.defaults[fieldName];\n\t\t\t}\n\t\t}\n\t\treturn outParams;\n\t};\n\n\tme.initSearchParameters();\n};\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\t\"$q\",\n\t\"demographicService\",\n\tfunction(\n\t\t$q,\n\t\tdemographicService\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.init_autocomplete_values = function init_autocomplete_values(patient, autocomplete_values){\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tdemographicService.getDemographic(patient.patient).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\tresult.dob = moment([result.dobYear, result.dobMonth, result.dobDay]);\n\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tpatient:{\n\t\t\t\t\t\t\tdata: service.formatDemographic(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.formatDemographic = function formatDemographic(result)\n\t\t{\n\t\t\treturn {\n\t\t\t\tuuid: result.demographicNo,\n\t\t\t\tfull_name: result.lastName + ',' + result.firstName,\n\t\t\t\tbirth_date: Juno.Common.Util.formatMomentDate(result.dob),\n\t\t\t\thealth_number: result.hin,\n\t\t\t\tphone_number_primary: result.phone\n\t\t\t};\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getLetterheadList = function getLetterheadList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'getLetterheadList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getLetterheadList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching letterheads\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    console.log('converted RESULTS: ', results.data);\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while saving demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errorsHash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {displayFieldErrors} Boolean : Sets flag\n\t\t\t//\t\t- {fieldErrorsLabelMap} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {fieldErrorsLabelMapKey} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errorsHash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errorsHash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxAccountService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxAccount';\n\n\t\tservice.listAccounts = function listAccounts(page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::listAccounts error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isEnabled = function isEnabled(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::isEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getAccountSettings = function getAccountSettings(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::getAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAccountSettings = function addAccountSettings(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateAccountSettings = function updateAccountSettings(id, transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.testConnection = function testConnection(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tlet id = transfer.id;\n\t\t\tlet url = service.apiPath + '/testConnection';\n\n\t\t\tif(id && id != null && id !== '')\n\t\t\t{\n\t\t\t\turl = service.apiPath + '/' + transfer.id + '/testConnection'\n\t\t\t}\n\n\t\t\tjunoHttp.post(url, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::validateLogin error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while testing connection\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getInbox = function getInbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/inbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getInbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving inbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOutbox = function getOutbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/outbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getOutbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving outbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxInboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxInbound';\n\n\t\tservice.getNextPullTime = function getNextPullTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPullTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPullTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled pull time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxOutboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxOutbound';\n\n\t\tservice.resendOutboundFax = function resendFax(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id + '/resend').then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::resendFax error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while resending a fax\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\tservice.getNextPushTime = function getNextPushTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPushTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPushTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled push time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t/* provide the endpoint url for downloading the faxed pdf document */\n\t\tservice.getDownloadUrl = function(id)\n\t\t{\n\t\t\treturn service.apiPath + '/' + id + '/download';\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur'\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/' + demographicNo + '/completedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getCompletedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching completed encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\toffset: encodeURIComponent(offset),\n\t\t\t\tnumToReturn: encodeURIComponent(numberToReturn),\n\t\t\t\tnoteConfig: noteConfig\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results.data);\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"providerService::getRecentDemographicsViewed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportingService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/reporting/';\n\n\t\tservice.getDemographicSetList = function getDemographicSetList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'demographicSets/list', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportingService::demographicSets error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching demographicSets\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"scheduleService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.selectedDate = null;\n\n\t\tservice.getStatuses = function getStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/statuses',\n\t\t\t\tservice.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching statuses\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTypes = function getTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/types',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointments = function getAppointments(day)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'schedule/day/' + encodeURIComponent(day), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointments\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAppointment = function addAppointment(appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(appointment),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::addAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointment = function getAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/getAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.appointment);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.deleteAppointment = function deleteAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/deleteAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::deleteAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while deleting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.appointmentHistory = function appointmentHistory(demoNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/' +\n\t\t\t\t\tencodeURIComponent(demoNo) + \"/appointmentHistory\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::appointmentHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.cancelAppointment = function cancelAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'C'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::cancelAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while cancelling appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.noShowAppointment = function noShowAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'N'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::noShowAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting no show appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleGroups = function getScheduleGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/groups',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getScheduleGroups error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSchedulesForCalendar = function getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\tsiteName\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'schedule/calendar/';\n\t\t\turl += encodeURIComponent(providerId) + '/';\n\t\t\turl += '?startDate=' + encodeURIComponent(startDate);\n\t\t\turl += '&endDate=' + encodeURIComponent(endDate);\n\n\t\t\tif(siteName != null)\n\t\t\t{\n\t\t\t\turl += '&site=' + encodeURIComponent(siteName);\n\t\t\t}\n\n\t\t\tjunoHttp.get(\n\t\t\t\turl,\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSchedulesForCalendar error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleTemplateCodes = function getAvailabilityCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/templateCodes',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAvailabilityTypes error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointmentStatuses = function getAppointmentStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/calendar/statuses',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointmentStatuses error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSites = function getSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'sites',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSites error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasOneOfPermissions = function hasOneOfPermissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.hasPermission = function hasPermission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgender\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"systemPreferenceService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/systemPreference';\n\n\t\tservice.getPreference = function getPreference(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::getPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPreference = function setPreference(key, value)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + key, value).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::setPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isPreferenceEnabled = function isPreferenceEnabled(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::isPreferenceEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference enabled status\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onSearchFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tconsole.log(\"- Formatting Match -------------\");\n\t\t\t\tconsole.log($model);\n\t\t\t\tconsole.log(\"--------------------------------\");\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\tconsole.log('typeaheadHelper::onSelect - setting model', $item);\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onChange - setting model (isTypeaheadSearchQuery)');\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = results.data;\n\t\t\t\t\t\tvar meta = results.meta;\n\n\t\t\t\t\t\tif(meta.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn Juno.Common.Util.formatName(demographic.firstName, demographic.lastName);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: 'Name',\n\t\t\t\t\t'term': search,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(function success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(data.content);\n\t\t\t\t\t\tconsole.log('dataa', data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\tconsole.log('RESIZABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\n\t\t\t\tconsole.log('RESIZABLE DIRECTIVE HEIGHT ', $(\".note-editor-textarea\").height());\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\tconsole.log('DRAGGABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","/*\r\n*  AngularJs Fullcalendar Wrapper for the JQuery FullCalendar\r\n*  API @ http://arshaw.com/fullcalendar/\r\n*\r\n*  Angular Calendar Directive that takes in the [eventSources] nested array object as the ng-model and watches it deeply changes.\r\n*       Can also take in multiple event urls as a source object(s) and feed the events per view.\r\n*       The calendar will watch any eventSource array and update itself when a change is made.\r\n*\r\n*/\r\n\r\n/*\r\n * Copied and modified for use at Cloudpractice because I couldn't figure out how to keep it from\r\n * loading before our initialization was done.  I've marked the changes with a CP below.\r\n */\r\n\r\nangular.module('ui.calendar', [])\r\n  .constant('uiCalendarConfig', {calendars: {}})\r\n  .controller('uiCalendarCtrl', ['$scope', \r\n                                 '$locale', function(\r\n                                  $scope, \r\n                                  $locale){\r\n\r\n      var sources = $scope.eventSources,\r\n          extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop,\r\n\r\n          wrapFunctionWithScopeApply = function(functionToWrap){\r\n              return function(){\r\n                  // This may happen outside of angular context, so create one if outside.\r\n\r\n                  if ($scope.$root.$$phase) {\r\n                      return functionToWrap.apply(this, arguments);\r\n                  } else {\r\n                      var args = arguments;\r\n                      var self = this;\r\n                      return $scope.$root.$apply(function(){\r\n                          return functionToWrap.apply(self, args);\r\n                      });\r\n                  }\r\n              };\r\n          };\r\n\r\n      var eventSerialId = 1;\r\n      // @return {String} fingerprint of the event object and its properties\r\n      this.eventFingerprint = function(e) {\r\n        if (!e._id) {\r\n          e._id = eventSerialId++;\r\n        }\r\n        \r\n        var extraSignature = extraEventSignature({event: e}) || '';\r\n        var start = moment.isMoment(e.start) ? e.start.unix() : (e.start ? moment(e.start).unix() : '');\r\n        var end =   moment.isMoment(e.end)   ? e.end.unix()   : (e.end   ? moment(e.end).unix()   : '');\r\n        \r\n        // This extracts all the information we need from the event. http://jsperf.com/angular-calendar-events-fingerprint/3\r\n        return \"\" + e._id + (e.id || '') + (e.title || '') + (e.url || '') + start + end +\r\n          (e.allDay || '') + (e.className || '') + extraSignature;\r\n      };\r\n\r\n      var sourceSerialId = 1, sourceEventsSerialId = 1;\r\n      // @return {String} fingerprint of the source object and its events array\r\n      this.sourceFingerprint = function(source) {\r\n          var fp = '' + (source.__id || (source.__id = sourceSerialId++)),\r\n              events = angular.isObject(source) && source.events;\r\n          if (events) {\r\n              fp = fp + '-' + (events.__id || (events.__id = sourceEventsSerialId++));\r\n          }\r\n          return fp;\r\n      };\r\n\r\n      // @return {Array} all events from all sources\r\n      this.allEvents = function() {\r\n        // do sources.map(&:events).flatten(), but we don't have flatten\r\n        var arraySources = [];\r\n        for (var i = 0, srcLen = sources.length; i < srcLen; i++) {\r\n          var source = sources[i];\r\n          if (angular.isArray(source)) {\r\n            // event source as array\r\n            arraySources.push(source);\r\n          } else if(angular.isObject(source) && angular.isArray(source.events)){\r\n            // event source as object, ie extended form\r\n            var extEvent = {};\r\n            for(var key in source){\r\n              if(key !== '_id' && key !== 'events'){\r\n                 extEvent[key] = source[key];\r\n              }\r\n            }\r\n            for(var eI = 0;eI < source.events.length;eI++){\r\n              angular.extend(source.events[eI],extEvent);\r\n            }\r\n            arraySources.push(source.events);\r\n          }\r\n        }\r\n        return Array.prototype.concat.apply([], arraySources);\r\n      };\r\n\r\n      // Track changes in array of objects by assigning id tokens to each element and watching the scope for changes in the tokens\r\n      // @param {Array|Function} arraySource array of objects to watch\r\n      // @param tokenFn {Function} that returns the token for a given object\r\n      // @return {Object}\r\n      //  subscribe: function(scope, function(newTokens, oldTokens))\r\n      //    called when source has changed. return false to prevent individual callbacks from firing\r\n      //  onAdded/Removed/Changed:\r\n      //    when set to a callback, called each item where a respective change is detected\r\n      this.changeWatcher = function(arraySource, tokenFn) {\r\n        var self;\r\n        var getTokens = function() {\r\n          var array = angular.isFunction(arraySource) ? arraySource() : arraySource;\r\n          var result = [], token, el;\r\n          for (var i = 0, n = array.length; i < n; i++) {\r\n            el = array[i];\r\n            token = tokenFn(el);\r\n            map[token] = el;\r\n            result.push(token);\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // @param {Array} a\r\n        // @param {Array} b\r\n        // @return {Array} elements in that are in a but not in b\r\n        // @example\r\n        //  subtractAsSets([6, 100, 4, 5], [4, 5, 7]) // [6, 100]\r\n        var subtractAsSets = function(a, b) {\r\n          var result = [], inB = {}, i, n;\r\n          for (i = 0, n = b.length; i < n; i++) {\r\n            inB[b[i]] = true;\r\n          }\r\n          for (i = 0, n = a.length; i < n; i++) {\r\n            if (!inB[a[i]]) {\r\n              result.push(a[i]);\r\n            }\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // Map objects to tokens and vice-versa\r\n        var map = {};\r\n\r\n        // Compare newTokens to oldTokens and call onAdded, onRemoved, and onChanged handlers for each affected event respectively.\r\n        var applyChanges = function(newTokens, oldTokens) {\r\n          var i, n, el, token;\r\n          var replacedTokens = {};\r\n          var removedTokens = subtractAsSets(oldTokens, newTokens);\r\n          for (i = 0, n = removedTokens.length; i < n; i++) {\r\n            var removedToken = removedTokens[i];\r\n            el = map[removedToken];\r\n            delete map[removedToken];\r\n            var newToken = tokenFn(el);\r\n            // if the element wasn't removed but simply got a new token, its old token will be different from the current one\r\n            if (newToken === removedToken) {\r\n              self.onRemoved(el);\r\n            } else {\r\n              replacedTokens[newToken] = removedToken;\r\n              self.onChanged(el);\r\n            }\r\n          }\r\n\r\n          var addedTokens = subtractAsSets(newTokens, oldTokens);\r\n          for (i = 0, n = addedTokens.length; i < n; i++) {\r\n            token = addedTokens[i];\r\n            el = map[token];\r\n            if (!replacedTokens[token]) {\r\n              self.onAdded(el);\r\n            }\r\n          }\r\n        };\r\n        return self = {\r\n          subscribe: function(scope, onArrayChanged) {\r\n            scope.$watch(getTokens, function(newTokens, oldTokens) {\r\n              var notify = !(onArrayChanged && onArrayChanged(newTokens, oldTokens) === false);\r\n              if (notify) {\r\n                applyChanges(newTokens, oldTokens);\r\n              }\r\n            }, true);\r\n          },\r\n          onAdded: angular.noop,\r\n          onChanged: angular.noop,\r\n          onRemoved: angular.noop\r\n        };\r\n      };\r\n\r\n      this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig){\r\n          var config = {};\r\n\r\n          angular.extend(config, uiCalendarConfig);\r\n          angular.extend(config, calendarSettings);\r\n\r\n          angular.forEach(config, function(value,key){\r\n            if (typeof value === 'function'){\r\n              config[key] = wrapFunctionWithScopeApply(config[key]);\r\n            }\r\n          });\r\n\r\n          return config;\r\n      };\r\n\r\n    this.getLocaleConfig = function(fullCalendarConfig) {\r\n      if (!fullCalendarConfig.lang || fullCalendarConfig.useNgLocale) {\r\n        // Configure to use locale names by default\r\n        var tValues = function(data) {\r\n          // convert {0: \"Jan\", 1: \"Feb\", ...} to [\"Jan\", \"Feb\", ...]\r\n          var r, k;\r\n          r = [];\r\n          for (k in data) {\r\n            r[k] = data[k];\r\n          }\r\n          return r;\r\n        };\r\n        var dtf = $locale.DATETIME_FORMATS;\r\n        return {\r\n          monthNames: tValues(dtf.MONTH),\r\n          monthNamesShort: tValues(dtf.SHORTMONTH),\r\n          dayNames: tValues(dtf.DAY),\r\n          dayNamesShort: tValues(dtf.SHORTDAY)\r\n        };\r\n      }\r\n      return {};\r\n    };\r\n  }])\r\n  .directive('uiCalendar', ['uiCalendarConfig', function(uiCalendarConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        eventSources:'=ngModel',\r\n        calendarWatchEvent: '&',\r\n        enabled: '=ngEnabled'     // CP: Added an option to enable the calendar\r\n      },\r\n      controller: 'uiCalendarCtrl',\r\n      link: function(scope, elm, attrs, controller) {\r\n\r\n        var sources = scope.eventSources,\r\n            sourcesChanged = false,\r\n            calendar,\r\n            eventSourcesWatcher = controller.changeWatcher(sources, controller.sourceFingerprint),\r\n            eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventFingerprint),\r\n            options = null;\r\n\r\n        function getOptions(){\r\n          var calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {},\r\n              fullCalendarConfig;\r\n\r\n          fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig);\r\n\r\n          var localeFullCalendarConfig = controller.getLocaleConfig(fullCalendarConfig);\r\n          angular.extend(localeFullCalendarConfig, fullCalendarConfig);\r\n          options = { eventSources: sources };\r\n          angular.extend(options, localeFullCalendarConfig);\r\n          //remove calendars from options\r\n          options.calendars = null;\r\n\r\n          var options2 = {};\r\n          for(var o in options){\r\n            if(o !== 'eventSources'){\r\n              options2[o] = options[o];\r\n            }\r\n          }\r\n          return JSON.stringify(options2);\r\n        }\r\n\r\n        scope.destroyCalendar = function(){\r\n          if(calendar && calendar.fullCalendar){\r\n            calendar.fullCalendar('destroy');\r\n          }\r\n          if(attrs.calendar) {\r\n            calendar = uiCalendarConfig.calendars[attrs.calendar] = $(elm).html('');\r\n          } else {\r\n            calendar = $(elm).html('');\r\n          }\r\n        };\r\n\r\n        scope.initCalendar = function(){\r\n          // CP: The calendar won't initialize when it's not enabled\r\n          if(scope.enabled) {\r\n\t\t    if (!calendar) {\r\n\t\t      calendar = angular.element(elm).html('');\r\n\t\t    }\r\n\t\t    calendar.fullCalendar(options);\r\n\t\t    if(attrs.calendar) {\r\n\t\t      uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n\t\t    }\r\n\t\t  }\r\n        };\r\n        scope.$on('$destroy', function() {\r\n          scope.destroyCalendar();\r\n        });\r\n\r\n        eventSourcesWatcher.onAdded = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar(options);\r\n            if (attrs.calendar) {\r\n                uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n            }\r\n            calendar.fullCalendar('addEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onRemoved = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onChanged = function() {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('refetchEvents');\r\n            sourcesChanged = true;\r\n          }\r\n\r\n        };\r\n\r\n        eventsWatcher.onAdded = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('renderEvent', event, (event.stick ? true : false));\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onRemoved = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEvents', event._id);\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onChanged = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            var clientEvents = calendar.fullCalendar('clientEvents', event._id);\r\n            for (var i = 0; i < clientEvents.length; i++) {\r\n              var clientEvent = clientEvents[i];\r\n              clientEvent = angular.extend(clientEvent, event);\r\n              calendar.fullCalendar('updateEvent', clientEvent);\r\n            }\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.subscribe(scope);\r\n        eventsWatcher.subscribe(scope, function() {\r\n          if (sourcesChanged === true) {\r\n            sourcesChanged = false;\r\n            // return false to prevent onAdded/Removed/Changed handlers from firing in this case\r\n            return false;\r\n          }\r\n        });\r\n\r\n        scope.$watch(getOptions, function(newValue, oldValue) {\r\n          if(newValue !== oldValue) {\r\n            scope.destroyCalendar();\r\n            scope.initCalendar();\r\n          } else if((newValue && angular.isUndefined(calendar))) {\r\n            scope.initCalendar();\r\n          }\r\n        });\r\n      }\r\n    };\r\n}]);\r\n","'use strict';\n\n/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Common.Directives').directive('selectOptionTooltip', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\tconsole.log(\"CUSTOM SELECT TOOLTIP LOADED\");\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.addCustomAttr = function (attr, element, data, fnDisableIfTrue)\n\t\t\t{\n\t\t\t\t$(\"option\", element).each(function (i, e)\n\t\t\t\t{\n\t\t\t\t\tvar locals = {};\n\t\t\t\t\tlocals[attr] = data[i];\n\t\t\t\t\t$(e).attr('title', fnDisableIfTrue($scope, locals));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar expElements = attribute['selectOptionTooltip'].match(/(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)/);\n\t\t\tvar attrToWatch = expElements[3];\n\t\t\tvar fnDisableIfTrue = $parse(expElements[1]);\n\n\t\t\t$scope.$watchCollection(attrToWatch, function (newValue)\n\t\t\t{\n\t\t\t\tif (newValue)\n\t\t\t\t\t$scope.addCustomAttr(expElements[2], element, newValue, fnDisableIfTrue);\n\t\t\t});\n\t\t};\n\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\trequire: 'ngModel',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function(e) {\n\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.options = '=caOptions';\n\tscope.include_empty_option = '@caEmptyOption';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t};\n\n  return {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.rows = '@caRows';\n\tscope.max_characters = '@caMaxCharacters';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.model)\n\t\t{\n\t\t\t$scope.model = '';\n\t\t}\n\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t{\n\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t}\n\t\t});\n\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplayFieldErrors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.displayFieldErrors) ||\n\t\t\t$scope.displayFieldErrors !== false)\n\t\t{\n\t\t\t$scope.displayFieldErrors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.displayFieldErrors &&\n\t\t\t\t$scope.errors.displayFieldErrors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = true;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tconsole.log(\"Layout.BodyController updating showPatientList\", value);\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Layout').controller('Layout.NavBarController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$q',\n\t'$timeout',\n\t'$location',\n\t'$state',\n\t'$uibModal',\n\t'securityService',\n\t'personaService',\n\t'billingService',\n\t'inboxService',\n\t'messageService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$q,\n\t\t$timeout,\n\t\t$location,\n\t\t$state,\n\t\t$uibModal,\n\t\tsecurityService,\n\t\tpersonaService,\n\t\tbillingService,\n\t\tinboxService,\n\t\tmessageService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.unAckLabDocTotal = 0;\n\t\t\tcontroller.unreadMessageTotal = 0;\n\t\t\tcontroller.demographicSearch = null;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'w'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.searchRights = results.content[0];\n\t\t\t\t\t\tcontroller.newDemographicRights = results.content[1];\n\t\t\t\t\t\tcontroller.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.getUnAckLabDocCount();\n\t\t\t\t\tcontroller.getUnreadMessageCount();\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tcontroller.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tcontroller.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tcontroller.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tcontroller.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tcontroller.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tcontroller.demographicSearch = null;\n\t\t};\n\n\t\tcontroller.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t{\n\t\t\t\tterm: search\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'search'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'record.details'\n\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tcontroller.transition = function transition(item)\n\t\t{\n\t\t\tconsole.log('transition', item);\n\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Admin\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../administration/\";\n\t\t\t\t\twname = \"admin\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\t\t\t\tconsole.log(item);\n\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openMessenger = function(item)\n\t\t{\n\t\t\tif (controller.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\t\t\t\t\tconsole.log($location.path());\n\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\n\t\t\t\t\tconsole.log($location.path());\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn ($state.current.name === tab.state);\n\t\t};\n\n\t\tcontroller.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\n\t\t\t\tvar labelsToShow = ['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tcontroller.smallNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Dashboard'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Patient').controller('Patient.NewPatientController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'demographicService',\n\t'securityService',\n\t'programService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tprogramService,\n\t\tstaticDataService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.demographic = {};\n\n\t\tcontroller.submitDisabled = false;\n\n\t\t//get access right for creating new patient\n\t\tsecurityService.hasRight(\"_demographic\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.hasRight = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.programs = results;\n\t\t\t\tif (controller.programs.length == 1)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographic.admissionProgramId = controller.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get genders to be selected\n\t\tcontroller.genders = staticDataService.getGenders();\n\n\t\tcontroller.save = function save(ngModelContoller)\n\t\t{\n\t\t\tconsole.log(controller.demographic.lastName);\n\t\t\tconsole.log(controller.demographic.firstName);\n\t\t\tconsole.log(controller.demographic.dobYear);\n\t\t\tconsole.log(controller.demographic.dobMonth);\n\t\t\tconsole.log(controller.demographic.dobDay);\n\t\t\tconsole.log(controller.demographic.sex);\n\t\t\tconsole.log(controller.demographic);\n\t\t\tconsole.log(ngModelContoller.$valid);\n\t\t\tconsole.log($scope);\n\n\t\t\tcontroller.submitDisabled = true;\n\n\t\t\tif (ngModelContoller.$valid)\n\t\t\t{\n\t\t\t\tconsole.log(\"Saving...\");\n\n\t\t\t\tif (!controller.isCorrectDate(controller.demographic.dobYear,\n\t\t\t\t\t\tcontroller.demographic.dobMonth, controller.demographic.dobDay))\n\t\t\t\t{\n\t\t\t\t\talert(\"Incorrect Date of Birth!\");\n\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.demographic.dateOfBirth =\n\t\t\t\t\tcontroller.demographic.dobYear + '-' +\n\t\t\t\t\tcontroller.demographic.dobMonth + \"-\" +\n\t\t\t\t\tcontroller.demographic.dobDay;\n\n\t\t\t\tcontroller.demographic.patientStatusDate = new Date();\n\t\t\t\tcontroller.demographic.dateJoined = new Date();\n\t\t\t\tcontroller.demoRetVal = {};\n\n\t\t\t\tdemographicService.saveDemographic(controller.demographic).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tcontroller.demoRetVal = results;\n\t\t\t\t\t\t$uibModalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"ERR!!\");\n\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.ok = function ok()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.selected.item);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.capName = function capName()\n\t\t{\n\t\t\tif (controller.demographic.lastName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.lastName = controller.demographic.lastName.toUpperCase();\n\t\t\t}\n\n\t\t\tif (controller.demographic.firstName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.firstName = controller.demographic.firstName.toUpperCase();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isCorrectDate = function isCorrectDate(year, month, day)\n\t\t{\n\t\t\tvar d = new Date(year, month - 1, day);\n\n\t\t\tif (d == \"Invalid Date\") return false;\n\t\t\tif (d.getFullYear() != year) return false;\n\t\t\tif (d.getMonth() != month - 1) return false;\n\t\t\tif (d.getDate() != day) return false;\n\n\t\t\treturn true;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        console.log('TABLE PARAMS', NgTableParams);\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n                \tconsole.log(\"k2a feed response\", response);\n\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateMessages();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n            }\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n    }\n]);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('PatientList', ['Common', 'Common.Services']);","angular.module(\"PatientList\").service(\"patientListState\", [\n\t// Store variables here that must be accessible across controllers in patientlist\n\tfunction()\n\t{\n\t\tvar service = this;\n\n\t\tservice.tabItems = [];\n\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('PatientList').controller('PatientList.PatientListController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'angularUtil',\n\t'Navigation',\n\t'personaService',\n\t'providerService',\n\t'patientListState',\n\t'scheduleService',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\tangularUtil,\n\t\tNavigation,\n\t\tpersonaService,\n\t\tproviderService,\n\t\tpatientListState,\n\t\tscheduleService,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.sidebar = Navigation;\n\t\tcontroller.showFilter = true;\n\t\tcontroller.patientListConfig = {};\n\n\n\t\tcontroller.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t};\n\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hidePatientList();\n\t\t\t\t\t\tconsole.log('hiding patientlist');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"params\", params);\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t//for filter box\n\t\tcontroller.query = '';\n\n\n\t\tcontroller.isActive = function isActive(temp)\n\t\t{\n\t\t\tif (controller.currenttab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currenttab.id;\n\t\t};\n\n\t\tcontroller.isMoreActive = function isMoreActive(temp)\n\t\t{\n\t\t\tif (controller.currentmoretab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currentmoretab.id;\n\t\t};\n\n\t\tcontroller.showPatientList = function showPatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', true);\n\t\t};\n\n\t\tcontroller.hidePatientList = function hidePatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', false);\n\t\t};\n\n\t\tcontroller.changeMoreTab = function changeMoreTab(moreTabItemsIndex, filter)\n\t\t{\n\t\t\tvar beforeChangeTab = controller.currentmoretab;\n\t\t\tcontroller.currentmoretab = controller.moreTabItems[moreTabItemsIndex];\n\n\t\t\tcontroller.showFilter = true;\n\t\t\tcontroller.currenttab = null;\n\t\t\tcontroller.refresh(filter);\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(tabItemIndex, filter)\n\t\t{\n\t\t\tif(controller.currenttab !== patientListState.tabItems[tabItemIndex])\n\t\t\t{\n\t\t\t\tcontroller.currenttab = patientListState.tabItems[tabItemIndex];\n\t\t\t\tcontroller.showFilter = true;\n\t\t\t\tcontroller.currentmoretab = null;\n\t\t\t\tcontroller.refresh(filter);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getMoreTabClass = function getMoreTabClass(id)\n\t\t{\n\t\t\tif (controller.currentmoretab != null && id == controller.currentmoretab.id)\n\t\t\t{\n\t\t\t\treturn \"more-tab-highlight\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\tcontroller.currentPage = 0;\n\t\tcontroller.pageSize = 8;\n\t\tcontroller.patients = null;\n\n\t\tcontroller.numberOfPages = function numberOfPages()\n\t\t{\n\t\t\tif (controller.nPages == null || controller.nPages == 0)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn controller.nPages;\n\t\t};\n\n\n\t\t$scope.$on('updatePatientListPagination', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientListPagination=' + data);\n\t\t\tcontroller.nPages = Math.ceil(data / controller.pageSize);\n\t\t\tconsole.log('nPages=' + controller.nPages);\n\t\t});\n\n\n\t\tcontroller.changePage = function changePage(pageNum)\n\t\t{\n\t\t\tcontroller.currentPage = pageNum;\n\t\t\t//broadcast the change page\n\t\t\t$scope.$broadcast('updatePatientList',\n\t\t\t{\n\t\t\t\tcurrentPage: controller.currentPage,\n\t\t\t\tpageSize: controller.pageSize\n\t\t\t});\n\t\t};\n\n\t\t$scope.$on('togglePatientListFilter', function(event, data)\n\t\t{\n\t\t\tconsole.log(\"received a togglePatientListFilter event:\" + data);\n\t\t\tcontroller.showFilter = data;\n\t\t});\n\n\n\t\tcontroller.process = function process(tab, filter)\n\t\t{\n\t\t\ttab.serviceMethod().then(\n\t\t\t\tfunction success(resultList)\n\t\t\t\t{\n\t\t\t\t\tcontroller.patients = resultList;\n\n\t\t\t\t\tcontroller.nPages = 1;\n\t\t\t\t\tif (controller.patients != null && controller.patients.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.nPages = Math.ceil(controller.patients.length / controller.pageSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.template = tab.template;\n\t\t\t\t\tNavigation.load(controller.template);\n\t\t\t\t\tcontroller.changePage(0);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\talert('error loading data for patient list:' + error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.refresh = function refresh(filter)\n\t\t{\n\n\t\t\tif (controller.currenttab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currenttab, filter);\n\t\t\t}\n\t\t\tif (controller.currentmoretab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currentmoretab, filter);\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function()\n\t\t{\n\t\t\tcontroller.refresh();\n\t\t});\n\n\t\tproviderService.getRecentPatientList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tpersonaService.getPatientListConfig().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.getTabItems = function getTabItems()\n\t\t{\n\t\t\treturn patientListState.tabItems;\n\t\t};\n\n\t\tcontroller.manageConfiguration = function manageConfiguration()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientlist/patientListConfiguration.jsp',\n\t\t\t\tcontroller: 'PatientList.PatientListConfigController as patientListConfigCtrl',\n\t\t\t\tbackdrop: false,\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconfig: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.patientListConfig;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tpersonaService.setPatientListConfig(results).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t\t\t\t\t$scope.$emit('updatePatientListPagination', controller.patients.length);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tpatientListState.tabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Appts.\",\n\t\t\t\ttemplate: \"src/patientlist/patientList1.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\t// this gets overwritten by the appointmentListController, when it sets specific dates\n\t\t\t\t\treturn scheduleService.getAppointments('today').then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Recent\",\n\t\t\t\ttemplate: \"src/patientlist/recent.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getRecentPatientList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.moreTabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Patient Sets\",\n\t\t\t\ttemplate: \"src/patientlist/demographicSets.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn reportingService.getDemographicSetList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.content;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Caseload\",\n\t\t\t\ttemplate: \"src/patientlist/program.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.changeTab(0);\n\t}\n]);\n","angular.module('PatientList').controller('PatientList.PatientListAppointmentListController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$filter',\n\t'$uibModal',\n\t'$state',\n\t'Navigation',\n\t'scheduleService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$state,\n\t\tNavigation,\n\t\tscheduleService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.statusCodeMap = new Map();\n\t\tcontroller.statuses = null;\n\n\t\tcontroller.dateOptions = {\n\t\t\tshowWeeks: false\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.selectedDate = null;\n\n\t\t$scope.$watch('selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\tscheduleService.selectedDate = newValue;\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Load Remote Data\n\t\t//=========================================================================/\n\n\t\tscheduleService.getStatuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.statuses = results.content;\n\t\t\t\tcontroller.statusCodeMap = new Map(controller.statuses.map(i => [i.status, i]));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\tcontroller.getAppointmentStatusDescriptionByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet description = \"\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tdescription = status.description;\n\t\t\t}\n\t\t\treturn description;\n\t\t};\n\n\t\tcontroller.getAppointmentStatusColourByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet colour = \"#000000\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tcolour = status.color;\n\t\t\t}\n\t\t\treturn colour;\n\t\t};\n\n\t\tcontroller.today = function today()\n\t\t{\n\t\t\tcontroller.appointmentDate = new Date();\n\t\t};\n\n\t\tcontroller.today();\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.appointmentDate = null;\n\t\t};\n\n\t\tcontroller.open = function open($event)\n\t\t{\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t\tcontroller.opened = true;\n\t\t};\n\n\t\tDate.prototype.AddDays = function AddDays(noOfDays)\n\t\t{\n\t\t\tthis.setTime(this.getTime() + (noOfDays * (1000 * 60 * 60 * 24)));\n\t\t\treturn this;\n\t\t};\n\n\t\tcontroller.switchDay = function switchDay(n)\n\t\t{\n\t\t\tvar dateNew = controller.appointmentDate;\n\t\t\tdateNew.AddDays(n);\n\n\t\t\tcontroller.appointmentDate = dateNew;\n\n\t\t\tvar formattedDate = $filter('date')(dateNew, 'yyyy-MM-dd');\n\n\t\t\tcontroller.changeApptList(formattedDate);\n\n\n\t\t};\n\n\t\tcontroller.changeApptDate = function changeApptDate()\n\t\t{\n\t\t\tif (controller.appointmentDate == undefined)\n\t\t\t{\n\t\t\t\tcontroller.today();\n\t\t\t}\n\t\t\tvar formattedDate = $filter('date')(controller.appointmentDate, 'yyyy-MM-dd');\n\t\t\tcontroller.changeApptList(formattedDate);\n\t\t};\n\n\t\tcontroller.changeApptList = function changeApptList(day)\n\t\t{\n\t\t\tcontroller.currenttab = patientListState.tabItems[0];\n\t\t\tcontroller.currenttab.serviceMethod = function ()\n\t\t\t{\n\t\t\t\treturn scheduleService.getAppointments(day).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\t\t\tcontroller.showFilter = true;\n\t\t\t$scope.$emit('juno:patientListRefresh');\n\t\t};\n\n\t\tcontroller.addNewAppointment = function addNewAppointment()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentAdd.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentAddController as appointmentAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tapptDate: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.appointmentDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.viewAppointment = function viewAppointment(apptNo)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentView.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentViewController as appointmentViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tappointment: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getAppointment(apptNo);\n\t\t\t\t\t},\n\t\t\t\t\tstatusList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getStatuses();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isScheduleActive = function isScheduleActive()\n\t\t{\n\t\t\treturn $state.current.name == 'schedule';\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListConfigController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'config',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tconfig)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.patientListConfig = config;\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\tcontroller.saveConfiguration = function saveConfiguration()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.patientListConfig);\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListDemographicSetController', [\n\t'$scope',\n\t'$http',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\treportingService.getDemographicSetList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.sets = results.content;\n\t\t\t},\n\t\t\tfunction error(error)\n\t\t\t{\n\t\t\t\talert('Failed to get sets lists.');\n\t\t\t});\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListProgramController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\t$scope.$on('updatePatientList', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientList=' + JSON.stringify(data));\n\t\t\tcontroller.updateData(data.currentPage, data.pageSize);\n\t\t});\n\n\n\t\t//the currentPage is 0 based\n\t\tcontroller.updateData = function updateData(currentPage, pageSize)\n\t\t{\n\t\t\tvar startIndex = currentPage * pageSize;\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/program/patientList?startIndex=' + startIndex + '&numToReturn=' + pageSize,\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders:\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.admissions = results.data.content;\n\t\t\t\t\t$scope.$emit('updatePatientListPagination', results.data.total);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//initialize..\n\t\tcontroller.updateData(0, controller.pageSize);\n\t\t$scope.$emit('togglePatientListFilter', false);\n\n\t}\n]);","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'scheduleService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\t/*\n\t\tcontroller.recordtabs2 = [ \n\t\t {id : 0,name : 'Master',url : 'partials/master.html'},\n\t\t {id : 1,name : 'Summary',url : 'partials/summary.html'},\n\t\t {id : 2,name : 'Rx',url : 'partials/rx.jsp'},\n\t\t {id : 3,name : 'Msg',url : 'partials/summary.html'},\n\t\t {id : 4,name : 'Trackers',url : 'partials/tracker.jsp'},\n\t\t {id : 5,name : 'Consults',url : 'partials/summary.html'},\n\t\t {id : 6,name : 'Forms',url : 'partials/formview.html'},\n\t\t {id : 7,name : 'Prevs/Measurements',url : 'partials/summary.html'},\n\t\t {id : 8,name : 'Ticklers',url : 'partials/summary.html'},\n\t\t {id : 9,name : 'MyOscar',url : 'partials/blank.jsp'},\n\t\t {id : 10,name : 'Allergies',url : 'partials/summary.html'},\n\t\t {id : 11,name : 'CPP',url : 'partials/cpp.html'},\n\t\t {id : 12,name : 'Labs/Docs',url : 'partials/labview.html'},\n\t\t {id : 13,name : 'Billing',url : 'partials/billing.jsp'}\t\n\t\t*/\n\t\tcontroller.recordtabs2 = [];\n\t\t/*\n\t\t                 \t {id : 0,displayName : 'Details'  ,path : 'record.details'},\n\t\t                 \t {id : 1,displayName : 'Summary'  ,path : 'record.summary'},\n\t\t                 \t {id : 2,displayName : 'Forms'    ,path : 'record.forms'},\n\t\t                 \t {id : 3,displayName : 'Labs/Docs',path : 'partials/eform.jsp'},\n\t\t                 \t {id : 4,displayName : 'Rx'       ,path : 'partials/eform.jsp'}];\n\t\t*/\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//var transitionP = $state.transitionTo(controller.recordtabs2[0].path,$stateParams,{location:'replace',notify:true});\n\t\t//console.log(\"transition \",transitionP);\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t\t//console.log(controller.recordtabs2[temp].path);\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn ($state.current.name === tab.state);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tconsole.log(\"whats the val \", (newVal != oldVal));\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$rootScope.$emit('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\t// if (controller.page.encounterNote.issueDescriptions == null)\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions = controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\t// else\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions += \",\" + controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$rootScope.$emit('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tscheduleService.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\n\t\tconsole.log('RecordCtrlEnd', $state);\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t// controller.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t// controller.$storage.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"in summary Ctrl \", $stateParams);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNotes = [];\n\n\t\tcontroller.page.notes = {};\n\t\tcontroller.index = 0;\n\t\tcontroller.page.notes = {};\n\t\tcontroller.page.notes.notelist = [];\n\t\tcontroller.busy = false;\n\t\tcontroller.page.noteFilter = {};\n\t\tcontroller.page.currentFilter = 'none';\n\t\tcontroller.page.onlyNotes = false; // Filter for only showing encounter notes\n\t\tcontroller.page.onlyMine = false; // Filter for only showing notes the current user has created/edited\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(note)\n\t\t{\n\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAssessments = function openAssessments()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms', {formListId: 1});\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tconsole.log(controller.busy);\n\t\t\tif (controller.busy) return;\n\n\t\t\tcontroller.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, controller.index, 20, controller.page.noteFilter).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('whats the data', angular.isUndefined(results.notelist), results.notelist);\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.page.notes = data;\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"ok its in an array\", controller.busy);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.addMoreItems();\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\t// Call the findGroupNote function and search for the given note, if found, open the groupNote editor\n\t\tcontroller.editGroupNote = function editGroupNote(note)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\n\t\t\tif (obj !== null)\n\t\t\t{\n\t\t\t\tobj.module.editorNames = note.editorNames;\n\t\t\t\tcontroller.gotoState(obj.note, obj.module, obj.note.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.page.currentEditNote = {};\n\n\t\tcontroller.isNoteBeingEdited = function isNoteBeingEdited(note)\n\t\t{\n\n\t\t\tif (note.uuid === controller.page.currentEditNote.uuid && note.uuid !== null)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$rootScope.$on('currentlyEditingNote', function(event, data)\n\t\t{\n\t\t\tcontroller.page.currentEditNote = data;\n\t\t});\n\n\t\t// TODO\n\t\t$rootScope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tcontroller.page.currentEditNote = {};\n\t\t});\n\n\t\t$rootScope.$on('noteSaved', function(event, data)\n\t\t{\n\t\t\tconsole.log('new data coming in', data);\n\t\t\tvar noteFound = false;\n\t\t\tfor (var notecount = 0; notecount < controller.page.notes.notelist.length; notecount++)\n\t\t\t{\n\t\t\t\tif (data.uuid == controller.page.notes.notelist[notecount].uuid)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('uuid ' + data.uuid + ' notecount ' + notecount, data, controller.page.notes.notelist[notecount]);\n\t\t\t\t\tcontroller.page.notes.notelist[notecount] = data;\n\t\t\t\t\tnoteFound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (noteFound == false)\n\t\t\t{\n\t\t\t\tcontroller.page.notes.notelist.unshift(data);\n\t\t\t}\n\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t});\n\n\t\t// Check if note regular note, if not, we must either display the group note edit window or have no edit option\n\t\tcontroller.isRegularNote = function isRegularNote(note)\n\t\t{\n\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.setColor = function setColor(note)\n\t\t{\n\t\t\tif (note.eformData)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#DFF0D8',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.document)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#617CB2',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.rxAnnotation)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#D3D3D3',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.encounterForm)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#BCAD75',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.invoice)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '##FF7272',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.ticklerNote)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#FFA96F',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.cpp)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#9B8166',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showNoteHeader = function showNoteHeader(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.showNote = function showNote(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(controller.page.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (user.providerNo !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tcontroller.getNoteHeader = function firstLine(noteObj)\n\t\t{\n\t\t\treturn  noteObj.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tcontroller.toggleList = function toggleList(mod)\n\t\t{\n\n\t\t\t// If all the items are displayed, reset displaySize to 5 (min), else, show all the items\n\t\t\tif (mod.displaySize >= mod.summaryItem.length)\n\t\t\t{\n\t\t\t\tmod.displaySize = 5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmod.displaySize = mod.summaryItem.length;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showMoreItems = function showMoreItems(mod)\n\t\t{\n\n\t\t\tif (!angular.isDefined(mod.summaryItem))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mod.summaryItem.length == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Return true if a given section is expanded, otherwise return false\n\t\tcontroller.isSectionExpanded = function isSectionExpanded(mod)\n\t\t{\n\t\t\tif (mod.displaySize > 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Return true if a given section is empty, otherwise return false\n\t\tcontroller.isSectionEmpty = function isSectionEmpty(mod)\n\t\t{\n\t\t\tif (mod.summaryItem.length <= 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tcontroller.isUnsignedEncounterNote = function isUnsignedEncounterNote(note)\n\t\t{\n\t\t\treturn (!note.isSigned && !note.cpp && !note.document && !note.ticklerNote && !note.eformData);\n\t\t};\n\n\t\t// controller.showMoreItemsSymbol = function(mod)\n\t\t// {\n\t\t// \tif (!angular.isDefined(mod.summaryItem))\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif ((mod.displaySize < mod.summaryItem.length) && mod.displaySize == initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if ((mod.displaySize == mod.summaryItem.length) && mod.displaySize != initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if (mod.summaryItem.length <= initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down glyphicon-chevron-down-disabled pull-right\";\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif (controller.isSectionExpanded(mod))\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\n\t\t// \treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\n\t\t// };\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"left\", results);\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"right\", results);\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tif (editingNoteId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t\t\titvSet = null;\n\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\teditingNoteId = null;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\n\t\tcontroller.gotoState = function gotoState(item, mod, itemId)\n\t\t{\n\t\t\tconsole.log('ITEM: ', item);\n\t\t\tconsole.log('MOD: ', mod);\n\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal(mod, action)\n\t\t{\n\t\t\tvar size = 'lg';\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// Toggle whether the note is selected for printing\n\t\tcontroller.toggleIsSelectedForPrint = function toggleIsSelectedForPrint(note)\n\t\t{\n\t\t\tnote.isSelected = !note.isSelected;\n\t\t};\n\n\t}\n]);\n\n\nvar itvSet = null;\nvar itvCheck = null;\nvar editingNoteId = null;","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$filter',\n\t'mod',\n\t'action',\n\t'$stateParams',\n\t'summaryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\tmod,\n\t\taction,\n\t\t$stateParams,\n\t\tsummaryService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.pageOptions = {};\n\t\tcontroller.pageOptions.printType = {};\n\t\tcontroller.pageOptions.dates = {};\n\t\tcontroller.page = {};\n\t\tcontroller.page.selectedWarning = false;\n\n\t\t/*\n\t\t *If mod length > 0 than the user has selected a note. = Default to Note\n\t\t *Other wise default to All\n\t\t */\n\t\tvar atleastOneSelected = false;\n\t\tfor (var i = 0; i < mod.length; i++)\n\t\t{\n\t\t\tif (mod[i].isSelected)\n\t\t\t{\n\t\t\t\tatleastOneSelected = true;\n\t\t\t\ti = mod.length;\n\t\t\t}\n\t\t}\n\n\t\tif (atleastOneSelected)\n\t\t{\n\t\t\tconsole.log(\"mod len \", mod.length);\n\t\t\tcontroller.pageOptions.printType = 'selected';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"printType = all\");\n\t\t\tcontroller.pageOptions.printType = 'all';\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = 'dates';\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType == 'all')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'selected')\n\t\t\t{\n\t\t\t\t//get array\n\t\t\t\tvar selectedList = [];\n\t\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueryString = queryString + '&notes2print=' + selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'dates')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tvar selectedList = [];\n\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t{\n\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t{\n\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tcontroller.pageOptions.selectedList = selectedList;\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\tcontroller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code; //'ongoingconcerns';\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: true,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\n\t\t\tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t\teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\n\t\t\titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t\titvCheck = $interval(function()\n\t\t\t{\n\t\t\t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\n\t\t\t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}, 10000); //check for new edit every 10 sec\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\titvSet = null;\n\t\t\t\titvCheck = null;\n\t\t\t\teditingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"form ctrl \", $stateParams, $state);\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = $stateParams.formListId;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length == 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Library'\n\t\t}]; //Need to get this from the server.\n\n\t\tcontroller.page.formlists.forEach(function(item, index)\n\t\t{\n\t\t\tconsole.log('What is the item ', item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, item.label).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentFormList[index] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t});\n\n\n\t\tcontroller.page.encounterFormlist = [];\n\t\tcontroller.page.formGroups = [];\n\t\tcontroller.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tformService.getFormGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups = results;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups.push(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < controller.page.formGroups.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!(controller.page.formGroups[i].summaryItem instanceof Array))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.formGroups[i].summaryItem = [controller.page.formGroups[i].summaryItem];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getFormGroups();\n\t\tcontroller.page.formOptions = [];\n\t\tcontroller.favouriteGroup = null;\n\n\t\tgetFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tformService.getFavouriteFormGroup().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.favouriteGroup = results;\n\n\t\t\t\t\tif (!(controller.favouriteGroup.summaryItem instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.favouriteGroup.summaryItem = [controller.favouriteGroup.summaryItem];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tgetFavouriteFormGroup();\n\n\t\tformService.getFormOptions(controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(\"data\", results);\n\n\t\t\t\tif (results.items instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions = results.items;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions.push(results.items);\n\t\t\t\t}\n\n\n\t\t\t\tconsole.log(\"form options\", controller.page.formOptions);\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[0] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getSelectedEncounterForms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[1] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item, view)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar queryName = $location.search().name;\n\t\t\tvar params = {\n\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\ttype: item.type === 'eform' ? 'eform' : 'form',\n\t\t\t\tid: item.id || item.formId\n\t\t\t};\n\n\t\t\t// The items sent from the server are such that\n\t\t\t// 1. Existing eforms have a formId and an id\n\t\t\t// 2. Existing forms have a formId only\n\t\t\t// 3. Library/available eforms have a formId only\n\t\t\t// 4. Library/available forms have neither\n\t\t\tif ((item.type === 'eform' && item.id) || (item.type === 'form' && item.formId))\n\t\t\t{\n\t\t\t\tparams.name = item.type === 'form' ? item.name || queryName : '';\n\t\t\t\t$state.go('record.forms.view', params);\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\t$state.go('record.forms.add', params);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.go('record.forms');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* 1=frame\n\t\t\t* 2=newwindow\n\t\t\t*/\n\t\t\tif (view === undefined)\n\t\t\t{\n\t\t\t\tview = 1;\n\t\t\t}\n\n\t\t\tvar url = '';\n\t\t\tif (item.type === 'eform')\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmshowform_data.jsp?fdid=' + item.id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmformadd_data.jsp?fid=' + item.formId + '&demographic_no=' + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //form\n\t\t\t\tif (angular.isDefined(item.formId))\n\t\t\t\t{\n\t\t\t\t\tvar name = item.name || queryName;\n\t\t\t\t\turl = '../form/forwardshortcutname.jsp?formname=' + name + '&demographic_no=' + $stateParams.demographicNo + '&formId=' + item.formId;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = item.formValue + $stateParams.demographicNo + \"&formId=0&provNo=\" + user.providerNo + \"&parentAjaxId=forms\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view === 1)\n\t\t\t{\n\t\t\t\t$(\"html, body\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, \"slow\");\n\t\t\t}\n\t\t\telse if (view === 2)\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.page.currentForm = item;\n\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t{});\n\t\t\tcontroller.pymParent = pymParent;\n\n\t\t\t/*if(item.type != 'eform' && view==1){\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = \"1600px\"; //temp hack for the forms\n\t\t\t}*/\n\n\t\t\t//resize iframe for both form and eforms\n\t\t\t$('iframe').load(function()\n\t\t\t{\n\t\t\t\tvar maxheight = Math.max(document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.scrollHeight, document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.offsetHeight) + 30 + 'px';\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = maxheight;\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.isEmpty = function isEmpty(obj)\n\t\t{\n\t\t\tfor (var i in obj)\n\t\t\t\tif (obj.hasOwnProperty(i)) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.currentEformGroup = {};\n\n\t\tcontroller.setCurrentEFormGroup = function setCurrentEFormGroup(mod)\n\t\t{\n\t\t\tcontroller.currentEformGroup = mod;\n\t\t};\n\n\t\tcontroller.openFormFromGroups = function openFormFromGroups(item)\n\t\t{\n\t\t\tconsole.log(\"group item\", item);\n\t\t\titem.formId = item.id;\n\t\t\tdelete item.id;\n\t\t\tcontroller.viewFormState(item, 2);\n\t\t};\n\n\t\tcontroller.formOption = function formOption(opt)\n\t\t{\n\t\t\tvar atleastOneItemSelected = false;\n\t\t\tif (opt.extra == \"send2PHR\")\n\t\t\t{\n\t\t\t\tvar docIds = \"\";\n\t\t\t\tfor (var i = 0; i < controller.page.currentFormList[controller.page.currentlistId].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.page.currentFormList[controller.page.currentlistId][i].isChecked)\n\t\t\t\t\t{\n\t\t\t\t\t\tdocIds = docIds + '&sendToPhr=' + controller.page.currentFormList[controller.page.currentlistId][i].id;\n\t\t\t\t\t\tatleastOneItemSelected = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (atleastOneItemSelected)\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t\tvar url = '../eform/efmpatientformlistSendPhrAction.jsp?clientId=' + controller.demographicNo + docIds;\n\t\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atleastOneItemSelected)\n\t\t\t{\n\t\t\t\talert(\"No Documents Selected\");\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to make group setting active\n\t\t */\n\t\tcontroller.getGroupListClass = function getGroupListClass(grp)\n\t\t{\n\t\t\tif (grp === controller.currentEformGroup)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type === controller.page.currentForm.type && item.id === controller.page.currentForm.id && !Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type === controller.page.currentForm.type && item.formId === controller.page.currentForm.formId && Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t}\n\n\t\tvar currentState = $state.current.name;\n\t\tif (currentState === 'record.forms.view' || currentState === 'record.forms.add')\n\t\t{\n\t\t\tvar item = {};\n\t\t\titem.type = $state.params.type;\n\n\t\t\t// set item properties in a way that matches the content that the server returns\n\t\t\tif (currentState === 'record.forms.view' && item.type === 'eform')\n\t\t\t{\n\t\t\t\titem.id = $state.params.id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\titem.formId = $state.params.id;\n\t\t\t}\n\n\t\t\tcontroller.viewFormState(item);\n\t\t\tcontroller.changeTo(currentState === 'record.forms.view' ? 0 : 1);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.keyCode == 38)\n\t\t\t{ //up\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.keyCode == 40)\n\t\t\t{ //Down\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'demographicService',\n\t'demographicsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.setSwipeReady(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// controller.page.demo = demo;\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tcontroller.setSwipeReady();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\n\t\t// //calculate age\n\t\t// var now = new Date();\n\t\t// controller.calculateAge = function calculateAge()\n\t\t// {\n\t\t// \tcontroller.page.demo.age = now.getFullYear() - controller.page.demo.dobYear;\n\t\t// \tif (now.getMonth() < controller.page.demo.dobMonth - 1) controller.page.demo.age--;\n\t\t// \telse if (now.getMonth() == controller.page.demo.dobMonth - 1 && now.getDate() < controller.page.demo.dobDay) controller.page.demo.age--;\n\t\t// };\n\t\t//\n\t\t// controller.calculateAge(); //done on page load\n\n\t\t//set ready for swipe card\n\t\tcontroller.setSwipeReady = function setSwipeReady(status)\n\t\t{\n\t\t\tif (status == \"off\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Click for Card Swipe\";\n\t\t\t}\n\t\t\telse if (status == \"done\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-primary\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-success\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Ready for Card Swipe\";\n\t\t\t\tcontroller.page.swipecard = \"\";\n\t\t\t}\n\t\t};\n\n\t\t//Health card verification\n\t\tcontroller.healthCardHandler = function healthCardHandler(keycode)\n\t\t{\n\t\t\tif (keycode == 13)\n\t\t\t{ //carriage-return\n\t\t\t\tvar swipeCardData = controller.page.swipecard;\n\t\t\t\tcontroller.page.swipecard = \"\";\n\n\t\t\t\tif (swipeCardData.substring(0, 3) == \"%E?\")\n\t\t\t\t{ //swipe card error\n\t\t\t\t\talert(\"Error reading card\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (swipeCardData.substring(2, 8) == \"610054\")\n\t\t\t\t\t{ //Ontario\n\t\t\t\t\t\thcParts[\"issuer\"] = \"ON\";\n\t\t\t\t\t\thcParts[\"hin\"] = swipeCardData.substring(8, 18);\n\n\t\t\t\t\t\tvar namePos = swipeCardData.indexOf(\"^\") + 1;\n\t\t\t\t\t\tvar endNamePos = swipeCardData.indexOf(\"^\", namePos);\n\t\t\t\t\t\thcParts[\"fullName\"] = swipeCardData.substring(namePos, endNamePos);\n\t\t\t\t\t\thcParts[\"lastName\"] = hcParts[\"fullName\"].split(\"/\")[0];\n\t\t\t\t\t\thcParts[\"firstName\"] = hcParts[\"fullName\"].split(\"/\")[1].trim();\n\n\t\t\t\t\t\thcParts[\"sex\"] = swipeCardData.substring(endNamePos + 8, endNamePos + 9);\n\t\t\t\t\t\thcParts[\"dob\"] = swipeCardData.substring(endNamePos + 9, endNamePos + 17);\n\t\t\t\t\t\thcParts[\"hinExp\"] = swipeCardData.substring(endNamePos + 1, endNamePos + 5) + hcParts[\"dob\"].substring(6, 8);\n\t\t\t\t\t\thcParts[\"hinVer\"] = swipeCardData.substring(endNamePos + 17, endNamePos + 19);\n\t\t\t\t\t\thcParts[\"firstNameShort\"] = swipeCardData.substring(endNamePos + 19, endNamePos + 24);\n\t\t\t\t\t\thcParts[\"issueDate\"] = swipeCardData.substring(endNamePos + 24, endNamePos + 30);\n\t\t\t\t\t\thcParts[\"lang\"] = swipeCardData.substring(endNamePos + 30, endNamePos + 32);\n\n\t\t\t\t\t\tif (!isNumber(hcParts[\"dob\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"dob\"] = null;\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"hinExp\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"issueDate\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"issueDate\"] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.setSwipeReady(\"done\");\n\t\t\t\t\t\tcontroller.healthCardUpdateDemographics();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\talert(\"Not Ontario Health Card\");\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.validateHC(); //Run HCValidation\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.healthCardUpdateDemographics = function healthCardUpdateDemographics()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.hcType != hcParts[\"issuer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcType = hcParts[\"issuer\"];\n\t\t\t\tcontroller.page.hcTypeColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.lastName != hcParts[\"lastName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = hcParts[\"lastName\"];\n\t\t\t\tcontroller.page.lastNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.firstName != hcParts[\"firstName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = hcParts[\"firstName\"];\n\t\t\t\tcontroller.page.firstNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (isNumber(hcParts[\"hin\"]) && controller.page.demo.hin != hcParts[\"hin\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = hcParts[\"hin\"];\n\t\t\t\tcontroller.page.hinColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.ver != hcParts[\"hinVer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = hcParts[\"hinVer\"];\n\t\t\t\tcontroller.page.verColor = colorAttn;\n\t\t\t}\n\t\t\tvar hcSex = hcParts[\"sex\"] == 1 ? \"M\" : (hcParts[\"sex\"] == 2 ? \"F\" : null);\n\t\t\tif (hcSex != null && controller.page.demo.sex != hcSex)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = hcSex;\n\t\t\t\tcontroller.page.sexColor = colorAttn;\n\t\t\t}\n\t\t\tvar dateParts = {};\n\t\t\tif (hcParts[\"dob\"] != null)\n\t\t\t{\n\t\t\t\tdateParts[\"year\"] = hcParts[\"dob\"].substring(0, 4);\n\t\t\t\tdateParts[\"month\"] = hcParts[\"dob\"].substring(4, 6);\n\t\t\t\tdateParts[\"day\"] = hcParts[\"dob\"].substring(6);\n\t\t\t\tif (controller.page.demo.dobYear != dateParts[\"year\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobYear = dateParts[\"year\"];\n\t\t\t\t\tcontroller.page.dobYearColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobMonth != dateParts[\"month\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobMonth = dateParts[\"month\"];\n\t\t\t\t\tcontroller.page.dobMonthColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobDay != dateParts[\"day\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobDay = dateParts[\"day\"];\n\t\t\t\t\tcontroller.page.dobDayColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"issueDate\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"issueDate\"].substring(0, 2) + \"-\" + hcParts[\"issueDate\"].substring(2, 4) + \"-\" + hcParts[\"issueDate\"].substring(4);\n\t\t\t\tif (controller.page.demo.effDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.effDate = swipeDate;\n\t\t\t\t\tcontroller.page.effDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"hinExp\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"hinExp\"].substring(0, 2) + \"-\" + hcParts[\"hinExp\"].substring(2, 4) + \"-\" + hcParts[\"hinExp\"].substring(4);\n\t\t\t\tif (controller.page.demo.hcRenewDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.hcRenewDate = swipeDate;\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tvar hinExpDate = buildDate(\"20\" + hcParts[\"hinExp\"].substring(0, 2), hcParts[\"hinExp\"].substring(2, 4), hcParts[\"hinExp\"].substring(4));\n\t\t\t\tif (hinExpDate != null && now > hinExpDate)\n\t\t\t\t{\n\t\t\t\t\talert(\"This health card has expired!\");\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t}\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t}\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t}\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t}\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t}\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t}\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t}\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t}\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t}\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t}\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t}\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t}\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t}\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t}\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t}\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t}\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t}\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t}\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t}\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t}\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label == \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t}\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t}\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t}\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t}\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func == \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion == \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion == \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func == \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func == \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t}\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A'\n\t\t\t\t\t};\n\n\n\t\t\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n                                        ticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services', 'PatientList']);","\nimport {AppointmentApi} from '../../generated/api/AppointmentApi';\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\n\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\t'$stateParams',\n\t'$q',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$uibModal',\n\t'$state',\n\t'focusService',\n\t'scheduleService',\n\t'securityService',\n\t'uiCalendarConfig',\n\n\tfunction(\n\t\t$scope,\n\t\t$stateParams,\n\t\t$q,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$uibModal,\n\t\t$state,\n\t\tfocusService,\n\t\tscheduleService,\n\t\tsecurityService,\n\t\tuiCalendarConfig\n\t)\n\t{\n\t\t//var controller = this;\n\n\t\t// XXX: put this address somewhere else\n\t\t$scope.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.calendarName = 'cpCalendar';\n\t\t$scope.initialized = false;\n\t\t$scope.calendarLoading = false;\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.uiConfigApplied = {};\n\t\t$scope.eventSources = [];\n\t\t$scope.selectedSchedule = null;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.selectedTimeInterval = null;\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in\n\t\t// this object.\n\t\t$scope.cpCalendarControl = {};\n\n\n\t\t// Parameters from directive controller\n\n\n\t\t$scope.schedules = [];\n\t\t$scope.scheduleOptions = [];\n\t\t$scope.resourceOptions = [];\n\t\t$scope.siteOptions = [];\n\t\t$scope.defaultEventColor = \"#333\";\n\t\t$scope.defaultTimeInterval = '00:15:00';\n\t\t$scope.timeIntervalOptions =\n\t\t\t['00:05:00','00:10:00','00:15:00','00:30:00'];\n\t\t$scope.selectedTimeInterval = $scope.defaultTimeInterval;\n\t\t$scope.defaultAutoRefreshMinutes = 3;\n\t\t$scope.defaultCalendarView = 'agendaWeek';\n\t\t$scope.eventStatuses = {};\n\t\t$scope.rotateStatuses = [];\n\t\t$scope.availabilityTypes = {};\n\t\t$scope.resourceOptionHash = {};\n\t\t$scope.events = [];\n\t\t$scope.scheduleTemplates = {};\n\t\t$scope.sites = {};\n\n\t\t$scope.openingDialog = false;\n\t\t$scope.dialog = null;\n\n\n\t\t// Global State parameters\n\t\t$scope.defaultDate = null;\n\t\t$scope.selectedDate = null;\n\t\t$scope.scheduleViewName = null;\n\t\t$scope.scheduleDefault = null;\n\t\t$scope.scheduleTimeInterval = null;\n\t\t$scope.scheduleAutoRefresh = null;\n\t\t$scope.scheduleAutoRefreshMinutes = null;\n\n\t\t$scope.scheduleService = scheduleService;\n\n\n\t\t$scope.init = function init()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\n\t\t\t// XXX: loadScheduleTemplates seems to not be used\n\n\t\t\t//{\n\t\t\t\t$scope.loadAvailabilityTypes().then(function()\n\t\t\t\t{\n\t\t\t\t\t$scope.loadEventStatuses().then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadScheduleOptions().then(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.loadSiteOptions().then(function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.loadDefaultSelections();\n\n\t\t\t\t\t\t\t\t$scope.loadSelectedSchedules().then(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$scope.setCalendarResources();\n\n\t\t\t\t\t\t\t\t\t$scope.setEventSources();\n\n\t\t\t\t\t\t\t\t\t$scope.initEventsAutoRefresh();\n\n\t\t\t\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t\t\t\t\tconsole.log(\"-- Calendar Initialized ----------------------------\");\n\t\t\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t//});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.calendar = function calendar()\n\t\t{\n\t\t\treturn uiCalendarConfig.calendars[$scope.calendarName];\n\t\t};\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.initialized;\n\t\t};\n\n\t\t$scope.hasSchedules = function hasSchedules()\n\t\t{\n\t\t\treturn $scope.schedules.length > 0;\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.siteOptions.length > 0;\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.scheduleOptions;\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\tif(!angular.isDefined($scope.selectedSite) || $scope.selectedSite === null)\n\t\t\t{\n\t\t\t\t$scope.selectedSite = $scope.siteOptions[0];\n\t\t\t}\n\n\t\t\treturn $scope.siteOptions;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\tvar viewName = $scope.scheduleViewName;\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.defaultCalendarView;\n\t\t\t}\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t$scope.calendarEvents = function calendarEvents(start, end, timezone, callback)\n\t\t{\n\t\t\t// load the events for each of the loaded schedules\n\t\t\tvar promise_array = [];\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tpromise_array.push(\n\t\t\t\t\t$scope.loadScheduleEvents(\n\t\t\t\t\t\t$scope.schedules[i].uuid, $scope.selectedSiteName, start, end));\n\t\t\t}\n\n\t\t\t// once all the events are loaded, concat them together and callback\n\t\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\t$scope.events = Array.prototype.concat.apply([], results_array);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.viewName() !== 'month';\n\t\t};\n\n\t\t$scope.changeView = function changeView(view)\n\t\t{\n\t\t\t// if switching to or from resourceDay view, need to update schedules\n\t\t\tvar reload_schedules = false;\n\t\t\tif(view === 'resourceDay' || $scope.scheduleViewName === 'resourceDay')\n\t\t\t{\n\t\t\t\treload_schedules = true;\n\t\t\t}\n\n\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t$scope.scheduleViewName = view;\n\n\t\t\tif(reload_schedules)\n\t\t\t{\n\t\t\t\t$scope.loadSelectedSchedules().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.setCalendarResources();\n\t\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.updateCalendarView();\n\t\t\t}\n\t\t};\n\n\t\t$scope.showLegend = function showLegend()\n\t\t{\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar data = {\n\t\t\t\tevent_statuses: $scope.eventStatuses,\n\t\t\t\tavailability_types: $scope.availabilityTypes\n\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcontroller: 'Schedule.LegendController',\n\t\t\t\ttemplateUrl: 'code/schedule/legend.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tdata: function() { return data }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// when the dialog closes clear the variable\n\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t$scope.dialog = null;\n\t\t\t});\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.refetchEvents = function refetchEvents()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t\t};\n\n\t\t$scope.changeDate = function changeDate(date)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('gotoDate', date);\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.viewName() != 'resourceDay')\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tvar selectedUuid = null;\n\t\t\tif($scope.scheduleDefault)\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.scheduleDefault;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.loadSelectedSchedules = function loadSelectedSchedules()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar promiseArray = [];\n\n\t\t\tif(\n\t\t\t\tJuno.Common.Util.exists($scope.selectedSchedule.providerNos) &&\n\t\t\t\tangular.isArray($scope.selectedSchedule.providerNos)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// TODO: this is really gross and I don't like it\n\t\t\t\t// Potentially put this in the calendarApiAdapter\n\t\t\t\tangular.forEach($scope.selectedSchedule.providerNos, function(providerNo)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(providerNo.toString()));\n\t\t\t\t});\n\n\t\t\t\tif($scope.selectedSchedule.providerNos.length > 1)\n\t\t\t\t{\n\t\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t\t$scope.selectedResources = $scope.buildSelectedResources($scope.selectedSchedule.providerNos);\n\t\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"resourceDay\";\n\n\t\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t\t$scope.scheduleViewName = 'resourceDay';\n\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"agendaWeek\";\n\t\t\t\t\t$scope.scheduleViewName = 'agendaWeek';\n\t\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t\t}\n\n\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t}\n\t\t\telse if(\n\t\t\t\t$scope.viewName() !== 'resourceDay' &&\n\t\t\t\t$scope.selectedSchedule !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tpromiseArray.push(\n\t\t\t\t\t$scope.loadSchedule($scope.selectedSchedule.uuid));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tangular.forEach($scope.selectedResources, function(selected)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(selected.uuid));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Loop through the schedules added above and add them to the schedule list.\n\t\t\t$q.all(promiseArray).then(\n\t\t\t\tfunction success(resultsArray)\n\t\t\t\t{\n\t\t\t\t\t$scope.schedules = [];\n\t\t\t\t\tfor(var i = 0; i < resultsArray.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.schedules[i] = resultsArray[i].data;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(resultsArray);\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('errors');\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSchedule = function loadSchedule(providerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// TODO: fill up availabilities and relations, or figure out how to show that info without them\n\t\t\tvar schedule = {\n\t\t\t\tuuid: providerId,\n\t\t\t\tavailabilities: [], // TODO: figure out if these have a Juno equivalent, I don't think\n\t\t\t\t\t\t\t\t\t// TODO: they do.  They are things like holidays and vacation days\n\t\t\t\trelations: [],\n\t\t\t\tevents: []\n\t\t\t};\n\n\t\t\tdeferred.resolve({data: schedule});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.updateCalendarView = function updateCalendarView()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t// This gets the view name, but if it's resourceDay, it will get agendaDay.\n\t\t// TODO Not sure why this works this way.  Maybe it uses it to get a day of events for each\n\t\t//      resource in the resource list?\n\t\t$scope.calendarViewName = function calendarViewName()\n\t\t{\n\t\t\tvar view = $scope.viewName();\n\t\t\tif(view == 'resourceDay')\n\t\t\t{\n\t\t\t\tview = 'agendaDay';\n\t\t\t}\n\t\t\treturn view;\n\t\t};\n\n\t\t$scope.setCalendarLoading = function setCalendarLoading(isLoading)\n\t\t{\n\t\t\t$scope.calendarLoading = isLoading;\n\t\t};\n\n\t\t$scope.getLoadedSchedule = function getLoadedSchedule(uuid)\n\t\t{\n\t\t\tvar schedule = null;\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tif($scope.schedules[i].uuid === uuid)\n\t\t\t\t{\n\t\t\t\t\tschedule = $scope.schedules[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schedule;\n\t\t};\n\n\t\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t\t$scope.buildSelectedResources = function buildSelectedResources(providerNos)\n\t\t{\n\t\t\tvar selectedResources = [];\n\n\t\t\tfor(var i = 0; i < providerNos.length; i++)\n\t\t\t{\n\t\t\t\tselectedResources.push($scope.resourceOptionHash[providerNos[i]]);\n\t\t\t}\n\n\t\t\treturn selectedResources;\n\t\t};\n\n\t\t$scope.setCalendarResources = function setCalendarResources()\n\t\t{\n\t\t\tif($scope.viewName() === 'resourceDay')\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t}\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.setEventSources = function setEventSources()\n\t\t{\n\t\t\t$scope.eventSources.push($scope.calendarEvents);\n\t\t};\n\n\t\t$scope.updateEvent = function updateEvent(calEvent)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('updateEvent', calEvent);\n\t\t};\n\n\t\t$scope.timeIntervalMinutes = function timeIntervalMinutes()\n\t\t{\n\t\t\treturn parseInt($scope.selectedTimeInterval.split(\":\")[1]);\n\t\t};\n\n\t\t$scope.loadAvailabilityTypes = function loadAvailabilityTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar availabilityTypes = {};\n\n\t\t\tscheduleService.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\t\tavailabilityTypes[result.code] = angular.copy(result);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.availabilityTypes = availabilityTypes;\n\t\t\t\t\tdeferred.resolve(availabilityTypes);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadDefaultSelections = function loadDefaultSelections()\n\t\t{\n\t\t\t$scope.selectedSchedule = $scope.getSelectedSchedule($scope.scheduleOptions);\n\n\t\t\t//$scope.selectedResources = $scope.getSelectedResources($scope.resourceOptions);\n\n\t\t\t$scope.selectedTimeInterval = $scope.getSelectedTimeInterval(\n\t\t\t\t$scope.timeIntervalOptions, $scope.defaultTimeInterval);\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.uiConfig.calendar.minTime = $scope.getScheduleMinTime();\n\t\t\t$scope.uiConfig.calendar.maxTime = $scope.getScheduleMaxTime();\n\n\t\t\t// scroll so that one hour ago is the top of the calendar\n\t\t\t$scope.uiConfig.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t\t};\n\n\t\t$scope.getSelectedTimeInterval = function getSelectedTimeInterval(\n\t\t\ttimeIntervalOptions, defaultTimeInterval)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default\n\n\t\t\tvar selectedTimeInterval = null;\n\n\t\t\tvar timeInterval = $scope.scheduleTimeInterval;\n\t\t\tif(timeInterval === null)\n\t\t\t{\n\t\t\t\ttimeInterval = $scope.scheduleTimeInterval;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(timeInterval))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < timeIntervalOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(timeInterval === timeIntervalOptions[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedTimeInterval = timeIntervalOptions[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(selectedTimeInterval === null)\n\t\t\t{\n\t\t\t\treturn defaultTimeInterval;\n\t\t\t}\n\n\t\t\treturn selectedTimeInterval;\n\t\t};\n\n\t\t$scope.getScheduleMinTime = function getScheduleMinTime()\n\t\t{\n\t\t\t// restrict day view if user preferences are set\n\n\t\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\t\treturn \"08:00\";\n\t\t};\n\n\t\t$scope.getScheduleMaxTime = function getScheduleMaxTime()\n\t\t{\n\t\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;*/\n\t\t\treturn \"20:00\";\n\t\t};\n\n\t\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t\t// $scope.event_statuses - a table to look up a status by uuid.\n\t\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t\t$scope.loadEventStatuses = function loadEventStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.eventStatuses = {};\n\t\t\t$scope.rotateStatuses = [];\n\n\t\t\t$scope.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t\t$scope.eventStatuses[result.displayLetter] = result;\n\t\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.rotateStatuses.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadScheduleEvents = function loadScheduleEvents(providerId, siteName, start, end)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t\t// the end time to convert to the correct date.\n\t\t\tvar startDateString = start.format(Juno.Common.Util.settings.date_format);\n\t\t\tvar endDateString = end.subtract(1, 'seconds').format(Juno.Common.Util.settings.date_format);\n\n\t\t\t$scope.scheduleApi.getCalendarEvents(\n\t\t\t\tproviderId,\n\t\t\t\tstartDateString,\n\t\t\t\tendDateString,\n\t\t\t\tsiteName\n\t\t\t).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t},\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.saveEvent = function saveEvent(editMode, calendarAppointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif(editMode)\n\t\t\t{\n\t\t\t\tthis.appointmentApi.updateAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.appointmentApi.addAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.moveEvent = function moveEvent(appointment, delta, adjustStartTime)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.startTime);\n\t\t\tvar endMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.endTime);\n\n\t\t\tvar movedAppointment = angular.copy(appointment);\n\n\t\t\tif(adjustStartTime)\n\t\t\t{\n\t\t\t\tmovedAppointment.startTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(startMoment.add(delta.asMinutes(), 'minutes'));\n\t\t\t}\n\t\t\tmovedAppointment.endTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(endMoment.add(delta.asMinutes(), 'minutes'));\n\n\t\t\t$scope.saveEvent(true, movedAppointment).then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(data.body);\n\t\t\t\t},\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(data.body);\n\t\t\t\t}\n\t\t\t);\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Read the implementation-specific results and return a calendar-compatible object.\n\t\t$scope.processSaveResults = function processSaveResults(results, displayErrors)\n\t\t{\n\t\t\tvar status = (results || {}).status;\n\n\t\t\tif(status == 'SUCCESS')\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar errorMessage = ((results || {}).error || {}).message;\n\t\t\tvar validationErrorArray = ((results || {}).error || {}).validationErrors;\n\n\t\t\tif(Array.isArray(validationErrorArray))\n\t\t\t{\n\t\t\t\tdisplayErrors.add_standard_error(errorMessage);\n\t\t\t\t//for(var error in validationErrorArray)\n\t\t\t\tfor(var i = 0; i < validationErrorArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar error = validationErrorArray[i];\n\t\t\t\t\tdisplayErrors.add_field_error(error.path, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.deleteEvent = function deleteEvent(appointmentNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.appointmentApi.deleteAppointment(appointmentNo).then(\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\n\t\t\t\t},\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.openCreateInvoice = function openCreateInvoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t\t{\n\t\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\n\t\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\t\twindow.window_scope = $scope;\n\t\t\t$window.open(url, '_blank');\n\t\t};\n\n\t\t$scope.getIconPath = function getIconPath(icon, statusModifier)\n\t\t{\n\t\t\tif(!Juno.Common.Util.exists(icon))\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tvar modifierString = \"\";\n\n\t\t\tif(Juno.Common.Util.exists(statusModifier))\n\t\t\t{\n\t\t\t\tmodifierString = statusModifier;\n\t\t\t}\n\n\t\t\treturn \"../images/\" + modifierString + icon;\n\t\t};\n\n\t\t$scope.rotateEventStatus = function rotateEventStatus(calEvent)\n\t\t{\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointmentNo = calEvent.data.appointmentNo;\n\n\t\t\t$scope.appointmentApi.setNextStatus(appointmentNo).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar newStatus = response.data.body;\n\n\t\t\t\t\tcalEvent.color = $scope.eventStatuses[newStatus].color;\n\t\t\t\t\tcalEvent.data.eventStatusCode = newStatus;\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t},\n\t\t\t\tfunction failure(response)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.getBillingLink = function getBillingLink(calEvent)\n\t\t{\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar referralNoParameter = \"\";\n\t\t\tif(calEvent.data.billingRdohip)\n\t\t\t{\n\t\t\t\treferralNoParameter = \"&referral_no_1=\" + encodeURIComponent(calEvent.data.billingRdohip);\n\t\t\t}\n\n\t\t\treturn \"../billing.do\" +\n\t\t\t\t\"?billRegion=\" + encodeURIComponent(calEvent.data.billingRegion) +\n\t\t\t\t\"&billForm=\" + encodeURIComponent(calEvent.data.billingForm) +\n\t\t\t\t\"&hotclick=\" +\n\t\t\t\t\"&appointment_no=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographic_name=\" + encodeURIComponent(calEvent.data.demographicName) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&demographic_no=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&user_no=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointment_date=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&start_time=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&bNewForm=1\" + referralNoParameter;\n\t\t};\n\n\t\t$scope.getEncounterLink = function getEncounterLink(calEvent)\n\t\t{\n\t\t\t// XXX: Perhaps link to the new encounter page?  Put in an option to choose new or old.\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\treturn \"../oscarEncounter/IncomingEncounter.do\" +\n\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointmentNo=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&curProviderNo=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&reason=\" + encodeURIComponent(calEvent.data.reason) +\n\t\t\t\t\"&encType=\" + encodeURIComponent(\"face to face encounter with client\") +\n\n\t\t\t\t\"&userName=\" + encodeURIComponent(calEvent.data.userFirstName + \" \" + calEvent.data.userLastName) +\n\t\t\t\t\"&curDate=\" + encodeURIComponent(Juno.Common.Util.formatMomentDate(moment())) +\n\n\t\t\t\t\"&appointmentDate=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&startTime=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo);\n\t\t};\n\n\t\t$scope.getRxLink = function getRxLink(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\t\treturn \"../oscarRx/choosePatient.do\" +\n\t\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo);\n\t\t\t}\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Event Handlers\n\t\t//=========================================================================/\n\n\t\t$scope.onEventRender = function onEventRender(event, element, view)\n\t\t{\n\t\t\tif(event.rendering !== 'background')\n\t\t\t{\n\t\t\t\tvar eventSiteHtml = '';\n\t\t\t\tvar eventSite = $scope.sites[event.data.site];\n\n\t\t\t\tif(Juno.Common.Util.exists(eventSite))\n\t\t\t\t{\n\t\t\t\t\teventSiteHtml += \"<span style='background-color: \" + eventSite.color + \"'>&nbsp;</span>\"\n\t\t\t\t}\n\n\n\t\t\t\tvar eventStatusHtml = '';\n\t\t\t\tvar eventStatus =\n\t\t\t\t\t$scope.eventStatuses[event.data.eventStatusCode];\n\t\t\t\tvar eventStatusRotate = Juno.Common.Util.exists(eventStatus.sortOrder);\n\n\t\t\t\tif(Juno.Common.Util.exists(eventStatus) && Juno.Common.Util.exists(eventStatus.icon) &&\n\t\t\t\t\tJuno.Common.Util.exists(event) && Juno.Common.Util.exists(event.data))\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml += \"<img class='event-status\";\n\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += ' rotate';\n\t\t\t\t\t}\n\t\t\t\t\teventStatusHtml += \"' src='\" + $scope.getIconPath(eventStatus.icon, event.data.eventStatusModifier) + \"' />\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml = '<span class=\"event-status';\n\t\t\t\t\tif(Juno.Common.Util.exists(eventStatus))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teventStatusHtml += ' rotate ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\teventStatusHtml += '\"' + ' title=\"' + Juno.Common.Util.escapeHtml(eventStatus.name) + '\">' +\n\t\t\t\t\t\t\tJuno.Common.Util.escapeHtml(eventStatus.displayLetter) + '</span>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += '\" title=\"Unknown\">?</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar eventEncounterHtml = '<span class=\"event-encounter\" title=\"Open Encounter\">E</span>';\n\n\t\t\t\tvar eventInvoiceHtml = '<span class=\"event-invoice\" title=\"Create Invoice\">B</span>';\n\n\t\t\t\tvar eventDemographicHtml = '<span class=\"event-demographic\" title=\"View Patient\">M</span>';\n\n\t\t\t\tvar eventRxHtml = '<span class=\"event-rx\" title=\"View Prescription\">Rx</span>';\n\n\t\t\t\tvar eventDetails = \"\";\n\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.demographicName))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.demographicName);\n\t\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t\t{\n\t\t\t\t\t\teventDetails += \" (\" + Juno.Common.Util.escapeHtml(event.data.reason) + \")\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.reason);\n\t\t\t\t}\n\n\t\t\t\t$(element).find('.fc-content').html(eventSiteHtml + eventStatusHtml + eventEncounterHtml +\n\t\t\t\t\teventInvoiceHtml + eventDemographicHtml + eventRxHtml + eventDetails);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onViewRender = function onViewRender()\n\t\t{\n\t\t\tif($scope.isInitialized() && $scope.calendar())\n\t\t\t{\n\t\t\t\t$scope.selectedDate = moment(Juno.Common.Util.formatMomentDate(\n\t\t\t\t\tmoment($scope.calendar().fullCalendar('getDate'))));\n\t\t\t}\n\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$(\"#ca-calendar\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t};\n\n\t\t$scope.afterRender = function afterRender()\n\t\t{\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$('.fc-agendaDay-button').click(function()\n\t\t\t{\n\t\t\t\t$(\"#schedule_container\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t\t});\n\t\t};\n\n\t\t$scope.openCreateEventDialog = function openCreateEventDialog(\n\t\t\tstart, end, jsEvent, view, resource)\n\t\t{\n\t\t\t// XXX: share as much code as possible with edit event\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = null;\n\t\t\tvar displayName = \"\";\n\t\t\tif(Juno.Common.Util.exists(resource))\n\t\t\t{\n\t\t\t\tscheduleUuid = resource.id;\n\t\t\t\tdisplayName = resource.display_name;\n\t\t\t}\n\t\t\telse if($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\tscheduleUuid = $scope.selectedSchedule.uuid;\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: start,\n\t\t\t\t\tendTime: end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tscheduleTemplates: $scope.scheduleTemplates,\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: {}\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return false }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t// XXX: make this work\n\t\t$scope.openPatientDialog = function openPatientDialog(editModeCallback, onSaveCallback,\n\t\t\tloadErrorLinkPatientFn)\n\t\t{\n\t\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\t\treturn this.$uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tedit_mode: editModeCallback,\n\t\t\t\t\ton_save_callback: onSaveCallback,\n\t\t\t\t\tload_error_link_patient_fn: loadErrorLinkPatientFn\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$scope.openPatientDemographic = function openPatientDemographic(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: calEvent.data.demographicNo\n\t\t\t\t};\n\n\t\t\t\tif (angular.isDefined(calEvent.data.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = calEvent.data.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\t\t\t\t}\n\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t$scope.openEditEventDialog = function openEditEventDialog(calEvent)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_edit') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = calEvent.resourceId;\n\t\t\tvar displayName = calEvent.data.demographicName;\n\n\t\t\tif(displayName == null)\n\t\t\t{\n\t\t\t\tdisplayName = '';\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: calEvent.start,\n\t\t\t\t\tendTime: calEvent.end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: calEvent.data\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return true }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.onEventClicked = function onEventClicked(calEvent, jsEvent, view)\n\t\t{\n\t\t\tif($(jsEvent.target).is(\".event-status.rotate\"))\n\t\t\t{\n\t\t\t\t$scope.rotateEventStatus(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-encounter\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getEncounterLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-invoice\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getBillingLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-demographic\"))\n\t\t\t{\n\t\t\t\t$scope.openPatientDemographic(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-rx\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getRxLink(calEvent));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.openEditEventDialog(calEvent);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventDrop = function onEventDrop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was dragged and dropped on the calendar:\n\t\t\t// load then update the start and end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, true).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.onEventResize = function onEventResize(calEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t\t// load then update the end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, false).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t//$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\treturn $scope.onScheduleChanged();\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\tvar selectedSchedule = $scope.selectedSchedule;\n\t\t\tvar selectedSiteName = $scope.selectedSiteName;\n\n\t\t\tif(!Juno.Common.Util.exists(selectedSchedule))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedSiteName))\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = selectedSiteName;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = null;\n\t\t\t}\n\n\t\t\t// reload the schedule and then events data, triggering a rerender\n\t\t\t$scope.loadSelectedSchedules().then($scope.refetchEvents);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.scheduleTimeInterval = $scope.selectedTimeInterval;\n\n\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Init methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t\t// $scope.resourceOptionHash - table to look up schedule information by providerNo.  This is\n\t\t//                               used to create the resource view headers.\n\t\t$scope.loadScheduleOptions = function loadScheduleOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getScheduleGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\n\t\t\t\t\t\t$scope.scheduleOptions.push(scheduleData);\n\n\t\t\t\t\t\t// Get the possible resources by inferring that the group is a provider\n\t\t\t\t\t\t// by checking if the array has one entry and matches the identifier\n\t\t\t\t\t\t// Also uses fields specific to Juno.\n\t\t\t\t\t\t// TODO: CHANGE THIS!!\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\tangular.isArray(scheduleData.providerNos) &&\n\t\t\t\t\t\t\tscheduleData.providerNos.length == 1 &&\n\t\t\t\t\t\t\tscheduleData.providerNos[0].toString() == scheduleData.identifier\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar providerNo = scheduleData.providerNos[0];\n\n\t\t\t\t\t\t\t$scope.resourceOptionHash[providerNo] = {\n\t\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t\t'uuid': providerNo,\n\t\t\t\t\t\t\t\t'name': providerNo,\n\t\t\t\t\t\t\t\t'title': scheduleData.name,\n\t\t\t\t\t\t\t\t'display_name': scheduleData.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Load the list of available sites from the API.  Sets the following:\n\t\t// $scope.sites - a table to lookup a site's info by name\n\t\t// $scope.site_options - the options for the site selection dropdown\n\t\t$scope.loadSiteOptions = function loadSiteOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.loadSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.sites = {};\n\t\t\t\t\t$scope.siteOptions = [];\n\t\t\t\t\tif(angular.isArray(results) && results.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t\t$scope.siteOptions = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\t\tdisplay_name: \"All\",\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\t$scope.siteOptions = $scope.siteOptions.concat(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSites = function loadSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif(angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(out);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.$watch('scheduleService.selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\t// avoid running first time this fires during initialization\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\t$scope.changeDate(newValue);\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Config Array\n\t\t//=========================================================================/\n\n\t\t$scope.applyUiConfig = function applyUiConfig(uiConfig)\n\t\t{\n\t\t\t$scope.uiConfigApplied = angular.copy(uiConfig);\n\t\t};\n\n\t\t$scope.initEventsAutoRefresh = function initEventsAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = $scope.scheduleAutoRefresh;\n\t\t\tif(refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = $scope.scheduleAutoRefreshMinutes;\n\t\t\tif(!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = $scope.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif(minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\t$scope.scheduleAutoRefresh = setInterval($scope.refetchEvents, minutes * 60 * 1000);\n\t\t\t}\n\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Any changes to this array need to be applied by calling applyUiConfig()\n\t\t$scope.uiConfig = {\n\t\t\tcalendar: {\n\t\t\t\theight: 'auto', //$scope.get_schedule_height(),\n\t\t\t\tnowIndicator: true,\n\t\t\t\theader: {\n\t\t\t\t\tleft: 'prev,next today title',\n\t\t\t\t\tcenter: '',\n\t\t\t\t\tright: ''\n\t\t\t\t},\n\n\t\t\t\tallDaySlot: false,\n\n\t\t\t\tdefaultView: null,\n\t\t\t\tdefaultDate: $scope.defaultDate,\n\t\t\t\tslotDuration: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelInterval: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelFormat: 'h:mma',\n\n\t\t\t\tloading: $scope.setCalendarLoading,\n\n\t\t\t\tselectable: true,\n\t\t\t\tselect: $scope.openCreateEventDialog,\n\t\t\t\teventClick: $scope.onEventClicked,\n\t\t\t\teventRender: $scope.onEventRender,\n\t\t\t\tviewRender: $scope.onViewRender,\n\t\t\t\teventAfterAllRender: $scope.afterRender,\n\n\t\t\t\teditable: true,\n\t\t\t\teventDrop: $scope.onEventDrop,\n\t\t\t\teventResize: $scope.onEventResize,\n\t\t\t\tschedulerLicenseKey: \"GPL-My-Project-Is-Open-Source\"\n\t\t\t}\n\t\t};\n\n\t\t$scope.init();\n\t}\n]);","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nangular.module('Schedule').controller('Schedule.EventController', [\n\n\t\t'$scope',\n\t\t'$q',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModal',\n\t\t'$uibModalInstance',\n\n\t\t'errorsService',\n\n\t\t'demographicService',\n\t\t'securityService',\n\t\t'keyBinding',\n\t\t'focus',\n\t\t'type', 'parentScope', 'label', 'editMode', 'data',\n\n\tfunction (\n\t\t$scope, $q, $timeout, $state, $uibModal, $uibModalInstance,\n\n\t\tmessagesFactory,\n\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tkeyBinding,\n\t\tfocus,\n\t\ttype, parentScope, label, editMode, data\n\t)\n{\n\t$scope.parentScope = parentScope;\n\n\n\t//=========================================================================\n\t// Access Control\n\t//=========================================================================/\n\n\n\t//=========================================================================\n\t// Local scope variables\n\t//=========================================================================/\n\n\t$scope.label = label;\n\t$scope.editMode = editMode;\n\n\t$scope.keyBinding = keyBinding;\n\t$scope.eventUuid = null;\n\n\t$scope.schedule = data.schedule;\n\n\t$scope.eventData = {\n\t\tstartDate: null,\n\t\tstartTime: null,\n\t\tendDate: null,\n\t\tendTime: null,\n\t\treason: null,\n\t\tnotes: null\n\t};\n\n\t$scope.timeInterval = data.timeInterval;\n\n\t$scope.lastEventLength = null;\n\n\t$scope.patientTypeahead = {};\n\t$scope.autocompleteValues = {};\n\n\t$scope.activeTemplateEvents = [];\n\n\t$scope.eventStatuses = $scope.parentScope.eventStatuses;\n\t$scope.eventStatusOptions = [];\n\t$scope.selectedEventStatus = null;\n\t$scope.defaultEventStatus = null;\n\n\t$scope.selectedSiteName = null;\n\n\t$scope.timepickerFormat = \"h:mm A\";\n\n\t$scope.fieldValueMapping = {\n\t\tstartDate: 'Start Date',\n\t\tstartTime: 'Start Time',\n\t\tendDate: 'End Date',\n\t\tendTime: 'End Time'\n\t};\n\t$scope.displayMessages = messagesFactory.factory();\n\n\t$scope.initialized = false;\n\t$scope.working = false;\n\n\t$scope.demographicModel = {\n\t\tdemographicNo: null,\n\t\tfullName: null,\n\t\thasPhoto: true,\n\t\tpatientPhotoUrl: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\tdata: {\n\t\t\tbirthDate: null,\n\t\t\thealthNumber: null,\n\t\t\tontarioVersionCode: null,\n\t\t\tphoneNumberPrimary: null\n\t\t},\n\t\tclear: function clear()\n\t\t{\n\t\t\tthis.demographicNo = null;\n\t\t\tthis.fullName = null;\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\tthis.data.birthDate = null;\n\t\t\tthis.data.healthNumber = null;\n\t\t\tthis.data.ontarioVersionCode = null;\n\t\t\tthis.data.phoneNumberPrimary = null;\n\t\t},\n\t\tfillData: function fillData(data)\n\t\t{\n\t\t\tthis.demographicNo = data.demographicNo;\n\t\t\tthis.fullName = Juno.Common.Util.formatName(data.firstName, data.lastName);\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=' + (data.demographicNo? data.demographicNo: 0);\n\n\t\t\tvar dateOfBirth = null;\n\t\t\tif(Juno.Common.Util.exists(data.dob))\n\t\t\t{\n\t\t\t\t// XXX: Perhaps put this in util?  Is this date format common for juno?\n\t\t\t\tdateOfBirth = moment(data.dob, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdateOfBirth = Juno.Common.Util.getDateMomentFromComponents(\n\t\t\t\t\tdata.dobYear, data.dobMonth, data.dobDay);\n\t\t\t}\n\t\t\tthis.data.birthDate = Juno.Common.Util.formatMomentDate(dateOfBirth);\n\n\n\t\t\tthis.data.healthNumber = data.hin;\n\t\t\t// XXX: no version code when loaded from autocomplete?  Does that matter?\n\t\t\tthis.data.ontarioVersionCode = data.ver;\n\t\t\tthis.data.phoneNumberPrimary = data.phone;\n\t\t},\n\t\tuploadPhoto: function uploadPhoto(file){}\n\t};\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t{\n\t\t\t$timeout(function ()\n\t\t\t{\n\t\t\t\t$scope.cancel();\n\t\t\t});\n\t\t}\n\n\t\t$scope.demographicModel.clear();\n\n\t\tvar momentStart = data.startTime;\n\t\tvar momentEnd = data.endTime;\n\n\t\t$scope.eventData.startTime = Juno.Common.Util.formatMomentTime(momentStart, $scope.timepickerFormat);\n\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t$scope.eventData.startDate = Juno.Common.Util.formatMomentDate(momentStart);\n\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\n\t\t$scope.lastEventLength = momentEnd.diff(momentStart, 'minutes');\n\n\t\t// maintain a list of the 'active' templates based on start time\n\t\t$scope.setActiveTemplateEvents();\n\n\t\t//$scope.eventStatusOptions.push(\"\");\n\t\tfor(var key in $scope.eventStatuses)\n\t\t{\n\t\t\tif($scope.eventStatuses.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t$scope.eventStatusOptions.push($scope.eventStatuses[key]);\n\t\t\t}\n\t\t}\n\t\t$scope.defaultEventStatus = data.defaultEventStatus;\n\t\t$scope.setSelectedEventStatus(data.eventData.eventStatusCode);\n\n\n\t\tif(editMode)\n\t\t{\n\t\t\t$scope.eventUuid = data.eventData.appointmentNo;\n\t\t\t$scope.eventData.reason = data.eventData.reason;\n\t\t\t$scope.eventData.notes = data.eventData.notes;\n\n\t\t\t// either load the patient data and init the autocomplete\n\t\t\t// or ensure the patient model is clear\n\t\t\t$scope.initPatientAutocomplete(data.eventData.demographicNo).then(function() {\n\t\t\t\t$scope.initialized = true;\n\t\t\t});\n\t\t\t$scope.selectedSiteName = data.eventData.site;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create mode: adjust the end date (if needed)\n\t\t\t// and clear the patient model\n\t\t\t$scope.adjustEndDatetime();\n\t\t\t$scope.demographicModel.clear();\n\n\t\t\t// autofocus the patient field\n\t\t\tfocus.element(\"#input-patient\");\n\n\t\t\t$scope.initialized = true;\n\t\t}\n\t};\n\n\t$scope.initPatientAutocomplete = function initPatientAutocomplete(demographicNo)\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tif(Juno.Common.Util.exists(demographicNo) && demographicNo != 0)\n\t\t{\n\t\t\tdemographicService.getDemographic(demographicNo).then(function(data)\n\t\t\t{\n\t\t\t\t$scope.patientTypeahead = data;\n\t\t\t\tdeferred.resolve();\n\t\t\t},\n\t\t\tfunction(errors)\n\t\t\t{\n\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t$scope.demographicModel.clear();\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.demographicModel.clear();\n\t\t\tdeferred.resolve();\n\t\t}\n\n\t\treturn deferred.promise;\n\t};\n\n\n\t//=========================================================================\n\t// Private methods\n\t//=========================================================================/\n\n\t$scope.setSelectedEventStatus = function setSelectedEventStatus(selectedCode)\n\t{\n\t\tvar eventStatusCode = $scope.defaultEventStatus;\n\n\t\tif(Juno.Common.Util.exists(selectedCode))\n\t\t{\n\t\t\teventStatusCode = selectedCode;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists(eventStatusCode) ||\n\t\t\t!Juno.Common.Util.exists($scope.eventStatuses[eventStatusCode]))\n\t\t{\n\t\t\t// if not set or found just pick the first one\n\t\t\teventStatusCode = $scope.eventStatusOptions[0].displayLetter;\n\t\t}\n\n\t\t$scope.selectedEventStatus = $scope.eventStatuses[eventStatusCode];\n\t};\n\n\t// Make a list of the types of appointments available for this appointment\n\t$scope.setActiveTemplateEvents = function setActiveTemplateEvents()\n\t{\n\t\t// Get templates that happen during the time period\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tvar activeEvents = [];\n\n\t\t// Loop through the events for this day\n\t\tfor(var i = 0; i < data.events.length; i++)\n\t\t{\n\t\t\tif(data.events[i].rendering != \"background\" || data.events[i].resourceId != $scope.schedule.uuid)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar event = angular.copy(data.events[i]);\n\n\t\t\t// if start time is before event end time or if end time is after event start\n\t\t\tevent.start = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\tevent.end = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\n\t\t\tif(momentStart.isValid() && momentEnd.isValid() &&\n\t\t\t\tevent.start.isValid() && event.end.isValid() &&\n\t\t\t\tmomentStart.isBefore(event.end) && momentEnd.isAfter(event.start))\n\t\t\t{\n\t\t\t\tevent.availabilityType = data.availabilityTypes[event.scheduleTemplateCode];\n\t\t\t\tactiveEvents.push(event);\n\t\t\t}\n\t\t}\n\n\t\t$scope.activeTemplateEvents = activeEvents;\n\t};\n\n\t$scope.adjustEndDatetime = function adjustEndDatetime(lengthMinutes)\n\t{\n\t\t// adjusts the end time to the specified length or\n\t\t// adjusts to keep the event length the same as it last was\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tif(momentStart.isValid())\n\t\t{\n\t\t\tvar newEventLength = Juno.Common.Util.exists(lengthMinutes) ?\n\t\t\t\tlengthMinutes : $scope.lastEventLength;\n\n\t\t\tvar momentEnd = momentStart.add(newEventLength, 'minutes');\n\n\t\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\t\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t}\n\t};\n\n\t$scope.updateLastEventLength = function updateLastEventLength()\n\t{\n\t\t// saves the current event length, if the date/times are valid\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tif(momentStart.isValid() && momentEnd.isValid())\n\t\t{\n\t\t\tvar eventLength = momentEnd.diff(momentStart, 'minutes');\n\t\t\tif(eventLength > 0)\n\t\t\t{\n\t\t\t\t$scope.lastEventLength = eventLength;\n\t\t\t}\n\t\t}\n\t};\n\n\t$scope.validateForm = function validateForm()\n\t{\n\t\t$scope.displayMessages.clear();\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.startDate,\n\t\t\t$scope.displayMessages, 'startDate', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.startTime),\n\t\t\t$scope.displayMessages, 'startTime', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.endDate,\n\t\t\t$scope.displayMessages, 'endDate', 'End Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.endTime),\n\t\t\t$scope.displayMessages, 'endTime', 'End Time', true);\n\n\t\t// if all the date/time fields look good, validate range\n\t\tif(!$scope.displayMessages.has_errors())\n\t\t{\n\t\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\t\tif(endDatetime.isSame(startDatetime) ||\n\t\t\t\tendDatetime.isBefore(startDatetime))\n\t\t\t{\n\t\t\t\t$scope.displayMessages.addStandardError(\"The appointment must end after it starts\");\n\t\t\t}\n\t\t}\n\n\t\treturn !$scope.displayMessages.has_errors();\n\t};\n\n\t$scope.saveEvent = function saveEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\n\t\tparentScope.saveEvent(\n\t\t\teditMode,\n\t\t\t{\n\t\t\t\tappointmentNo: $scope.eventUuid,\n\t\t\t\tstartTime: startDatetime,\n\t\t\t\tendTime: endDatetime,\n\t\t\t\treason: $scope.eventData.reason,\n\t\t\t\tnotes: $scope.eventData.notes,\n\t\t\t\tproviderNo: $scope.schedule.uuid,\n\t\t\t\teventStatusCode: $scope.selectedEventStatus.displayLetter,\n\t\t\t\tdemographicNo: $scope.demographicModel.demographicNo,\n\t\t\t\tsite: $scope.selectedSiteName\n\t\t\t}\n\t\t).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tif(parentScope.processSaveResults(results, $scope.displayMessages))\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (results)\n\t\t\t{\n\t\t\t\tparentScope.processSaveResults(results, $scope.displayMessages);\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.deleteEvent = function deleteEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tparentScope.deleteEvent($scope.eventUuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.formattedTime = function formattedTime(time_str)\n\t{\n\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\treturn time_str.replace(/ /g,'');\n\t};\n\n\t$scope.loadPatientFromTypeahead = function loadPatientFromTypeahead(patientTypeahead)\n\t{\n\t\t$scope.demographicModel.fillData(patientTypeahead);\n\t};\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t// when the start date is changed,\n\t// update the active template events\n\t$scope.$watch('startDate', function(newStartDate, oldStartDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartDate !== oldStartDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the start time is changed,\n\t// update the active template events and adjust the end time\n\t$scope.$watch('startTime', function(newStartTime, oldStartTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartTime !== oldStartTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the end date is changed, track the event length\n\t$scope.$watch('endDate', function(newEndDate, oldEndDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndDate !== oldEndDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t// when the end time is changed, track the event length\n\t$scope.$watch('endTime', function(newEndTime, oldEndTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndTime !== oldEndTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t$scope.$watch('patientTypeahead', function()\n\t{\n\t\t$scope.loadPatientFromTypeahead($scope.patientTypeahead);\n\t});\n\n\t//=========================================================================\n\t// Public methods\n\t//=========================================================================/\n\n\t$scope.loadedNewPhoto = function loadedNewPhoto(file, event)\n\t{\n\t\tif(file == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.preview_patient_image = file;\n\t\t$scope.new_photo = true;\n\t\t$scope.demographicModel.hasPhoto = true;\n\t\t$scope.demographicModel.uploadPhoto(file);\n\t};\n\n\t$scope.isWorking = function isWorking()\n\t{\n\t\treturn $scope.working;\n\t};\n\n\t$scope.isInitialized = function isInitialized()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.isPatientSelected = function isPatientSelected()\n\t{\n\t\treturn Juno.Common.Util.exists($scope.demographicModel.demographicNo);\n\t};\n\n\t$scope.hasSites = function hasSites()\n\t{\n\t\treturn (parentScope.siteOptions.length > 0)\n\t}\n\n\t$scope.clearPatient = function clearPatient()\n\t{\n\t\t$scope.autocompleteValues.patient = null;\n\t\t$scope.demographicModel.clear();\n\t};\n\n\t$scope.setEventLength = function setEventLength(minutes)\n\t{\n\t\t$scope.adjustEndDatetime(minutes);\n\t};\n\n\t$scope.save = function save()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t\t\t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\tconsole.log($scope.displayMessages.field_errors()['location']);\n\t\t\tif(!$scope.displayMessages.has_standard_errors())\n\t\t\t{\n\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t}\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.del = function del()\n\t{\n\t\t$scope.working = true;\n\t\t$scope.deleteEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.cancel = function cancel()\n\t{\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\n\t$scope.saveAndBill = function saveAndBill()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t  \t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t\t$scope.parentScope.openCreateInvoice(\n\t\t\t\t$scope.eventUuid,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.demographicModel.demographicNo);\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.viewInvoices = function viewInvoices()\n\t{\n\t\t$scope.parentScope.open_view_invoices($scope.eventUuid);\n\t};\n\n\t$scope.createPatient = function createPatient()\n\t{\n\t\tvar editModeCallback = function() { return false; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.create_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t$scope.modify_patient = function modify_patient()\n\t{\n\t\tif(!$scope.demographicModel.demographicNo)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar editModeCallback = function() { return true; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.modify_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t// for callback on create/edit patient modal\n\t$scope.onPatientModalSave = function onPatientModalSave(demographicNo)\n\t{\n\t\t// load the newly created/updated patient\n\t\t$scope.demographicModel.demographicNo = demographicNo;\n\t\t$scope.initPatientAutocomplete();\n\t};\n\n\t$scope.searchPatients = function searchPatients(term)\n\t{\n\t\tvar search = {\n\t\t\ttype: 'Name',\n\t\t\t'term': term,\n\t\t\tstatus: 'active',\n\t\t\tintegrator: false,\n\t\t\toutofdomain: true\n\t\t};\n\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: Juno.Common.Util.formatName(\n\t\t\t\t\t\t\t\tresults.content[x].firstName, results.content[x].lastName)\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t};\n\n\t$scope.newDemographic = function newDemographic(size)\n\t{\n\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\tmodalInstance.result.then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\n\t\t\t\t$scope.initPatientAutocomplete(results.demographicNo)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tconsole.log($('#myModal'));\n\t};\n\n\n\t//=========================================================================\n\t//  Key Bindings\n\t//=========================================================================\n\n\t$scope.keyBindSettings =\n\t{\n\t\t\"ctrl+enter\": {\n\t\t\ttitle: 'Ctrl+Enter',\n\t\t\ttooltip: 'Save',\n\t\t\tdescription: 'Save appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.save();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t},\n\t\t\"ctrl+shift+enter\": {\n\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\ttooltip: 'Save And Bill',\n\t\t\tdescription: 'Save and bill for appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.saveAndBill();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t}\n\t};\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+enter\", $scope.keyBindSettings[\"ctrl+enter\"]);\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+shift+enter\", $scope.keyBindSettings[\"ctrl+shift+enter\"]);\n}]);\n","angular.module('Schedule').controller('Schedule.AppointmentAddController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'demographicsService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'apptDate',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tapptDate)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.types = [];\n\n\t\tcontroller.urgencies = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: 'Normal'\n\t\t},\n\t\t{\n\t\t\tvalue: 'critical',\n\t\t\tlabel: 'Critical'\n\t\t}];\n\n\t\tcontroller.me = me;\n\n\t\tcontroller.appointment = {\n\t\t\tstatus: 't',\n\t\t\tappointmentDate: $filter('date')(apptDate, 'yyyy-MM-dd'),\n\t\t\tstartTime: '09:00 AM',\n\t\t\ttype: '',\n\t\t\tduration: 15,\n\t\t\tproviderName: me.formattedName,\n\t\t\tproviderNo: me.providerNo,\n\t\t\treason: '',\n\t\t\tnotes: '',\n\t\t\tlocation: '',\n\t\t\tresources: '',\n\t\t\tcritical: ''\n\t\t};\n\n\t\tscheduleService.getTypes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.types = results.types;\n\t\t\t\tcontroller.types.unshift(\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tduration: 15,\n\t\t\t\t\tlocation: '',\n\t\t\t\t\tnotes: '',\n\t\t\t\t\treason: '',\n\t\t\t\t\tresources: ''\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.selectType = function selectType()\n\t\t{\n\t\t\tvar type = null;\n\n\t\t\tfor (var x = 0; x < controller.types.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.types[x].name == controller.appointment.type)\n\t\t\t\t{\n\t\t\t\t\ttype = controller.types[x];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type != null)\n\t\t\t{\n\t\t\t\tcontroller.appointment.duration = type.duration;\n\t\t\t\tcontroller.appointment.location = type.location;\n\t\t\t\tcontroller.appointment.notes = type.notes;\n\t\t\t\tcontroller.appointment.reason = type.reason;\n\t\t\t\tcontroller.appointment.resources = type.resources;\n\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.validate = function validate()\n\t\t{\n\t\t\tvar t = controller.appointment;\n\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.providerNo == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a provider');\n\t\t\t}\n\t\t\tif (t.startTime == null || t.startTime.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\t\t\tif (t.duration == null || t.duration.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar x = {};\n\t\t\tx.status = controller.appointment.status;\n\t\t\tx.appointmentDate = controller.appointment.appointmentDate;\n\t\t\tx.startTime12hWithMedian = controller.appointment.startTime;\n\t\t\tx.type = controller.appointment.type;\n\t\t\tx.duration = controller.appointment.duration;\n\t\t\tx.providerNo = controller.appointment.providerNo;\n\t\t\tx.reason = controller.appointment.reason;\n\t\t\tx.notes = controller.appointment.notes;\n\t\t\tx.location = controller.appointment.location;\n\t\t\tx.resources = controller.appointment.resources;\n\t\t\tx.urgency = controller.appointment.critical;\n\t\t\tx.demographicNo = controller.appointment.demographicNo;\n\n\t\t\t// TODO: make sure this works with the updated backend service (response changed)\n\t\t\tconsole.log(JSON.stringify(x));\n\t\t\tscheduleService.addAppointment(x).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\n\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.appointment.demographicNo = results.demographicNo;\n\t\t\t\t\tcontroller.appointment.demographicName = '';\n\t\t\t\t\tcontroller.appointment.demographic = results;\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\t}\n]);","angular.module('Schedule').controller('Schedule.AppointmentViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'appointment',\n\t'statusList',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tappointment,\n\t\tstatusList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.me = me;\n\t\tcontroller.appointment = appointment;\n\t\tcontroller.statusList = statusList.content;\n\t\tcontroller.appointmentUpdate = {};\n\n\t\tcontroller.appointmentWriteAccess = false;\n\n\t\tcontroller.getStatus = function getStatus(status)\n\t\t{\n\n\t\t\tfor (var x = 0; x < controller.statusList.length; x++)\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(controller.statusList[x]));\n\t\t\t\tif (controller.statusList[x].status == status)\n\t\t\t\t{\n\t\t\t\t\treturn controller.statusList[x].description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn status;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.deleteAppointment = function deleteAppointment()\n\t\t{\n\t\t\tif (confirm('Are you sure you want to delete this appointment?'))\n\t\t\t{\n\t\t\t\tscheduleService.deleteAppointment(controller.appointment.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\n\n\t\tcontroller.editProvider = function editProvider()\n\t\t{\n\t\t\tcontroller.showProviderFormControl = true;\n\t\t\tcontroller.appointmentUpdate.providerNo = controller.appointment.providerNo;\n\t\t\tcontroller.appointmentUpdate.providerName = controller.appointment.provider.lastName + \",\" + controller.appointment.provider.lastName;\n\t\t};\n\n\t\tcontroller.updateProvider = function updateProvider(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t\tcontroller.showProviderFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelProviderUpdate = function cancelProviderUpdate()\n\t\t{\n\t\t\tcontroller.appointmentUpdate.providerNo = null;\n\t\t\tcontroller.appointmentUpdate.providerName = null;\n\n\t\t\tcontroller.showProviderFormControl = false;\n\n\t\t};\n\n\t\tcontroller.showAppointmentHistory = function showAppointmentHistory()\n\t\t{\n\t\t\tscheduleService.appointmentHistory(controller.appointment.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\talert(JSON.stringify(results));\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.noShowAppointment = function noShowAppointment()\n\t\t{\n\t\t\tscheduleService.noShowAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancelAppointment = function cancelAppointment()\n\t\t{\n\t\t\tscheduleService.cancelAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t}\n]);","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('AdminCtrl', ['$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration.Fax', ['Common', 'Common.Services']);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationController', [\n\t\"$uibModal\",\n\t\"faxAccountService\",\n\t\"providerService\",\n\t\"systemPreferenceService\",\n\tfunction ($uibModal,\n\t          faxAccountService,\n\t          providerService,\n\t          systemPreferenceService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.loggedInProvider = null;\n\t\tcontroller.masterFaxDisabled = true;\n\t\tcontroller.masterFaxEnabledInbound = false;\n\t\tcontroller.masterFaxEnabledOutbound = false;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t// if the current provider number is unknown, retrieve it.\n\t\t\tif(controller.loggedInProvider == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProvider = response;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledInbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledOutbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\n\t\tcontroller.editNewFaxAccount = function editNewFaxAccount()\n\t\t{\n\t\t\tcontroller.editFaxAccount();\n\t\t};\n\t\tcontroller.editFaxAccount = function editFaxAccount(faxAccount)\n\t\t{\n\t\t\tlet isNewAcct = true;\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tisNewAcct = false;\n\t\t\t}\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfigurationEdit.jsp',\n\t\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationEditController as faxConfigEditController',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: 'faxEditModal',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfaxAccount: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn faxAccount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledInbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledInbound;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledOutbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledOutbound;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\t// the object passed back on closing\n\t\t\t\tfunction success(updatedAccount)\n\t\t\t\t{\n\t\t\t\t\tif(isNewAcct)\n\t\t\t\t\t{\n\t\t\t\t\t\t// new accounts get added to the account list\n\t\t\t\t\t\tcontroller.faxAccountList.push(updatedAccount);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// clear the existing properties and replace with the updated ones\n\t\t\t\t\t\tangular.copy(updatedAccount, faxAccount);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t// do nothing on dismissal\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.saveMasterFaxEnabledStateInbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\t\tcontroller.saveMasterFaxEnabledStateOutbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\n\t\tcontroller.updateMasterFaxDisabledStatus = function updateMasterFaxDisabledStatus()\n\t\t{\n\t\t\tcontroller.masterFaxDisabled = !controller.masterFaxEnabledInbound && !controller.masterFaxEnabledOutbound;\n\t\t};\n\t\tcontroller.setSystemProperty = function setSystemProperty(key, value)\n\t\t{\n\t\t\tsystemPreferenceService.setPreference(key, value).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationEditController', [\n\t\"$uibModal\",\n\t\"$uibModalInstance\",\n\t\"faxAccountService\",\n\t\"faxAccount\",\n\t\"masterFaxEnabledInbound\",\n\t\"masterFaxEnabledOutbound\",\n\tfunction ($uibModal,\n\t          $uibModalInstance,\n\t          faxAccountService,\n\t          faxAccount,\n\t          masterFaxEnabledInbound,\n\t          masterFaxEnabledOutbound)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.connectionStatusEnum = Object.freeze({\"unknown\":1, \"success\":2, \"failure\":3});\n\t\tcontroller.coverLetterOptions = [\n\t\t\t\"None\",\n\t\t\t\"Basic\",\n\t\t\t\"Standard\",\n\t\t\t\"Company\",\n\t\t\t\"Personal\"\n\t\t];\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = angular.copy(faxAccount);\n\t\t\t\tif(!controller.faxAccount.connectionStatus)\n\t\t\t\t{\n\t\t\t\t\tcontroller.setDefaultConnectionStatus();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tenableInbound: false,\n\t\t\t\t\tenableOutbound: false,\n\t\t\t\t\taccountLogin: null,\n\t\t\t\t\taccountEmail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tdisplayName: '',\n\t\t\t\t\tcoverLetterOption: '',\n\t\t\t\t\tfaxNumber: '',\n\t\t\t\t\tconnectionStatus: controller.connectionStatusEnum.unknown\n\t\t\t\t};\n\t\t\t}\n\t\t\t// get the master flag status for inbound/outbound settings\n\t\t\tcontroller.masterFaxEnabledInbound = masterFaxEnabledInbound;\n\t\t\tcontroller.masterFaxEnabledOutbound = masterFaxEnabledOutbound;\n\n\t\t\t// switch off settings that are disabled and un-editable.\n\t\t\t// if this is not done, form errors may prevent saving changes to other section\n\t\t\tif(!controller.masterFaxEnabledInbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableInbound = false;\n\t\t\t}\n\t\t\tif(!controller.masterFaxEnabledOutbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableOutbound = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveSettings = function (form)\n\t\t{\n\t\t\tif(!form.$valid)\n\t\t\t{\n\t\t\t\talert(\"The form contains errors\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet closeSuccess = function(updatedAccount)\n\t\t\t{\n\t\t\t\t// keep these settings\n\t\t\t\tupdatedAccount.connectionStatus = controller.faxAccount.connectionStatus;\n\t\t\t\t$uibModalInstance.close(updatedAccount);\n\t\t\t};\n\t\t\tlet closeError = function(error)\n\t\t\t{\n\t\t\t\tconsole.error(error);\n\t\t\t};\n\n\t\t\tif (controller.faxAccount.id)\n\t\t\t{\n\t\t\t\tfaxAccountService.updateAccountSettings(controller.faxAccount.id, controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfaxAccountService.addAccountSettings(controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t};\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.testConnection = function()\n\t\t{\n\t\t\tfaxAccountService.testConnection(controller.faxAccount).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tif(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.success;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.failure;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t\tcontroller.setDefaultConnectionStatus = function()\n\t\t{\n\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxSendReceiveController', [\n\t'NgTableParams',\n\t'providerService',\n\t\"faxAccountService\",\n\t\"faxInboundService\",\n\t\"faxOutboundService\",\n\tfunction (NgTableParams,\n\t          providerService,\n\t          faxAccountService,\n\t          faxInboundService,\n\t          faxOutboundService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.systemStatusEnum = Object.freeze({\"sent\":\"SENT\", \"queued\":\"QUEUED\", \"error\":\"ERROR\"});\n\t\tcontroller.tabEnum = Object.freeze({\"inbox\":0, \"outbox\":1});\n\t\tcontroller.activeTab = controller.tabEnum.outbox;\n\t\tcontroller.loggedInProviderNo = null;\n\n\t\tcontroller.nextPullTime = null;\n\t\tcontroller.nextPushTime = null;\n\n\t\tcontroller.selectedFaxAccount = null;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.outboxItemList = [];\n\t\tcontroller.inboxItemList = [];\n\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.inbox =\n\t\t{\n\t\t\tsearch: {\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting: {\n\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tstartDate: null,\n\t\t\tendDate: null\n\t\t};\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.outbox =\n\t\t\t{\n\t\t\t\tsearch: {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tcount: 10,\n\t\t\t\t\tsorting: {\n\t\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstartDate: null,\n\t\t\t\tendDate: null\n\t\t\t};\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t\tif(controller.faxAccountList.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.selectedFaxAccount = controller.faxAccountList[0];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.loadOutboxItems = function()\n\t\t{\n\t\t\tcontroller.tableParamsOutbox = new NgTableParams(\n\t\t\t\tcontroller.outbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.outbox.search = params.url();\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.outbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.outbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.outbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.outbox.endDate),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getOutbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.outboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsOutbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.outboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load outbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t};\n\n\t\tcontroller.loadInboxItems = function ()\n\t\t{\n\t\t\tcontroller.tableParamsInbox = new NgTableParams(\n\t\t\t\tcontroller.inbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function (params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.inbox.search = params.url();\n\t\t\t\t\t\tconsole.info(controller.inbox);\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.inbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.inbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.inbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.inbox.endDate),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getInbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.inboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsInbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.inboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load inbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.resendFax = function(outboxItem)\n\t\t{\n\t\t\toutboxItem.systemStatus = 'RESEND';\n\t\t\tfaxOutboundService.resendOutboundFax(outboxItem.id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tangular.copy(response, outboxItem);\n\t\t\t\t\tconsole.info(outboxItem);\n\t\t\t\t\tif(outboxItem.systemStatus === controller.systemStatusEnum.error)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(outboxItem.systemStatusMessage);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\toutboxItem.systemStatus = controller.systemStatusEnum.error;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadNextPullTime = function()\n\t\t{\n\t\t\tfaxInboundService.getNextPullTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.loadNextPushTime = function()\n\t\t{\n\t\t\tfaxOutboundService.getNextPushTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.changeTab = function(tabId)\n\t\t{\n\t\t\tcontroller.activeTab = tabId;\n\t\t};\n\n\t\tcontroller.openDocument = function(documentId)\n\t\t{\n\t\t\tlet openDocumentWindow = function()\n\t\t\t{\n\t\t\t\tlet url = \"../dms/showDocument.jsp\";\n\t\t\t\tlet params = \"segmentID=\"+documentId+\"&providerNo=\"+ controller.loggedInProviderNo + \"&status=A&inWindow=true&chartView&demoName=\";\n\t\t\t\tlet windowName = \"ShowDocument\" + documentId;\n\t\t\t\twindow.open(url + \"?\" + params, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t\t};\n\n\t\t\t// if the current provider number is unknown, retrieve it before opening the new window.\n\t\t\tif(controller.loggedInProviderNo == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProviderNo = response.providerNo;\n\t\t\t\t\t\topenDocumentWindow();\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\topenDocumentWindow();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewDownloadFile = function(outboundId)\n\t\t{\n\t\t\tlet url = faxOutboundService.getDownloadUrl(outboundId);\n\t\t\tlet windowName = \"ViewFaxFile\" + outboundId;\n\t\t\twindow.open(url, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t};\n\n\t\tcontroller.formatOptionalDateParam = function(dateObj)\n\t\t{\n\t\t\treturn Juno.Common.Util.isUndefinedOrNull(dateObj)? null : moment(dateObj).format('YYYY-MM-DD')\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.content[x].demographicNo,\n\t\t\t\t\t\t\tname: response.content[x].lastName + ', ' + response.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar refDate = moment(consult.referralDate).toDate();\n\t\t\t\t\t\t\t\trefDate.setMonth(refDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= refDate)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.outstanding = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsole.log(consult);\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\t//set demographic info\n\t\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t\t//set cell phone\n\t\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//set specialist list\n\t\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tangular.forEach(controller.specialists, function(spec)\n\t\t\t{\n\t\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = 0;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\t\t\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar valid = true;\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (controller.invalidData())\n\t\t\t{\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif(valid)\n\t\t\t{\n\t\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\t\tcontroller.setAppointmentTime();\n\n\t\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.id == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(results.id);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(\n\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.setESendEnabled();\n\t\t\t\t\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\t\t\t\t\tcontroller.consultChanged = 0; //reset change count\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdeferred.reject(\"Invalid\");\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\")\n\t\t\t{\n\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$location.path(\"/consults\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndFax = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tvar demographicNo = consult.demographicId;\n\t\t\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\n\t\t\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.print(reqId);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.print = function print(reqId)\n\t\t{\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + reqId + \"&demographicNo=\" + consult.demographicId);\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ', ' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tcontroller.consult = consult;\n\t\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\n\t\t\t\t\t//set default letterhead\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//show referringDoctor in list\n\t\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t\t{\n\t\t\t\tif(consult.referringDoctor !== null)\n\t\t\t\t{\n\t\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set patient cell phone\n\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1px;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","'use strict';\n\nangular.module('Inbox', []);","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\t\t\t}\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, ((page - 1) * count), count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.content);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === \"DOB\")\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = 'Name';\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: \"all\",\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === \"DOB\") ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'General Forms',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/ClientManager.do?method=getGeneralFormsReport'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Registration Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_registration_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Follow-up Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_followup_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Activity Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/Reports/ProgramActivityReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UCF Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../SurveyManager.do?method=reportForm'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SH Mental Health Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_sh_mental_health.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: new Date(),\n\t\t\t\tendDate: new Date(),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportFollowUpIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run follow up intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=indepth&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_followup_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportRegistrationIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run registration intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=quick&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_registration_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportSHMentalHealthController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run sh mental health report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/StreetHealthIntakeReportAction.do?startDate=' + startDate;\n\t\t\twindow.open(url, 'report_sh', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","angular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function(data)\n\t\t\t{\n\t\t\t\talert('saved');\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Help', []);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t$scope.ospInfo = {\n\t\t\tname: 'OscarHost.ca',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Oscarhost Support',\n\t\t\temail: 'support@oscarhost.ca',\n\t\t\turl: 'https://help.oscarhost.ca'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: '15-Beta',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);"],"sourceRoot":""}