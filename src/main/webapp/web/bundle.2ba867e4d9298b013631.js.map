{"version":3,"sources":["webpack:///./generated/JunoInternalApi/ScheduleApi.ts","webpack:///./src/schedule/calendarApiAdapter.ts","webpack:///./src/index.ts","webpack:///./src/help/helpController.js","webpack:///./src/help/supportController.js","webpack:///./src/help/module.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/document/module.js","webpack:///./src/report/reportSHMentalHealthController.js","webpack:///./src/report/reportRegistrationIntakeController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportFollowUpIntakeController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/module.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/inbox/module.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/module.js","webpack:///./src/billing/billingController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/module.js","webpack:///./src/schedule/appointmentViewController.js","webpack:///./src/schedule/appointmentAddController.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/module.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./src/record/details/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/module.js","webpack:///./src/patientlist/patientListProgramController.js","webpack:///./src/patientlist/patientListDemographicSetController.js","webpack:///./src/patientlist/patientListConfigController.js","webpack:///./src/patientlist/patientListAppointmentListController.js","webpack:///./src/patientlist/patientListController.js","webpack:///./src/patientlist/patientListState.js","webpack:///./src/patientlist/module.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/module.js","webpack:///./src/patient/newPatientController.js","webpack:///./src/patient/module.js","webpack:///./src/layout/navBarController.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/module.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/scheduleService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/module.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/module.js","webpack:///./src/common/module.js","webpack:///./cp-calendar/util.js","webpack:///./cp-calendar/event_controller.js","webpack:///./cp-calendar/controller.js","webpack:///./cp-calendar/directive.js","webpack:///./cp-calendar/module.js","webpack:///./app.js","webpack:///./src/consults/common.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/common/util/util.js","webpack:///./src/common/displayMessages.js","webpack:///../webapp/share/javascript/Oscar.js"],"names":["ScheduleApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","addAppointment","newAppointmentTo1","extraHttpRequestParams","httpRequestParams","method","url","data","params","headers","Object","assign","deleteAppointment","appointmentTo1","fetchMonthlyData","year","month","providerNo","localVarPath","replace","encodeURIComponent","String","headerParams","Error","findExistAppointments","demographicNo","getAppointment","getAppointmentReasons","getAppointmentStatuses","console","log","getAppointmentTypes","getAppointmentsForDay","date","getAppointmentsForDay1","getCalendarAppointmentStatuses","getCalendarEvents","providerId","startDate","endDate","site","queryParameters","getScheduleGroups","getScheduleTemplateCodes","updateAppointment","updateAppointmentStatus","id","updateAppointmentType","$inject","exports","ScheduleApi_1","__webpack_require__","moment","CalendarApiAdapter","$q","$stateParams","$uibModal","results_factory","util","demographicsService","scheduleService","globalStateService","focus","patient_model","uuid","full_name","has_photo","patient_photo_url","clear","birth_date","health_number","ontario_version_code","phone_number_primary","fill_data","upload_photo","file","scheduleApi","searchPatients","term","search","type","status","integrator","outofdomain","then","results","resp","x","content","length","push","value_field","lastName","firstName","dob","hin","phone","errors","load_schedule_events","schedule","siteName","start","end","view_name","schedule_templates","event_statuses","default_event_color","availability_types","_this","deferred","defer","startDateString","format","endDateString","subtract","getSchedulesForCalendar","resolve","snake_schedule_results","promise","snake_appointment_data","schedule_uuid","scheduleUuid","event_status_uuid","eventStatusUuid","event_status_modifier","eventStatusModifier","start_time","startTime","end_time","endTime","reason","num_invoices","numInvoices","demographics_patient_dob","demographicPatientDob","demographics_patient_name","demographicPatientName","demographics_patient_phone","demographicPatientPhone","demographics_patient_uuid","demographicPatientUuid","demographics_practitioner_uuid","demographicPractitionerUuid","tag_names","tagNames","tag_self_booked","tagSelfBooked","tag_self_cancelled","tagSelfCancelled","tag_system_codes","tagSystemCodes","snake_availability_type","name","color","preferred_event_length_minutes","preferredEventLengthMinutes","system_code","systemCode","angular","isArray","snake_results","i","result","resourceId","rendering","schedule_template_code","scheduleTemplateCode","className","availability_type","availabilityType","load_schedule_templates","load_availability_types","code","description","duration","load_event_statuses","snake_appointment_statuses","body","snake_data","displayLetter","display_letter","icon","rotates","sort_order","sortOrder","load_sites","getSites","out","siteId","display_name","bgColor","load_schedule_options","identifier","get_selected_schedule","schedule_options","selected_uuid","default_schedule","get_global_state","get_global_preference_setting","exists","get_selected_resources","resource_options","get_selected_time_interval","time_interval_options","default_time_interval","selected_time_interval","time_interval","get_schedule_min_time","get_schedule_max_time","load_schedule","availabilities","relations","save_event","edit_mode","event_uuid","start_datetime","end_datetime","event_data","selected_event_status_uuid","patient_uuid","site_uuid","appointment","appointmentDate","get_date_string","get_time_string","diff","asMinutes","notes","location","reject","process_save_results","key","preferences","settings","setting","save_global_state","value","get_create_invoice_url","get_patient_demographic_url","event","get_create_chart_note_url","open_patient_dialog","edit_mode_callback","on_save_callback","load_error_link_patient_fn","open","animation","backdrop","size","controller","templateUrl","get_schedule_height","calendarApiAdapter_1","module","service","$scope","ospInfo","contact","email","buildInfo","versionDisplayName","version","$uibModalInstance","qll","close","addQuickLink","qlForm","$valid","changePassword","$state","$filter","providerList","user","billingServiceTypes","loadedSettings","providerService","encounterForms","eforms","teams","groupNames","loadedApps","appService","$emit","pref","recentPatients","formGroupNames","label","billingServiceTypesMod","copy","splice","appointmentScreenForms","selected","formName","checked","appointmentScreenEforms","tabs","displayName","path","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","current","currentTab","tab","isActive","changeTab","go","save","newList","appointmentScreenQuickLinks","saveSettings","alert","cancel","selectEncounterForms","tmp","selectEForms","removeQuickLinks","openChangePasswordModal","window","openQuickLinkModal","selectedItem","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","getApps","errorMessage","securityService","me","$watch","getUser","newVal","openPopup","$log","Date","generateReport","includePastForms","searchProviders","val","searchTerm","active","updateProviderNo","item","model","p","age","response","region","reset","factory","$rootScope","load","msg","ReportNavigation","reports","iframeUrl","group","init","reportGroup","reportGroups","getReportGroups","reportSidebar","test","editDemographicSet","selectReport","getReports","groups","groupMap","report","currentReport","direct","width","height","total","currentPage","pageSize","startIndex","doImport","d","myUrl","remoteFacilityId","prevPage","nextPage","NgTableParams","demographicReadAccess","clearParams","Juno","Common","Util","hasRights","items","objectName","privilege","initTable","tableParams","page","count","sorting","Name","getData","promiseArray","integratorResults","searchIntegrator","all","demographicSearchResults","promiseErrors","dobMoment","isValid","reload","searchType","searchTermPlaceHolder","toggleParam","param","indexOf","loadRecord","hideNote","showIntegratorResults","$","$resource","$location","consultService","demographicService","summaryService","staticDataService","consult","hasRight","consultReadAccess","consultUpdateAccess","consultWriteAccess","letterheadList","toArray","referringDoctorList","faxList","sendToList","attachments","Consults","sortAttachmentDocs","letterheadName","letterheadAddress","address","letterheadPhone","letterheadFax","faxNumber","forEach","referringDoc","referringDoctor","demographic","extras","cellPhone","urgencies","getConsultUrgencies","statuses","getConsultResponseStatuses","hours","getHours","minutes","getMinutes","parseTime","time","tArray","split","appointmentHour","appointmentMinute","appointmentTime","consultChanged","$watchCollection","$on","confirm","preventDefault","changeLetterhead","index","selectedIndex","writeToBox","boxId","summaryItem","boxData","addNewLine","clinicalInfo","concurrentProblems","currentMeds","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","invalidData","urgency","isUndefinedOrNull","setAppointmentTime","apptTime","now","set","openAttach","attachment","attachFiles","windowClass","attachmentsChanged","consultSaving","saveResponse","list","p_page1","sendFax","p_urgency","toTrimmedString","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","reqId","fax","printPreview","printWin","document","p_attachments","write","p_clinicName","p_responseDate","formatDate","responseDate","p_referralDate","referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","alternativePhone","p_patientBirthdate","dateOfBirth","p_patientSex","sexDesc","p_patientHealthCardNo","ver","p_patientChartNo","chartNo","p_patientAddress","city","province","postal","p_appointmentDate","p_appointmentTime","formatTime","p_reason","reasonForReferral","examination","impression","plan","allergies","$timeout","onRecordPage","lastResponse","team","numToReturn","parseInt","getAccessRights","getTeams","getActiveTeams","unshift","searchMrps","mrpNo","updateMrpNo","Number","mrpName","getProvider","doSearch","updateDemographicNo","demographicName","checkAll","checkNone","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","ReferralDate","getSavedSearchParams","_params","perPage","myRegexp","match","exec","sortColumn","sortDirection","tmpSearch","searchResponses","meta","j","statusDescription","urgencyDescription","urgencyColor","hideSearchPatient","srhDemoNo","srhMrpNo","referralStartDate","referralEndDate","appointmentStartDate","appointmentEndDate","countPerPage","toPage","serviceList","getConsultRequestStatuses","getDemographic","demographicId","letterhead","serviceId","specialists","spec","professionalSpecialist","oldVal","newLetterheadName","changeService","getAllergies","patientWillBook","setESendEnabled","eSendEnabled","eDataUrl","trim","saveRequest","noNull","eSend","eSendRequest","message","JSON","stringify","searchParams","searchDemoNo","setSearchParams","$current","srhStatus","srhTeam","srhRefStartDate","getTime","srhRefEndDate","srhApptStartDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","getSavedSearchVals","search1","searchRequests","dp","rDate","setMonth","getMonth","outstanding","sortMode","popup","vheight","vwidth","varpage","winname","windowprops","opener","self","atth","patientName","attachedDocs","selectedAttachedDoc","consultId","getResponseAttachments","availableDocs","selectedAvailableDoc","openDoc","doc","attach","attached","detach","done","getRequestAttachments","removeIndex","map","documentNo","documentType","selectionIndex","reportByTemplateService","k2aService","k2aActive","k2aReports","K2A_URL","dtOptions","checkStatus","isK2AInit","error","getAllK2AReports","saveK2AReport","getK2AReportById","refreshParent","openK2AUrl","getK2AUrl","href","onunload","notifications","readMore","notif","getMoreNotification","archive","ackNotification","getNotifications","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","clinicName","getPreventionRulesList","getCurrentPreventionRulesVersion","preventionRulesList","loadPreventionRuleById","prevSet","increasePrevListQuantity","initK2A","info","statusList","appointmentUpdate","appointmentWriteAccess","getStatus","providerName","editProvider","showProviderFormControl","provider","updateProvider","needsUpdate","cancelProviderUpdate","showAppointmentHistory","appointmentHistory","noShowAppointment","cancelAppointment","apptDate","types","formattedName","resources","critical","getTypes","selectType","validate","t","showErrors","startTime12hWithMedian","uiConfig","selectedSchedule","selectedSiteName","selectedTimeInterval","selectedResources","cpCalendarControl","isSchedulingEnabled","isInitialized","callCalendarMethod","hasSchedules","hasSites","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","isDefined","selectedSite","viewName","showTimeIntervals","onScheduleChanged","onSiteChanged","onTimeIntervalChanged","saveGlobalState","calendar","slotDuration","slotLabelInterval","changeView","view","showLegend","isAgendaView","args","isFunction","apply","tickler","ticklerNote","noteService","originalNote","note","saveTicklerNote","ticklerService","demographicSearch","template","serviceDateDate","serviceDateTime","suggestedTextId","priorities","timepicker","defaultTime","getTextSuggestions","textSuggestions","suggestedText","taskAssignedTo","priority","givenDate","givenTime","setHours","get","setMinutes","serviceDate","add","demo","taskAssignedToName","setSuggestedText","addMonthsFromNow","num","toDate","ticklerWriteAccess","ticklerUpdate","serviceDateInput","serviceTimeInput","showUpdates","showComments","showCommentFormControl","selectedStatus","find","newValue","newDate","finalVal","updateTaskAssignedTo","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","tp","serviceTime","isNaN","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","updateDate","newComment","cancelCommentUpdate","saveChanges","postData","update","completeTickler","setCompleted","deleteTickler","setDeleted","printTickler","providers","ticklerAPI","ticklerReadAccess","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","getTicklerNote","getMe","editNote2","editor","noteId","observationDate","revision","printArea","print","input","tableName","tableId","uxService","getTrackerUrl","resizeIframe","iframe","h","contentWindow","scrollHeight","formService","currentFormList","currentForm","currentlistId","isUndefined","formlists","changeTo","listId","getAllFormsByHeading","debug","viewFormState","getElementById","hasChildNodes","removeChild","firstChild","rnd","Math","round","random","win","pymParent","pym","Parent","getListClass","getActiveFormClass","formId","keypress","altKey","currIdx","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","buildDate","day","dateEmpty","date3Valid","$window","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","hcParts","phoneNum","defPhTitle","prefPhTitle","properties","$parent","recordCtrl","initDemographicVars","checkAccess","getBySecurityRole","doctors","nurses","midwives","getDemographicContacts","demoContacts","demoContactShow","demoContactPros","scrNotes","substring","lastIndexOf","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrPaperChartArchivedDate","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","waitingListNames","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","genders","getGenders","titles","getTitles","provinces","getProvinces","countries","getCountries","engFre","getEngFre","spokenlangs","getSpokenLanguages","rosterTermReasons","getRosterTerminationReasons","securityQuestions","getSecurityQuestions","rxInteractionLevels","getRxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","billregion","defaultView","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","getStatusList","rosterStatusList","patientStatusList","calcAge","dobYear","dobMonth","dobDay","formatLastName","formatFirstName","setSwipeReady","validateHCSave","sin","effDate","hcRenewDate","rosterDate","rosterTerminationDate","patientStatusDate","dateJoined","onWaitingListSinceDate","canRead","cannotChange","checkAction","stopPropagation","oldValue","onbeforeunload","toUpperCase","readyForSwipe","swipecardMsg","swipecard","healthCardHandler","keycode","swipeCardData","namePos","endNamePos","isNumber","healthCardUpdateDemographics","validateHC","hcType","hcTypeColor","lastNameColor","firstNameColor","hinColor","verColor","hcSex","sex","sexColor","dateParts","dobYearColor","dobMonthColor","dobDayColor","swipeDate","effDateColor","hcRenewDateColor","hinExpDate","valid","HCValidation","responseDescription","responseCode","checkHin","checkHinVer","checkDate","charAt","toString","checkYear","checkMonth","daysOfMonth","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","getFullYear","getDate","dateValid","isPostalComplete","isPostalValid","resetEditState","RegExp","checkEmail","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","n","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchName","searchReferralDocs","searchReferralDocsRefNo","searchRefNo","searchReferralDoctors","referralDoctors","Array","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doSave","isUniqueHC","success","saving","newDemoExtras","updateDemographic","maxDaysOfMonth","s","demoContact","contactShow","role","sdm","ec","category","obj","formListId","adminAccess","adminEformAccess","hasAdminAccess","encounterFormlist","formGroups","getFormGroups","formOptions","favouriteGroup","getFavouriteFormGroup","getFormOptions","getCompletedEncounterForms","getSelectedEncounterForms","queryName","formValue","animate","scrollTop","maxheight","max","offsetHeight","style","isEmpty","hasOwnProperty","currentEformGroup","setCurrentEFormGroup","mod","openFormFromGroups","formOption","opt","atleastOneItemSelected","extra","docIds","isChecked","getGroupListClass","grp","currentState","keyCode","saveSignNote","cancelNoteEdit","dismiss","clearChanges","$interval","action","diseaseRegistryService","title","quickLists","summaryCode","groupNotesForm","assignedCMIssues","encounterNote","position","annotation_attrib","getIssueQuickLists","addDxItem","issue","codingSystem","findDxIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","displayIssueId","issueCode","getIssueId","issueId","displayGroupNote","itemId","getIssueNote","editorNames","groupNoteExt","setAvailablePositions","removeEditingNoteFlag","itemExtra","availablePositions","changeNote","saveGroupNotes","cpp","editable","isSigned","appointmentNo","encounterType","encounterTime","assignedIssues","saveIssueNote","transitionTo","inherit","notify","removeGroupNoteIssue","unchecked","doSetEditingNoteFlag","setEditingNoteFlag","editingNoteId","itvSet","itvCheck","checkEditNoteNew","removeIssue","restoreIssue","archiveGroupNotes","archived","openRevisionHistory","searchIssues","assignIssue","getIssue","isSelected","addToDxRegistry","pageOptions","printType","dates","selectedWarning","atleastOneSelected","printToday","cancelPrint","sendToPhr","queryString","selectedList","join","ops","columnOne","modules","columnThree","selectedNotes","notelist","busy","noteFilter","currentFilter","onlyNotes","onlyMine","cannotAdd","openRx","demoNo","openAllergies","openPreventions","openAssessments","addMoreItems","getNotesFrom","editNote","editGroupNote","findGroupNote","gotoState","moduleList","summaryItems","k","currentEditNote","isNoteBeingEdited","noteFound","notecount","isRegularNote","rxAnnotation","eformData","encounterForm","invoice","setColor","border-left-color","showNoteHeader","showNote","deleted","getNoteHeader","noteObj","trackerUrl","toggleList","displaySize","showMoreItems","isSectionExpanded","isSectionEmpty","isUnsignedEncounterNote","getSummaryHeaders","fillItems","summaryLists","itemsToFill","getFullSummary","editGroupedNotes","viewEform","eFormId","viewDocument","documentId","itemArray","showPrintModal","toggleIsSelectedForPrint","zero","$localStorage","billingService","isNoteSaved","$storage","recordtabs2","fillMenu","menu","temp","currenttab2","isDefinedAndNotNull","state","demoId","timeout","saveUpdates","initNote","tmpSave","skipTmpSave","saveIntervalSeconds","totalSeconds","myVar","setInterval","setTime","innerHTML","pad","css","valString","getCurrentTimerToggle","toggleTimer","hasClass","removeClass","addClass","clearInterval","pasteTimer","ed","toggleNote","getCurrentNote","saveNote","issueDescriptions","isInArray","saveSignVerifyNote","isVerified","getBillingRegion","getDefaultView","saveSignBillNote","dxCode","apptNo","apptProvider","apptStartTime","dt","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","displayWarning","noteEditorText","searchTemplates","templates","encounterTemplateName","insertTemplate","getTemplate","encounterTemplateValue","options","magicVal","noteToEdit","$broadcast","mediumNavItemFilter","inverse","filterValue","inArray","updateData","Content-Type","admissions","Navigation","sets","config","patientListConfig","saveConfiguration","patientListState","dateOptions","showWeeks","getStatuses","getAppointmentTextStyle","patient","getAppointmentStyle","background-color","today","$event","opened","AddDays","noOfDays","switchDay","dateNew","formattedDate","changeApptList","changeApptDate","currenttab","tabItems","lastIndx","slice","showFilter","addNewAppointment","viewAppointment","angularUtil","personaService","sidebar","goToRecord","encType","inMobileView","hidePatientList","query","isMoreActive","currentmoretab","showPatientList","changeMoreTab","filter","moreTabItems","refresh","getMoreTabClass","patients","numberOfPages","nPages","ceil","changePage","pageNum","process","httpType","dataType","arr","getRecentPatientList","recentPatientList","getPatientListConfig","numberOfApptstoShow","getTabItems","manageConfiguration","setPatientListConfig","prefs","dashboardPreferences","updateDashboardPreferences","messageService","inboxService","displayDate","k2aFeedActive","busyLoadingData","getDashboardPreferences","inboxTableParams","getDashboardItems","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","removeK2AComment","agreeId","agreeCount","disagree","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","postK2AComment","post","commentCount","comments","updateTicklers","creator","overdueOnly","totalTicklers","ticklers","updateMessages","getUnread","totalMessages","messages","updateReports","inbox","totalInbox","startPoint","numberOfRows","getK2aFeed","concat","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","parse","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","programService","submitDisabled","getPrograms","programs","admissionProgramId","ngModelContoller","isCorrectDate","demoRetVal","saveDemographic","ok","capName","unAckLabDocTotal","unreadMessageTotal","billRegion","searchRights","newDemographicRights","messageRights","getDashboardMenu","menus","dashboardMenu","getNavBar","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","getUnAckLabDocCount","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","new_value","isTypeaheadSearchQuery","moreResults","goToPatientSearch","searchQuery","goToPatientRecord","getUnreadCount","onPatientSearch","transition","newWindow","wname","qs","openNewWindow","openMessenger","newDemographic","changeProgram","programId","setCurrentProgram","smallNavItemFilter","setUser","directive","restrict","require","link","scope","element","attrs","ctrl","$formatters","pad_length","caZeroPad","$parsers","on","e","$parse","scrollHandler","resizeHandler","modelSetter","fileModel","bind","$apply","files","$compile","$eval","compileHtml","jsp","contents","$document","eventName","attribute","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","scrollLeft","update_search_results_footer","offset","top","ngModel","toolbar","container","image-tooltip","link-tooltip","theme","extraOptions","quill","extend","Quill","children","$render","delta","source","getHTML","$setViewValue","setHTML","$viewValue","pagination","change_page_callback","mode","change_page","page_number","current_page","total_pages","expand_ellipsis","go_to_page_num","select","close_ellipsis","go_to_page","isIntegerString","page_int","key_combo","callback_fn","key_bind_settings","hierarchy","parents","each","attributes","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","field_value_map","success_message","field_value_map_label_key","display_field_errors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","has_sub_errors","isString","isObject","error_link_has_function","error_link","error_links","execute_error_link_fn","should_display_field_errors","has_field_errors","attr","field_controllers","field","ignore","ignore_focus_field","form_nav","focus_field","helper","default_scope","true_text","false_text","true_value","false_value","resolve_template","default_link_function","default_controller","minute_step","picker_container","toggle_widget","minuteStep","icons","up","down","rows","max_characters","old_value","error_message","include_empty_option","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","change_fn","merge_title_messages","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","on_focus","open_date_picker","focus_fn","on_click","new_is_multi_date","on_focus_fn","is","input_box","caDatePickerId","dropdown","footer","replaceWith","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","ngModelController","text","tempValue","parseFloat","toFixed","currencyFilter","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","global_state","autocomplete","min_length_zero_types","placeholder","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","ca_exclude_list","search_field","keys","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","input_placeholder","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","$item","$model","$label","create_on_not_found_fn","temp_model","on_change","build_model_object","on_blur","model_on_focus","blur_fn","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","in_list","ii","exclude_item","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","disabled","momentDate","elem","draggable","axis","containment","callback","resizable","handles","minHeight","minWidth","maxWidth","innerWidth","maxHeight","innerHeight","evt","ui","newHeight","showIcon","disableInput","openDatepicker","typeaheadHelper","defaultTypeaheadScope","initTypeahead","forceSelection","findMatches","formatMatchSelection","typeaheadLabel","optionsTemplateUrl","quickSearch","matches","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","searchField","typeaheadModelOptions","debounce","default","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","onSelect","onBlur","onChange","createDummySelection","onSearch","onAdd","wordwise","tail","substr","lastspace","years","months","days","junoHttp","apiPath","ServiceHelper","configHeaders","searchSpecialists","itemsToReturn","getDisplayProperties","ticklerIds","limit","getRiskFactors","langs","reasons","questions","levels","u","configHeadersWithCache","listOfItems","isAllowedAccessToPatientRecord","has_one_of_permissions","permission_array","has_permission","permission","getAppointments","results_hash","meta_hash","results_object","has_results","error_type","equals","per_page","searchText","searchMode","getByType","getSettings","healthCardNo","versionCode","numberToReturn","noteConfig","getNoteExt","ticklerId","noteUUID","userId","transferObj","commentItem","commentId","del","global_settings","interface_preferences","scheduler_license_key","heading","getAllEncounterForms","getAllEForms","getGroupNames","selector","first_form_input","first","first_error_input","opts","first_alert","scroll_offset","form_group_class","label_size","input_size","text_length","hide_label_colon","hint","tab_index","warning_message","depends_on_field","depends_on_value","hide","base_default_template","title_array","title_string","$element","$attrs","errors_hash","DisplayMessages","getQuickLists","disease","issueToSend","jsonData","listType","contactCategory","put","getRequest","requestId","followUpDate","getNewRequest","request","getResponse","responseId","getReferralPathwaysByService","serviceName","getUniqueServiceTypes","errorsz","http_util","request_hash","success_function","errors_function","progress","request_result","call","mergeHash","datetime_format","time_format","date_format","dayofweek_format","is_integer_string","string","escape_html","str","entityMap","&","<",">","\"","'","/","get_datetime_moment","datetime_string","utc","get_date_moment","date_string","get_time_moment","time_string","get_date_and_time_moment","validate_date_string","display_errors","required","add_field_error","validate_time_string","datetime_range_overlaps","first_start_moment","first_end_moment","second_start_moment","second_end_moment","isBefore","isAfter","sort_by_property_fn","sort_col","sort_dir","a","b","create_availability_events","event_array","availability","event_start","event_end","fullCalendar","availability_type_uuid","create_background_events","create_relation_events","relation","schedule_template_uuid","relation_start","start_date","relation_end","end_date","processing_date","hour","minute","second","milliseconds","unix","create_template_events","available_time_ranges","get_available_time_ranges","events","overlapping_events","get_overlapping_events","available_time_range","overlapping","overlaps","bg_event","sort","moment_date","toLowerCase","process_time_periods","schedule_template_days","template_day","day_of_the_week","schedule_template_time_periods","time_period","clone","messages_factory","access_control","key_binding","parent_scope","last_event_length","calendar_api_adapter","autocomplete_values","active_template_events","event_status_options","selected_event_status","default_event_status","selected_site_name","timepicker_format","field_value_mapping","display_messages","initialized","working","moment_start","moment_end","set_active_template_events","set_selected_event_status","init_patient_autocomplete","adjust_end_datetime","init_autocomplete_values","get_inclusive_days","moment_day","active_events","formatted_time","date_start","date_end","grep","ev","length_minutes","new_event_length","update_last_event_length","event_length","validate_form","has_errors","isSame","add_standard_error","delete_event","time_str","new_start_date","old_start_date","new_start_time","old_start_time","new_end_date","old_end_date","new_end_time","old_end_time","loaded_new_photo","preview_patient_image","new_photo","is_working","is_initialized","is_patient_selected","clear_patient","on_select_patient","set_event_length","refetch_events","add_generic_fatal_error","delete","save_and_bill","open_create_invoice","view_invoices","open_view_invoices","create_patient","create_patient_dialog","on_patient_modal_save","modify_patient","modify_patient_dialog","ctrl+enter","tooltip","target","ctrl+shift+enter","bind_key_global","uiCalendarConfig","availability_type_model","calendar_name","event_sources","min_height","default_calendar_view","default_auto_refresh_minutes","default_date","selected_schedule","resource_option_hash","selected_resources","sites","site_options","rotate_statuses","schedules","calendar_loading","opening_dialog","dialog","calendars","show_schedule_select","show_time_intervals","selected_date","ui_config","schedulerlicensekey","calendar_view_name","load_site_options","load_default_selections","load_selected_schedules","set_calendar_resources","set_event_sources","init_events_auto_refresh","on_schedule_changed","on_time_interval_changed","on_resources_changed","selected_resource_uuids","updated_resources","on_view_render","after_render","click","on_event_clicked","calEvent","jsEvent","rotate_event_status","parent","open_patient_demographic","open_create_chart_note","open_edit_event_dialog","on_event_drop","revertFunc","set_calendar_loading","drop_event","update_event","on_event_resize","resize_event","get_icon_path","status_modifier","modifier_string","on_event_render","event_site_html","event_site","event_status_html","event_status","event_invoice_html","event_details","event_details_html","event_demographic_html","event_note_html","event_tags_html","tag_class","html","change_view","reload_schedules","update_calendar_view","select_resources","preselections","on_update_callback","closed","show_legend","cal_event","open_create_event_dialog","resource","get_loaded_schedule","new_event_status_uuid","time_interval_minutes","catch","res","event_status_color","event_class","window_scope","is_loading","calendar_events","timezone","promise_array","results_array","schedule_events","err","schedule_data","providerNos","build_selected_resources","set_schedule_hour_range","min_time","minTime","max_time","maxTime","scrollTime","create_invoice_callback","nowIndicator","header","left","center","right","allDaySlot","defaultDate","slotLabelFormat","loading","selectable","eventClick","eventRender","viewRender","eventAfterAllRender","eventDrop","eventResize","$injector","control","calendarWatchEvent","has_schedules","has_sites","get_schedule_options","get_site_options","get_time_interval_options","cpCalendarCalendarApiAdapter","cpCalendarAccessControl","cpCalendarAutoComplete","cpCalendarGlobalState","cpCalendarPatientModel","$stateProvider","$urlRouterProvider","otherwise","dynamic","arrayOfDocs","doc1","doc2","Accept","cache","object","isBlank","pad0","line","mssg","currDate","array","baseHash","toMerge","objectArrayIndexOf","property","len","messages_hash","field_errors_label_map","field_errors_label_map_key","extra_info","saving_message","force_field_error_arrays","merge","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","has_standard_errors","standard_errors","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","field_errors","prepend_label","has_one_of_field_error","has_field_error","has_indexed_field_error","field_error_string","concat_string","remove_field_error","has_error_links","add_error_link","out_field_errors","merge_messages","merge_display_messages","standard_infos","windowName","popup2","w","getElementsByTagName","clientWidth","clientHeight","winRefs","resizeTo","confirmNGo","showHideItem","display","showItem","hideItem","validDate","validDateText","completeRawDate","delimiter","dateArray","dateObject","validDateFieldsByClass","parentEle","datefields","getElementsByClassName","getMouseCoords","posx","posy","pageX","pageY","clientX","clientY","documentElement","master","chkList","oscarLog","grabEnter","callb","which","eval","isNumericInt","sText","chara","isNumeric","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","arrReturnElements","oAttributeValue","getAttribute"],"mappings":"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","file":"bundle.2ba867e4d9298b013631.js","sourcesContent":["/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param newAppointmentTo1 \n     */\n    public addAppointment (newAppointmentTo1?: models.NewAppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/add';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: newAppointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public deleteAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<{}> {\n        const localVarPath = this.basePath + '/schedule/deleteAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param year \n     * @param month \n     * @param providerNo \n     */\n    public fetchMonthlyData (year: number, month: number, providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/fetchMonthly/{providerNo}/{year}/{month}'\n            .replace('{' + 'year' + '}', encodeURIComponent(String(year)))\n            .replace('{' + 'month' + '}', encodeURIComponent(String(month)))\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'year' is not null or undefined\n        if (year === null || year === undefined) {\n            throw new Error('Required parameter year was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'month' is not null or undefined\n        if (month === null || month === undefined) {\n            throw new Error('Required parameter month was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling fetchMonthlyData.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param demographicNo \n     */\n    public findExistAppointments (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling findExistAppointments.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public getAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/getAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n        console.log(localVarPath);\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param date \n     */\n    public getAppointmentsForDay (providerNo: string, date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.PatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/{providerNo}/day/{date}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay1 (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.PatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerId \n     * @param startDate \n     * @param endDate \n     * @param site \n     */\n    public getCalendarEvents (providerId: number, startDate?: string, endDate?: string, site?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarEvent> {\n        const localVarPath = this.basePath + '/schedule/calendar/{providerId}'\n            .replace('{' + 'providerId' + '}', encodeURIComponent(String(providerId)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerId' is not null or undefined\n        if (providerId === null || providerId === undefined) {\n            throw new Error('Required parameter providerId was null or undefined when calling getCalendarEvents.');\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public updateAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/updateAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentStatus (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateStatus'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentType (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateType'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentType.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","\nimport {ScheduleApi} from \"../../generated/JunoInternalApi/ScheduleApi\";\nimport {\n\tCalendarAppointmentStatus, NewAppointmentTo1, SchedulingResponse\n} from \"../../generated\";\nimport {modal} from 'angular-ui-bootstrap/src/modal';\nimport * as moment from 'moment';\nimport {\n\tIHttpParamSerializer,\n\tIHttpResponse,\n\tIHttpService,\n\tIQService\n} from \"../../node_modules/@types/angular\";\nimport {IStateParamsService} from \"../../node_modules/@types/angular-ui-router\";\nimport {IModalService} from \"../../node_modules/@types/angular-ui-bootstrap\";\n\nexport class CalendarApiAdapter\n{\n\tstatic $inject = [\n        '$q',\n        '$stateParams',\n        '$uibModal',\n\t\t'$http',\n\t\t'$httpParamSerializer',\n\n        'resultsService',\n\n        'cpCalendar.Util',\n\n        'demographicsService',\n        'scheduleService',\n        'globalStateService',\n\t\t'focusService',\n\t];\n\n\tconstructor(\n        private $q: IQService,\n        private $stateParams: IStateParamsService,\n        private $uibModal: IModalService,\n        private $http: IHttpService,\n        private $httpParamSerializer: IHttpParamSerializer,\n\n        private results_factory,\n\n        private util,\n\n        private demographicsService,\n        private scheduleService,\n        private globalStateService,\n\t\tpublic focus\n\t){}\n\n\n\tevent_statuses: null;\n\tdefault_event_color: null;\n\n\tpatient_model = {\n\t\tuuid: null,\n\t\tfull_name: null,\n\t\thas_photo: true,\n\t\tpatient_photo_url: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\tclear: function clear(){\n\t\t\tthis.uuid = null;\n\t\t\tthis.full_name = null;\n\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\tthis.data.birth_date = null;\n\t\t\tthis.data.health_number = null;\n\t\t\tthis.data.ontario_version_code = null;\n\t\t\tthis.data.phone_number_primary = null;\n\t\t},\n\t\tfill_data: function fill_data(data){\n\t\t\tthis.uuid = data.uuid;\n\t\t\tthis.full_name = data.full_name;\n\t\t\tthis.patient_photo_url = '/imageRenderingServlet?source=local_client&clientId=' + data.uuid;\n\t\t\tthis.data.birth_date = data.birth_date;\n\t\t\tthis.data.health_number = data.health_number;\n\t\t\tthis.data.ontario_version_code = data.ontario_version_code;\n\t\t\tthis.data.phone_number_primary = data.phone_number_primary;\n\t\t},\n\t\tupload_photo: function upload_photo(file){},\n\t\tdata: {\n\t\t\tbirth_date: null,\n\t\t\thealth_number: null,\n\t\t\tontario_version_code: null,\n\t\t\tphone_number_primary: null\n\t\t}\n\t};\n\n\tscheduleApi = new ScheduleApi(this.$http, this.$httpParamSerializer, 'http://localhost:9090/ws/rs');\n\n\n\tpublic searchPatients(term)\n\t{\n\t\tvar search = {\n\t\t\ttype: 'Name',\n\t\t\t'term': term,\n\t\t\tstatus: 'active',\n\t\t\tintegrator: false,\n\t\t\toutofdomain: true\n\t\t};\n\n\t\treturn this.demographicsService.search(search, 0, 25).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push({\n\t\t\t\t\t\tvalue_field: 'uuid',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuuid: results.content[x].demographicNo,\n\t\t\t\t\t\t\tfull_name: results.content[x].lastName + ',' + results.content[x].firstName,\n\t\t\t\t\t\t\tbirth_date: results.content[x].dob,\n\t\t\t\t\t\t\thealth_number: results.content[x].hin,\n\t\t\t\t\t\t\tphone_number_primary: results.content[x].phone\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t}\n\n\tpublic load_schedule_events(schedule, siteName, start, end, view_name, schedule_templates,\n\t\tevent_statuses, default_event_color, availability_types)\n\t{\n\t\t//console.log(\"FETCHING: \" + providerId + \" \" + start.format(\"YYYY-MM-DD\") + \" \" + end.subtract(1, \"seconds\").format(\"YYYY-MM-DD\"));\n\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar providerId = schedule.uuid;\n\n\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t// the end time to convert to the correct date.\n\t\tvar startDateString = start.format(\"YYYY-MM-DD\");\n\t\tvar endDateString = end.subtract(1, 'seconds').format(\"YYYY-MM-DD\");\n\n\t\tthis.scheduleService.getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDateString,\n\t\t\tendDateString,\n\t\t\tsiteName\n\t\t).then((results) =>\n\t\t{\n\t\t\t// Transform from camel to snake.  Normally this wouldn't need to happen, but\n\t\t\t// this is an external library that requires a certain format.\n\t\t\tdeferred.resolve({data: this.snake_schedule_results(results)});\n\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate snake_appointment_data(data)\n\t{\n\t\tif(data == null)\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\treturn {\n\t\t\tschedule_uuid: data.scheduleUuid,\n\t\t\tevent_status_uuid: data.eventStatusUuid,\n\t\t\tevent_status_modifier: data.eventStatusModifier,\n\t\t\tstart_time: data.startTime,\n\t\t\tend_time: data.endTime,\n\t\t\tsite: data.site,\n\t\t\treason: data.reason,\n\t\t\tnum_invoices: data.numInvoices,\n\t\t\tdemographics_patient_dob: data.demographicPatientDob,\n\t\t\tdemographics_patient_name: data.demographicPatientName,\n\t\t\tdemographics_patient_phone: data.demographicPatientPhone,\n\t\t\tdemographics_patient_uuid: data.demographicPatientUuid,\n\t\t\tdemographics_practitioner_uuid: data.demographicPractitionerUuid,\n\t\t\ttag_names: data.tagNames,\n\t\t\ttag_self_booked: data.tagSelfBooked,\n\t\t\ttag_self_cancelled: data.tagSelfCancelled,\n\t\t\ttag_system_codes: data.tagSystemCodes\n\t\t};\n\t}\n\n\tprivate snake_availability_type(data)\n\t{\n\t\tif(data == null)\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\treturn {\n\t\t\tname: data.name,\n\t\t\tcolor: data.color,\n\t\t\tpreferred_event_length_minutes: data.preferredEventLengthMinutes,\n\t\t\tsystem_code: data.systemCode,\n\t\t};\n\t}\n\n\tprivate snake_schedule_results(results)\n\t{\n\t\tif(!angular.isArray(results))\n\t\t{\n\t\t\treturn results;\n\t\t}\n\n\t\tvar snake_results = [];\n\n\t\tfor(var i = 0; i < results.length; i++)\n\t\t{\n\t\t\tvar result = results[i];\n\t\t\tsnake_results.push({\n\t\t\t\tresourceId: result.resourceId,\n\t\t\t\tstart: result.start,\n\t\t\t\tend: result.end,\n\t\t\t\tcolor: result.color,\n\t\t\t\trendering: result.rendering,\n\t\t\t\tschedule_template_code: result.scheduleTemplateCode,\n\t\t\t\tclassName: result.className,\n\t\t\t\tavailability_type: this.snake_availability_type(result.availabilityType),\n\t\t\t\tdata: this.snake_appointment_data(result.data),\n\t\t\t});\n\t\t}\n\n\t\treturn snake_results;\n\t}\n\n\tpublic load_schedule_templates()\n\t{\n\t\t// XXX: can't implement this because it requires the date range and provider number\n\t\t// because oscar stores it's templates per day and provider\n\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar schedule_templates = {};\n\t\tvar promise_array = [];\n\n\t\tdeferred.resolve([]);\n\t\t/*\t\t\t\tschedule_template_model.list().then(\n\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor(var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar result = results.data[i];\n\t\t\t\t\t\t\t\t\tpromise_array.push(schedule_template_model.load(result.uuid));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(\n\t\t\t\t\t\t\tfunction success()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$q.all(promise_array).then(\n\t\t\t\t\t\t\t\t\tfunction success(results_array)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor(var i=0; i<results_array.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar result = results_array[i].data;\n\t\t\t\t\t\t\t\t\t\t\tschedule_templates[result.uuid] = result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdeferred.resolve(schedule_templates);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});*/\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic load_availability_types()\n\t{\n\t\tvar deferred = this.$q.defer();\n\t\tvar availability_types = {};\n\n\t\tthis.scheduleService.getScheduleTemplateCodes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\t/*\tExample JSON result (P is the oscar scheduletemplatecode.code)\n\t\t\t\tvar example_result = {\n\t\t\t\t\tP: {\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\tname: \"Do Not Book\",\n\t\t\t\t\t\tpreferred_event_length_minutes: null,\n\t\t\t\t\t\tsystem_code: \"unavailable\",\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\t*/\n\n\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\tavailability_types[result.code] = {\n\t\t\t\t\t\tcolor: result.color,\n\t\t\t\t\t\tname: result.description,\n\t\t\t\t\t\tpreferred_event_length_minutes: result.duration,\n\t\t\t\t\t\tsystem_code: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdeferred.resolve(availability_types);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic load_event_statuses()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\t//this.scheduleService.getAppointmentStatuses().then(\n\t\tthis.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t(results) => {\n\t\t\t\tdeferred.resolve(CalendarApiAdapter.snake_appointment_statuses(results.data.body));\n\t\t\t}\n\t\t);\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate static snake_appointment_statuses(data: Array<CalendarAppointmentStatus>)\n\t{\n\t\tif (!angular.isArray(data))\n\t\t{\n\t\t\treturn data;\n\t\t}\n\n\t\tvar snake_data = [];\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tsnake_data.push({\n\t\t\t\tuuid: data[i].displayLetter,\n\t\t\t\tname: data[i].name,\n\t\t\t\tdisplay_letter: data[i].displayLetter,\n\t\t\t\tcolor: data[i].color,\n\t\t\t\ticon: data[i].icon,\n\t\t\t\trotates: data[i].rotates,\n\t\t\t\tsystem_code: data[i].systemCode,\n\t\t\t\tsort_order: data[i].sortOrder,\n\t\t\t});\n\t\t}\n\n\t\treturn snake_data;\n\t}\n\n\tpublic load_sites()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.scheduleService.getSites().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tvar out = [];\n\t\t\t\tif(angular.isArray(results))\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(out);\n\t\t\t}\n\t\t)\n\n\t\treturn deferred.promise;\n\t}\n\n\n\tpublic load_schedule_options()\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.scheduleService.getScheduleGroups().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t{\n\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(results);\n\t\t\t}\n\t\t);\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic get_selected_schedule(schedule_options)\n\t{\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default (first in the list)\n\t\tvar selected_uuid = null;\n\t\tif(this.$stateParams.default_schedule)\n\t\t{\n\t\t\t// Passed in url string\n\t\t\tselected_uuid = this.$stateParams.default_schedule;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselected_uuid = this.get_global_state('schedule_default');\n\t\t}\n\t\tif(selected_uuid === null)\n\t\t{\n\t\t\tselected_uuid = this.get_global_preference_setting('schedule_default');\n\t\t}\n\n\t\tif(this.util.exists(selected_uuid))\n\t\t{\n\t\t\t// only choose it if it can be found in the options list\n\t\t\tfor(var i = 0; i < schedule_options.length; i++)\n\t\t\t{\n\t\t\t\tif(selected_uuid === schedule_options[i].uuid)\n\t\t\t\t{\n\t\t\t\t\treturn schedule_options[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(schedule_options.length > 0)\n\t\t{\n\t\t\t// select the first schedule in the list by default\n\t\t\treturn schedule_options[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic get_selected_resources(resource_options)\n\t{\n\t\treturn [];\n\n\t\t/*\tXXX: probably not using this because we don't select resources in juno\n\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default (all the non-doctor schedules)\n\n\t\tvar custom_resource_list =\n\t\t\tthis.get_global_state('schedule_resources');\n\n\t\tif(custom_resource_list === null)\n\t\t{\n\t\t\tcustom_resource_list = this.get_global_preference_setting(\n\t\t\t\t'schedule_resources');\n\t\t}\n\n\t\treturn this.get_group_resources(\n\t\t\tcustom_resource_list, resource_options);*/\n\t}\n\n/*\tpublic get_group_resources(default_selections, schedules)\n\t{\n\t\tvar has_defaults = this.util.exists(default_selections) && default_selections.length > 0;\n\n\t\tvar selected_resources = [];\n\t\tfor(var i = 0; i < schedules.length; i++)\n\t\t{\n\t\t\tvar schedule_data = schedules[i];\n\n\t\t\tif(has_defaults &&\n\t\t\t\tdefault_selections.indexOf(schedule_data.uuid) > -1)\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t\telse if(!has_defaults &&\n\t\t\t\t!this.util.exists(schedule_data.demographics_practitioner_uuid))\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t}\n\n\t\t// if default selections list is set but the schedules in it no longer exist,\n\t\t// or if there are no settings and no non-doctor schedules,\n\t\t// then could end up with nothing selected, so select everything\n\t\tif(selected_resources.length === 0)\n\t\t{\n\t\t\tfor(var j = 0; j < schedules.length; j++)\n\t\t\t{\n\t\t\t\tselected_resources.push(schedule_data);\n\t\t\t}\n\t\t}\n\n\t\treturn selected_resources;\n\t}*/\n\n\tpublic get_selected_time_interval(\n\t\ttime_interval_options, default_time_interval)\n\t{\n\t\t// priority: last used from global state, then preference setting,\n\t\t// then default\n\n\t\tvar selected_time_interval = null;\n\n\t\tvar time_interval = this.get_global_state('schedule_time_interval');\n\t\tif(time_interval === null)\n\t\t{\n\t\t\ttime_interval = this.get_global_preference_setting(\n\t\t\t\t'schedule_time_interval');\n\t\t}\n\n\t\tif(this.util.exists(time_interval))\n\t\t{\n\t\t\t// only choose it if it can be found in the options list\n\t\t\tfor(var i = 0; i < time_interval_options.length; i++)\n\t\t\t{\n\t\t\t\tif(time_interval === time_interval_options[i])\n\t\t\t\t{\n\t\t\t\t\tselected_time_interval = time_interval_options[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(selected_time_interval === null)\n\t\t{\n\t\t\treturn default_time_interval;\n\t\t}\n\n\t\treturn selected_time_interval;\n\t}\n\n\tpublic get_schedule_min_time() {\n\t\t// restrict day view if user preferences are set\n\n\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\treturn \"08:00\";\n\t}\n\n\tpublic get_schedule_max_time()\n\t{\n\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\t\treturn \"20:00\";\n\t}\n\n\n\tpublic load_schedule(providerId: string)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar schedule = {\n\t\t\tuuid: providerId,\n\t\t\tavailabilities: [],\n\t\t\trelations: []\n\t\t};\n\n\t\tdeferred.resolve({data: schedule});\n\n\t\treturn deferred.promise;\n\t}\n\n\n\tpublic save_event(\n\t\tedit_mode: string,\n\t\tevent_uuid: string,\n\t\tstart_datetime: moment.Moment,\n\t\tend_datetime: moment.Moment,\n\t\tevent_data: {reason: string, description: string},\n\t\tschedule_uuid: string,\n\t\tselected_event_status_uuid: string,\n\t\tpatient_uuid: number,\n\t\tsite_uuid: string\n\t)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tvar dateString: string = this.util.get_date_string(start_datetime);\n\t\tvar startTimeString: string = this.util.get_time_string(start_datetime, \"HH:mm\");\n\t\tvar duration: number = moment.duration(end_datetime.diff(start_datetime)).asMinutes();\n\n\t\tvar appointment: NewAppointmentTo1 =  {\n\t\t\t\"appointmentDate\": dateString,\n\t\t\t\"startTime\": startTimeString,\n\t\t\t\"duration\": duration,\n\t\t\t\"status\": selected_event_status_uuid,\n\t\t\t\"demographicNo\": patient_uuid,\n\t\t\t\"notes\": event_data.description,\n\t\t\t\"reason\": event_data.reason,\n\t\t\t\"location\": site_uuid,\n\t\t\t\"providerNo\": schedule_uuid,\n\t\t\t//\"name\": string,\n/*\t\t\t\"resources\": string,\n\t\t\t\"type\": string,\n\t\t\t\"urgency\": string,*/\n\t\t};\n\n\t\t//this.scheduleService.addAppointment(appointment).then(\n\t\tthis.scheduleApi.addAppointment(appointment).then(\n\t\t\tfunction(result: IHttpResponse<SchedulingResponse>)\n\t\t\t{\n\t\t\t\tdeferred.resolve(result.data);\n\t\t\t},\n\t\t\tfunction (result)\n\t\t\t{\n\t\t\t\tdeferred.reject(result.data);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic process_save_results(results)\n\t{\n\t\tif(results.status == 'SUCCESS')\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconsole.log(results);\n\t}\n\n\t/*\n\tpublic delete_event(event_uuid)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.event_model.del(event_uuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t}*/\n\n\n\t//-------------------------------------------------------------------------\n\t// Event Handlers\n\t//-------------------------------------------------------------------------/\n\n/*\tpublic drop_event(uuid, schedule_uuid, delta)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tevent_model.data.start_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.start_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.data.end_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.end_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.data.schedule_uuid = schedule_uuid;\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic resize_event(uuid, delta)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tevent_model.data.end_time =\n\t\t\t\t\tutil.get_datetime_moment(event_model.data.end_time).add(\n\t\t\t\t\t\tdelta.asMilliseconds(), 'milliseconds');\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tpublic rotate_event_status(uuid, rotate_statuses)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tevent_model.load(uuid).then(\n\t\t\tfunction success()\n\t\t\t{\n\t\t\t\tvar next_index = null;\n\t\t\t\tfor(var i = 0; i < rotate_statuses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(rotate_statuses[i].uuid ===\n\t\t\t\t\t\tevent_model.data.event_status_uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\tnext_index = (i + 1) % rotate_statuses.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tevent_model.data.event_status_uuid =\n\t\t\t\t\trotate_statuses[next_index].uuid;\n\n\t\t\t\tevent_model.save().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(angular.copy(event_model.data));\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}*/\n\n\t//-------------------------------------------------------------------------\n\t// Global State Manipulation\n\t//-------------------------------------------------------------------------/\n\n\tpublic get_global_preference_setting(key)\n\t{\n\t\tif(this.util.exists(this.globalStateService.preferences) &&\n\t\t\tthis.util.exists(this.globalStateService.preferences.settings))\n\t\t{\n\t\t\treturn this.globalStateService.preferences.settings[key];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic get_global_state(key)\n\t{\n\t\tvar setting = this.globalStateService[key];\n\t\tif(!this.util.exists(setting))\n\t\t{\n\t\t\tsetting = null;\n\t\t}\n\t\treturn setting;\n\t}\n\n\tpublic save_global_state(key, value)\n\t{\n\t\tthis.globalStateService[key] = value;\n\t}\n\n\t// -----------------------------------------------------------------------------------------------\n\t// Interface Actions\n\t// -----------------------------------------------------------------------------------------------\n\n\tpublic get_create_invoice_url(\n\t\tevent_uuid, demographics_practitioner_uuid, demographics_patient_uuid)\n\t{\n\t\tvar url = \"#/invoice/create?schedule_event_uuid=\" +\n\t\t\tencodeURIComponent(event_uuid);\n\n\t\tif(this.util.exists(demographics_patient_uuid))\n\t\t{\n\t\t\turl += \"&demographics_patient_uuid=\" +\n\t\t\t\tencodeURIComponent(demographics_patient_uuid);\n\t\t}\n\n\t\tif(this.util.exists(demographics_practitioner_uuid))\n\t\t{\n\t\t\turl += \"&demographics_practitioner_uuid=\" + encodeURIComponent(\n\t\t\t\tdemographics_practitioner_uuid);\n\t\t}\n\n\t\treturn url;\n\t}\n\n\tpublic get_patient_demographic_url(event)\n\t{\n\t\treturn \"#/patient/\" + encodeURIComponent(event.data.demographics_patient_uuid) + \"/view\";\n\t}\n\n\tpublic get_create_chart_note_url(event)\n\t{\n\t\treturn \"#/patient/\" + encodeURIComponent(event.data.demographics_patient_uuid) +\n\t\t\t\"/chart_notes?event_uuid=\" + encodeURIComponent(event.data.uuid);\n\t}\n\n\tpublic open_patient_dialog(edit_mode_callback, on_save_callback,\n\t\tload_error_link_patient_fn)\n\t{\n\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\treturn this.$uibModal.open({\n\t\t\tanimation: false,\n\t\t\tbackdrop: 'static',\n\t\t\tsize: 'lg',\n\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\tresolve: {\n\t\t\t\tedit_mode: edit_mode_callback,\n\t\t\t\ton_save_callback: on_save_callback,\n\t\t\t\tload_error_link_patient_fn: load_error_link_patient_fn\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic get_schedule_height()\n\t{\n/*\t\t// get the full window height, minus the header height, minus a buffer for schedule options\n\t\tvar schedule_height = $(window).height() - $('#right-pane').offset().top - 80;\n\t\tif(schedule_height < $scope.min_height) {\n\t\t\tschedule_height = $scope.min_height;\n\t\t}\n\t\treturn schedule_height;*/\n\t\treturn 814;\n\t}\n\n\n\t// ===============================================================================================\n\t// Private Methods\n\t// ===============================================================================================\n/*\n\tprivate create_schedule_event(event)\n\t{\n\t\tvar event_status_color =\n\t\t\tthis.event_statuses[event.event_status_uuid] ?\n\t\t\t\tthis.event_statuses[event.event_status_uuid].color :\n\t\t\t\tthis.default_event_color;\n\n\t\treturn {\n\t\t\tdata: event,\n\t\t\tstart: this.util.get_datetime_moment(event.start_time),\n\t\t\tend: this.util.get_datetime_moment(event.end_time),\n\t\t\tcolor: event_status_color,\n\t\t\tclassName: this.event_class(event_status_color),\n\t\t\tresourceId: event.schedule_uuid\n\t\t}\n\t}\n\n\tprivate event_class(bg_color)\n\t{\n\t\tvar red = parseInt(bg_color.substr(1,2),16);\n\t\tvar green = parseInt(bg_color.substr(3,2),16);\n\t\tvar blue = parseInt(bg_color.substr(5,2),16);\n\t\tvar yiq = ((red * 299) + (green * 587) + (blue * 114)) / 1000;\n\n\t\treturn (yiq >= 128) ? 'text-dark' : 'text-light';\n\t}\n\t*/\n\n/*\n\tprivate load_schedule_availabilities(schedule)\n\t{\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.schedule_availability_model.schedule_list(schedule).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tschedule.availabilities = results.data;\n\t\t\t\tdeferred.resolve(this.results_factory.factory(schedule));\n\t\t\t}, function error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('load_schedule_availabilities error', errors);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}\n\n\tprivate load_schedule_tmpl_rels(schedule)\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tthis.schedule_template_relation_model.schedule_list(schedule).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tschedule.relations = results.data;\n\t\t\t\tdeferred.resolve(this.results_factory.factory(schedule));\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t}*/\n}\n","\nimport {ScheduleApi} from \"../generated/JunoInternalApi/ScheduleApi\";\nimport {CalendarApiAdapter} from './schedule/calendarApiAdapter';\n\nangular.module('Schedule').service(\n\t'Schedule.CalendarApiAdapter', CalendarApiAdapter);\n","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t$scope.ospInfo = {\n\t\t\tname: 'OscarHost.ca',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Oscarhost Support',\n\t\t\temail: 'support@oscarhost.ca',\n\t\t\turl: 'https://help.oscarhost.ca'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: '15-Beta',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Help', []);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function(data)\n\t\t\t{\n\t\t\t\talert('saved');\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Report').controller('Report.ReportSHMentalHealthController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run sh mental health report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/StreetHealthIntakeReportAction.do?startDate=' + startDate;\n\t\t\twindow.open(url, 'report_sh', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportRegistrationIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run registration intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=quick&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_registration_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportFollowUpIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run follow up intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=indepth&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_followup_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: new Date(),\n\t\t\t\tendDate: new Date(),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'General Forms',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/ClientManager.do?method=getGeneralFormsReport'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Registration Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_registration_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Follow-up Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_followup_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Activity Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/Reports/ProgramActivityReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UCF Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../SurveyManager.do?method=reportForm'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SH Mental Health Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_sh_mental_health.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\t\t\t}\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, ((page - 1) * count), count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.content);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === \"DOB\")\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = 'Name';\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: \"all\",\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === \"DOB\") ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Inbox', []);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.consult = consult;\n\t\tconsult.letterheadList = Juno.Common.Util.toArray(consult.letterheadList);\n\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t//set attachments\n\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\t\t//set default letterhead\n\t\tif (consult.letterheadName == null)\n\t\t{\n\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.letterheadList[i].id == user.providerNo)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadName = consult.letterheadList[i].id;\n\t\t\t\t\tconsult.letterheadAddress = consult.letterheadList[i].address;\n\t\t\t\t\tconsult.letterheadPhone = consult.letterheadList[i].phone;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//set default fax if there's only 1\n\t\tif (consult.letterheadFax == null && consult.faxList.length == 1)\n\t\t{\n\t\t\tconsult.letterheadFax = consult.faxList[0].faxNumber;\n\t\t}\n\n\t\t//show referringDoctor in list\n\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t{\n\t\t\tif(consult.referringDoctor !== null)\n\t\t\t{\n\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//set patient cell phone\n\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t{\n\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t{\n\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeLetterhead = function changeLetterhead()\n\t\t{\n\t\t\tvar index = $(\"#letterhead\").selectedIndex;\n\t\t\tif (index == null) return;\n\n\t\t\tconsult.letterheadAddress = consult.letterheadList[index].address;\n\t\t\tconsult.letterheadPhone = consult.letterheadList[index].phone;\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ', ' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsult.letterheadList = Juno.Common.Util.toArray(consult.letterheadList);\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\t//set appointment time\n\t\tconsole.log('initial appointment time: ', angular.copy(consult.appointmentTime));\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set demographic info\n\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log('SUCCESS, DEMO: ', results);\n\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t//set cell phone\n\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set default letterhead\n\t\tif (consult.letterhead == null)\n\t\t{\n\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.letterheadList[i].id == user.providerNo)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterhead = consult.letterheadList[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//set default fax if there's only 1\n\t\tif (consult.letterhead.fax == null && consult.faxList.length == 1)\n\t\t{\n\t\t\tconsult.letterhead.fax = consult.faxList[0].faxNumber;\n\t\t}\n\n\t\t//set specialist list\n\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t{\n\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t{\n\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tangular.forEach(controller.specialists, function(spec)\n\t\t{\n\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t{\n\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t}\n\t\t});\n\n\t\t//set attachments\n\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(newLetterheadName)\n\t\t{\n\t\t\tvar index = $(\"#letterhead\")[0].selectedIndex;\n\t\t\tif (index === null) return;\n\n\t\t\tconsult.letterheadAddress = consult.letterheadList[index].address;\n\t\t\tconsult.letterheadPhone = consult.letterheadList[index].phone;\n\n\t\t};\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tconsole.log('CONSULT: ', consult);\n\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// controller.invalidData = function invalidData()\n\t\t// {\n\t\t// \tif (controller.urgencies[$(\"#urgency\").val()] == null)\n\t\t// \t{\n\t\t// \t\talert(\"Please select an Urgency\");\n\t\t// \t\treturn true;\n\t\t// \t}\n\t\t// \tif (consult.letterheadList[$(\"#letterhead\").val()] == null)\n\t\t// \t{\n\t\t// \t\talert(\"Please select a Letterhead\");\n\t\t// \t\treturn true;\n\t\t// \t}\n\t\t// \tif (consult.serviceList[$(\"#serviceId\").val()] == null)\n\t\t// \t{\n\t\t// \t\talert(\"Please select a Specialist Service\");\n\t\t// \t\treturn true;\n\t\t// \t}\n\t\t// \tif (consult.professionalSpecialist == null)\n\t\t// \t{\n\t\t// \t\talert(\"Please select a Specialist\");\n\t\t// \t\treturn true;\n\t\t// \t}\n\t\t// \tif (consult.demographic == null || consult.demographic == \"\")\n\t\t// \t{\n\t\t// \t\talert(\"Error! Invalid patient!\");\n\t\t// \t\treturn true;\n\t\t// \t}\n\t\t// \treturn false;\n\t\t// };\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// if (!controller.consult.prof)\n\t\t\t// {\n\t\t\t// \talert(\"Please select a Specialist Service\");\n\t\t\t// \treturn true;\n\t\t\t// }\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tconsole.log('CONSULT: ', consult);\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.id == null) $location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.setESendEnabled();\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\telse $location.path(\"/consults\");\n\t\t};\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographicId;\n\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\t\t\t//\t\tvar faxRecipients = *additional fax recipients (can be >1)*\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + consult.id + \"&demographicNo=\" + consult.demographicId);\n\t\t\t/*\n\t\t\t\t\tvar printWin = window.open(\"\",\"consultRequestPrintWin\",\"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\t\t\tprintWin.document.open();\n\n\t\t\t\t\tvar replyTo = \"Please reply \";\n\t\t\t\t\tif (consult.patientWillBook) {\n\t\t\t\t\t\treplyTo = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (noNull(consult.letterheadList[0].name)!=\"\") replyTo += \"to \" + consult.letterheadList[0].name;\n\t\t\t\t\t\treplyTo += \" by fax or by phone with appointment\";\n\t\t\t\t\t}\n\n\t\t\t\t\tvar urgency = noNull(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\t\t\tvar referralDate = formatDate(consult.referralDate);\n\t\t\t\t\tvar letterheadName = noNull(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\t\t\tvar letterheadAddress = noNull(consult.letterheadAddress);\n\t\t\t\t\tvar letterheadPhone = noNull(consult.letterheadPhone);\n\t\t\t\t\tvar letterheadFax = noNull(consult.letterheadFax);\n\t\t\t\t\tvar serviceName = noNull(consult.serviceList[$(\"#serviceId\").val()].serviceDesc);\n\t\t\t\t\tvar consultantName = noNull(consult.professionalSpecialist.name);\n\t\t\t\t\tvar consultantPhone = noNull(consult.professionalSpecialist.phoneNumber);\n\t\t\t\t\tvar consultantFax = noNull(consult.professionalSpecialist.faxNumber);\n\t\t\t\t\tvar consultantAddress = noNull(consult.professionalSpecialist.streetAddress);\n\t\t\t\t\tvar patientName = noNull(consult.demographic.lastName)+\", \"+noNull(consult.demographic.firstName);\n\t\t\t\t\tvar patientPhone = noNull(consult.demographic.phone);\n\t\t\t\t\tvar patientWorkPhone = noNull(consult.demographic.alternativePhone);\n\t\t\t\t\tvar patientBirthdate = formatDate(consult.demographic.dateOfBirth);\n\t\t\t\t\tvar patientSex = noNull(consult.demographic.sexDesc);\n\t\t\t\t\tvar patientHealthCardNo = noNull(consult.demographic.hin)+\"-\"+noNull(consult.demographic.ver);\n\t\t\t\t\tvar patientChartNo = noNull(consult.demographic.chartNo);\n\t\t\t\t\tvar patientAddress = \"\";\n\t\t\t\t\tif (consult.demographic.address!=null) {\n\t\t\t\t\t\tpatientAddress = noNull(consult.demographic.address.address)+\", \"+noNull(consult.demographic.address.city)+\", \"+noNull(consult.demographic.address.province)+\" \"+noNull(consult.demographic.address.postal);\n\t\t\t\t\t}\n\t\t\t\t\tvar appointmentDate = formatDate(consult.appointmentDate);\n\t\t\t\t\tvar appointmentTime = formatTime(consult.appointmentTime);\n\t\t\t\t\tvar reason = noNull(consult.reasonForReferral);\n\t\t\t\t\tvar clinicalInfo = noNull(consult.clinicalInfo);\n\t\t\t\t\tvar concurrentProblems = noNull(consult.concurrentProblems);\n\t\t\t\t\tvar currentMeds = noNull(consult.currentMeds);\n\t\t\t\t\tvar allergies = noNull(consult.allergies);\n\t\t\t\t\tvar referringProvider = noNull(user.lastName)+\", \"+noNull(user.firstName);\n\t\t\t\t\tvar mrp = \"\";\n\t\t\t\t\tif (consult.demographic.provider!=null) {\n\t\t\t\t\t\tmrp = noNull(consult.demographic.provider.lastName)+\", \"+noNull(consult.demographic.provider.firstName);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar reqId = consult.id;\n\t\t\t\t\tvar demoId = consult.demographicId;\n\t\t\t\t\tvar userId = user.providerNo;\n\n\t\t\t\t\tprintWin.document.write(\"<html><style>body {width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif;}div {text-align:center;}table {width:100%;}th {text-align:left;font-weight:bold;width:1;white-space:nowrap}td {vertical-align:top;}label {font-weight:bold;}em {font-size:small;}p {font-size:large;}</style><style media='print'>button {display: none;}</style><script>function printAttachments(){window.location.href='../oscarEncounter/oscarConsultationRequest/attachmentReport.jsp?reqId=\"+reqId+\"&demographicNo=\"+demoId+\"&providerNo=\"+userId+\"';}</script><body><button onclick='window.print();'>Print</button><button onclick='printAttachments()'>Print attachments</button><button onclick='window.close()'>Close</button><div><label>Consultation Request</label><br/><label>\"+replyTo+\"</label></div><br/><table><tr><td><label>Date: </label>\"+referralDate+\"</td><td rowspan=6 width=10>&nbsp;</td><td><label>Status: </label>\"+urgency+\"</td></tr><tr><td colspan=2>&nbsp;</td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p>\"+letterheadName+\"</p>\"+letterheadAddress+\"<br/><label>Tel: </label>\"+letterheadPhone+\"<br/><label>Fax: </label>\"+letterheadFax+\"</td><td><table><tr><th>Consultant:</th><td>\"+consultantName+\"</td></tr><tr><th>Service:</th><td>\"+serviceName+\"</td></tr><tr><th>Phone:</th><td>\"+consultantPhone+\"</td></tr><tr><th>Fax:</th><td>\"+consultantFax+\"</td></tr><tr><th>Address:</th><td>\"+consultantAddress+\"</td></tr></table></td></tr><tr><td colspan=2>&nbsp;</td></tr><tr><td><table><tr><th>Patient:</th><td>\"+patientName+\"</td></tr><tr><th>Address:</th><td>\"+patientAddress+\"</td></tr><tr><th>Phone:</th><td>\"+patientPhone+\"</td></tr><tr><th>Work Phone:</th><td>\"+patientWorkPhone+\"</td></tr><tr><th>Birthdate:</th><td>\"+patientBirthdate+\"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\"+patientSex+\"</td></tr><tr><th>Health Card No:</th><td>\"+patientHealthCardNo+\"</td></tr><tr><th>Appointment date:</th><td>\"+appointmentDate+\"</td></tr><tr><th>Appointment time:</th><td>\"+appointmentTime+\"</td></tr><tr><th>Chart No:</th><td>\"+patientChartNo+\"</td></tr></table></td></tr></table><br/><table><tr><th>Reason for consultation:</th></tr><tr><td>\"+reason+\"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\"+clinicalInfo+\"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\"+concurrentProblems+\"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\"+currentMeds+\"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\"+allergies+\"<hr></td></tr><tr><td><label>Referring Practitioner: </label>\"+referringProvider+\"</td></tr><tr><td><label>MRP: </label>\"+mrp+\"</td></tr><tr><td>&nbsp;</td></tr><tr><td><div><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\");\n\t\t\t\t\tprintWin.document.close();\n\t\t\t*/\n\t\t}\n\t\t/* html for printPreview, kept here for easy reference\n\t\t<html>\n\t\t<style>\n\t\t\tbody {width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif;}\n\t\t\tdiv {text-align:center;}\n\t\t\ttable {width:100%;}\n\t\t\tth {text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\t\t\ttd {vertical-align:top;}\n\t\t\tlabel {font-weight:bold;}\n\t\t\tem {font-size:small;}\n\t\t\tp {font-size:large;}\n\t\t</style>\n\t\t<style media='print'>\n\t\t\tbutton {display: none;}\n\t\t</style>\n\t\t<script>\n\t\t\tfunction printAttachments(){\n\t\t\t\twindow.location.href='../oscarEncounter/oscarConsultationRequest/attachmentReport.jsp?reqId=\"+reqId+\"&demographicNo=\"+demoId+\"&providerNo=\"+userId+\"';\n\t\t\t}\n\t\t</script>\n\t\t<body>\n\t\t\t<button onclick='window.print();'>Print</button>\n\t\t\t<button onclick='printAttachments()'>Print attachments</button>\n\t\t\t<button onclick='window.close()'>Close</button>\n\t\t\t<div>\n\t\t\t\t<label>Consultation Request</label><br/>\n\t\t\t\t<label>\"+replyTo+\"</label>\n\t\t\t</div>\n\t\t\t<br/>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<label>Date: </label>\"+referralDate+\"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td rowspan=6 width=10>&nbsp;</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<label>Status: </label>\"+urgency+\"\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td colspan=2>&nbsp;</td></tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>FROM:</th>\n\t\t\t\t\t<th>TO:</th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<p>\"+letterheadName+\"</p>\n\t\t\t\t\t\t\"+letterheadAddress+\"<br/>\n\t\t\t\t\t\t<label>Tel: </label>\"+letterheadPhone+\"<br/>\n\t\t\t\t\t\t<label>Fax: </label>\"+letterheadFax+\"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Consultant:</th>\n\t\t\t\t\t\t\t\t<td>\"+consultantName+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Service:</th>\n\t\t\t\t\t\t\t\t<td>\"+serviceName+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t\t\t<td>\"+consultantPhone+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t\t\t<td>\"+consultantFax+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t\t\t<td>\"+consultantAddress+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td colspan=2>&nbsp;</td></tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientName+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientAddress+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientPhone+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientWorkPhone+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientBirthdate+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientSex+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientHealthCardNo+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t\t\t<td>\"+appointmentDate+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t\t\t<td>\"+appointmentTime+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t\t\t<td>\"+patientChartNo+\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<br/>\n\t\t\t<table>\n\t\t\t\t<tr><th>Reason for consultation:</th></tr>\n\t\t\t\t<tr><td>\"+reason+\"<hr></td></tr>\n\t\t\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t\t\t<tr><td>\"+clinicalInfo+\"<hr></td></tr>\n\t\t\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t\t\t<tr><td>\"+concurrentProblems+\"<hr></td></tr>\n\t\t\t\t<tr><th>Current Medications:</th></tr>\n\t\t\t\t<tr><td>\"+currentMeds+\"<hr></td></tr>\n\t\t\t\t<tr><th>Allergies:</th></tr>\n\t\t\t\t<tr><td>\"+allergies+\"<hr></td></tr>\n\t\t\t\t<tr><td><label>Referring Practitioner: </label>\"+referringProvider+\"</td></tr>\n\t\t\t\t<tr><td><label>MRP: </label>\"+mrp+\"</td></tr>\n\t\t\t\t<tr><td>&nbsp;</td></tr>\n\t\t\t\t<tr><td><div><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t\t\t</table>\n\t\t</body>\n\t\t</html>\n\t\t*/\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.content[x].demographicNo,\n\t\t\t\t\t\t\tname: response.content[x].lastName + ', ' + response.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar dp = consult.referralDate.split(\"-\");\n\t\t\t\t\t\t\t\tvar rDate = new Date(dp[0], dp[1] - 1, dp[2]);\n\t\t\t\t\t\t\t\trDate.setMonth(rDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= rDate) consult.outstanding = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('AdminCtrl', ['$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","angular.module('Schedule').controller('Schedule.AppointmentViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'appointment',\n\t'statusList',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tappointment,\n\t\tstatusList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.me = me;\n\t\tcontroller.appointment = appointment;\n\t\tcontroller.statusList = statusList.content;\n\t\tcontroller.appointmentUpdate = {};\n\n\t\tcontroller.appointmentWriteAccess = false;\n\n\t\tcontroller.getStatus = function getStatus(status)\n\t\t{\n\n\t\t\tfor (var x = 0; x < controller.statusList.length; x++)\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(controller.statusList[x]));\n\t\t\t\tif (controller.statusList[x].status == status)\n\t\t\t\t{\n\t\t\t\t\treturn controller.statusList[x].description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn status;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.deleteAppointment = function deleteAppointment()\n\t\t{\n\t\t\tif (confirm('Are you sure you want to delete this appointment?'))\n\t\t\t{\n\t\t\t\tscheduleService.deleteAppointment(controller.appointment.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\n\n\t\tcontroller.editProvider = function editProvider()\n\t\t{\n\t\t\tcontroller.showProviderFormControl = true;\n\t\t\tcontroller.appointmentUpdate.providerNo = controller.appointment.providerNo;\n\t\t\tcontroller.appointmentUpdate.providerName = controller.appointment.provider.lastName + \",\" + controller.appointment.provider.lastName;\n\t\t};\n\n\t\tcontroller.updateProvider = function updateProvider(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t\tcontroller.showProviderFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelProviderUpdate = function cancelProviderUpdate()\n\t\t{\n\t\t\tcontroller.appointmentUpdate.providerNo = null;\n\t\t\tcontroller.appointmentUpdate.providerName = null;\n\n\t\t\tcontroller.showProviderFormControl = false;\n\n\t\t};\n\n\t\tcontroller.showAppointmentHistory = function showAppointmentHistory()\n\t\t{\n\t\t\tscheduleService.appointmentHistory(controller.appointment.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\talert(JSON.stringify(results));\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.noShowAppointment = function noShowAppointment()\n\t\t{\n\t\t\tscheduleService.noShowAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancelAppointment = function cancelAppointment()\n\t\t{\n\t\t\tscheduleService.cancelAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t}\n]);","angular.module('Schedule').controller('Schedule.AppointmentAddController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'demographicsService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'apptDate',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tapptDate)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.types = [];\n\n\t\tcontroller.urgencies = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: 'Normal'\n\t\t},\n\t\t{\n\t\t\tvalue: 'critical',\n\t\t\tlabel: 'Critical'\n\t\t}];\n\n\t\tcontroller.me = me;\n\n\t\tcontroller.appointment = {\n\t\t\tstatus: 't',\n\t\t\tappointmentDate: $filter('date')(apptDate, 'yyyy-MM-dd'),\n\t\t\tstartTime: '09:00 AM',\n\t\t\ttype: '',\n\t\t\tduration: 15,\n\t\t\tproviderName: me.formattedName,\n\t\t\tproviderNo: me.providerNo,\n\t\t\treason: '',\n\t\t\tnotes: '',\n\t\t\tlocation: '',\n\t\t\tresources: '',\n\t\t\tcritical: ''\n\t\t};\n\n\t\tscheduleService.getTypes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.types = results.types;\n\t\t\t\tcontroller.types.unshift(\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tduration: 15,\n\t\t\t\t\tlocation: '',\n\t\t\t\t\tnotes: '',\n\t\t\t\t\treason: '',\n\t\t\t\t\tresources: ''\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.selectType = function selectType()\n\t\t{\n\t\t\tvar type = null;\n\n\t\t\tfor (var x = 0; x < controller.types.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.types[x].name == controller.appointment.type)\n\t\t\t\t{\n\t\t\t\t\ttype = controller.types[x];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type != null)\n\t\t\t{\n\t\t\t\tcontroller.appointment.duration = type.duration;\n\t\t\t\tcontroller.appointment.location = type.location;\n\t\t\t\tcontroller.appointment.notes = type.notes;\n\t\t\t\tcontroller.appointment.reason = type.reason;\n\t\t\t\tcontroller.appointment.resources = type.resources;\n\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.validate = function validate()\n\t\t{\n\t\t\tvar t = controller.appointment;\n\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.providerNo == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a provider');\n\t\t\t}\n\t\t\tif (t.startTime == null || t.startTime.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\t\t\tif (t.duration == null || t.duration.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar x = {};\n\t\t\tx.status = controller.appointment.status;\n\t\t\tx.appointmentDate = controller.appointment.appointmentDate;\n\t\t\tx.startTime12hWithMedian = controller.appointment.startTime;\n\t\t\tx.type = controller.appointment.type;\n\t\t\tx.duration = controller.appointment.duration;\n\t\t\tx.providerNo = controller.appointment.providerNo;\n\t\t\tx.reason = controller.appointment.reason;\n\t\t\tx.notes = controller.appointment.notes;\n\t\t\tx.location = controller.appointment.location;\n\t\t\tx.resources = controller.appointment.resources;\n\t\t\tx.urgency = controller.appointment.critical;\n\t\t\tx.demographicNo = controller.appointment.demographicNo;\n\n\t\t\tconsole.log(JSON.stringify(x));\n\t\t\tscheduleService.addAppointment(x).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\n\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.appointment.demographicNo = results.demographicNo;\n\t\t\t\t\tcontroller.appointment.demographicName = '';\n\t\t\t\t\tcontroller.appointment.demographic = results;\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\t}\n]);","\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\n\tfunction(\n\t\t$scope\n\t)\n\t{\n\t\t//var controller = this;\n\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.selectedSchedule = null;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.selectedTimeInterval = null;\n\t\t$scope.selectedResources = [];\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in\n\t\t// this object.\n\t\t$scope.cpCalendarControl = {};\n\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t\t//return global_state.global_settings.addons.scheduling_enabled;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"is_initialized\");\n\t\t};\n\n\t\t$scope.hasSchedules = function hasSchedules()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"has_schedules\");\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"has_sites\");\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"get_time_interval_options\");\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"get_schedule_options\");\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\tvar result = $scope.callCalendarMethod(\"get_site_options\");\n\n\t\t\tif(!angular.isDefined($scope.selectedSite) || $scope.selectedSite === null)\n\t\t\t{\n\t\t\t\t$scope.selectedSite = result[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"view_name\");\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.viewName() !== 'month';\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"on_schedule_changed\", [$scope.selectedSchedule, $scope.selectedSiteName]);\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod(\"on_schedule_changed\", [$scope.selectedSchedule, $scope.selectedSiteName]);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.saveGlobalState('schedule_time_interval', $scope.selectedTimeInterval);\n\n\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\tif($scope.uiConfig.calendar)\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\t\t\t}\n\t\t};\n\n\t\t$scope.changeView = function changeView(view)\n\t\t{\n\t\t\treturn $scope.callCalendarMethod('change_view', [view]);\n\t\t};\n\n\t\t$scope.showLegend = function showLegend()\n\t\t{\n\t\t\treturn $scope.callCalendarMethod('show_legend');\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.viewName() != 'resourceDay')\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t// Calls the named function on the calendar control object.  This is here to fail without\n\t\t// an error if the calendar isn't initialized yet.\n\t\t$scope.callCalendarMethod = function callCalendarMethod(name, args)\n\t\t{\n\t\t\tif($scope.cpCalendarControl && angular.isFunction($scope.cpCalendarControl[name]))\n\t\t\t{\n\t\t\t\treturn $scope.cpCalendarControl[name].apply(this, args);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.saveGlobalState = function saveGlobalSetting(key, value)\n\t\t{\n\t\t\t//$scope.global_state[key] = value;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services', 'cpCalendar']);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A'\n\t\t\t\t\t};\n\n\n\t\t\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n                                        ticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'demographicService',\n\t'demographicsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.setSwipeReady(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// controller.page.demo = demo;\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tcontroller.setSwipeReady();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\n\t\t// //calculate age\n\t\t// var now = new Date();\n\t\t// controller.calculateAge = function calculateAge()\n\t\t// {\n\t\t// \tcontroller.page.demo.age = now.getFullYear() - controller.page.demo.dobYear;\n\t\t// \tif (now.getMonth() < controller.page.demo.dobMonth - 1) controller.page.demo.age--;\n\t\t// \telse if (now.getMonth() == controller.page.demo.dobMonth - 1 && now.getDate() < controller.page.demo.dobDay) controller.page.demo.age--;\n\t\t// };\n\t\t//\n\t\t// controller.calculateAge(); //done on page load\n\n\t\t//set ready for swipe card\n\t\tcontroller.setSwipeReady = function setSwipeReady(status)\n\t\t{\n\t\t\tif (status == \"off\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Click for Card Swipe\";\n\t\t\t}\n\t\t\telse if (status == \"done\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-primary\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-success\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Ready for Card Swipe\";\n\t\t\t\tcontroller.page.swipecard = \"\";\n\t\t\t}\n\t\t};\n\n\t\t//Health card verification\n\t\tcontroller.healthCardHandler = function healthCardHandler(keycode)\n\t\t{\n\t\t\tif (keycode == 13)\n\t\t\t{ //carriage-return\n\t\t\t\tvar swipeCardData = controller.page.swipecard;\n\t\t\t\tcontroller.page.swipecard = \"\";\n\n\t\t\t\tif (swipeCardData.substring(0, 3) == \"%E?\")\n\t\t\t\t{ //swipe card error\n\t\t\t\t\talert(\"Error reading card\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (swipeCardData.substring(2, 8) == \"610054\")\n\t\t\t\t\t{ //Ontario\n\t\t\t\t\t\thcParts[\"issuer\"] = \"ON\";\n\t\t\t\t\t\thcParts[\"hin\"] = swipeCardData.substring(8, 18);\n\n\t\t\t\t\t\tvar namePos = swipeCardData.indexOf(\"^\") + 1;\n\t\t\t\t\t\tvar endNamePos = swipeCardData.indexOf(\"^\", namePos);\n\t\t\t\t\t\thcParts[\"fullName\"] = swipeCardData.substring(namePos, endNamePos);\n\t\t\t\t\t\thcParts[\"lastName\"] = hcParts[\"fullName\"].split(\"/\")[0];\n\t\t\t\t\t\thcParts[\"firstName\"] = hcParts[\"fullName\"].split(\"/\")[1].trim();\n\n\t\t\t\t\t\thcParts[\"sex\"] = swipeCardData.substring(endNamePos + 8, endNamePos + 9);\n\t\t\t\t\t\thcParts[\"dob\"] = swipeCardData.substring(endNamePos + 9, endNamePos + 17);\n\t\t\t\t\t\thcParts[\"hinExp\"] = swipeCardData.substring(endNamePos + 1, endNamePos + 5) + hcParts[\"dob\"].substring(6, 8);\n\t\t\t\t\t\thcParts[\"hinVer\"] = swipeCardData.substring(endNamePos + 17, endNamePos + 19);\n\t\t\t\t\t\thcParts[\"firstNameShort\"] = swipeCardData.substring(endNamePos + 19, endNamePos + 24);\n\t\t\t\t\t\thcParts[\"issueDate\"] = swipeCardData.substring(endNamePos + 24, endNamePos + 30);\n\t\t\t\t\t\thcParts[\"lang\"] = swipeCardData.substring(endNamePos + 30, endNamePos + 32);\n\n\t\t\t\t\t\tif (!isNumber(hcParts[\"dob\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"dob\"] = null;\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"hinExp\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"issueDate\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"issueDate\"] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.setSwipeReady(\"done\");\n\t\t\t\t\t\tcontroller.healthCardUpdateDemographics();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\talert(\"Not Ontario Health Card\");\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.validateHC(); //Run HCValidation\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.healthCardUpdateDemographics = function healthCardUpdateDemographics()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.hcType != hcParts[\"issuer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcType = hcParts[\"issuer\"];\n\t\t\t\tcontroller.page.hcTypeColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.lastName != hcParts[\"lastName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = hcParts[\"lastName\"];\n\t\t\t\tcontroller.page.lastNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.firstName != hcParts[\"firstName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = hcParts[\"firstName\"];\n\t\t\t\tcontroller.page.firstNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (isNumber(hcParts[\"hin\"]) && controller.page.demo.hin != hcParts[\"hin\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = hcParts[\"hin\"];\n\t\t\t\tcontroller.page.hinColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.ver != hcParts[\"hinVer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = hcParts[\"hinVer\"];\n\t\t\t\tcontroller.page.verColor = colorAttn;\n\t\t\t}\n\t\t\tvar hcSex = hcParts[\"sex\"] == 1 ? \"M\" : (hcParts[\"sex\"] == 2 ? \"F\" : null);\n\t\t\tif (hcSex != null && controller.page.demo.sex != hcSex)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = hcSex;\n\t\t\t\tcontroller.page.sexColor = colorAttn;\n\t\t\t}\n\t\t\tvar dateParts = {};\n\t\t\tif (hcParts[\"dob\"] != null)\n\t\t\t{\n\t\t\t\tdateParts[\"year\"] = hcParts[\"dob\"].substring(0, 4);\n\t\t\t\tdateParts[\"month\"] = hcParts[\"dob\"].substring(4, 6);\n\t\t\t\tdateParts[\"day\"] = hcParts[\"dob\"].substring(6);\n\t\t\t\tif (controller.page.demo.dobYear != dateParts[\"year\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobYear = dateParts[\"year\"];\n\t\t\t\t\tcontroller.page.dobYearColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobMonth != dateParts[\"month\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobMonth = dateParts[\"month\"];\n\t\t\t\t\tcontroller.page.dobMonthColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobDay != dateParts[\"day\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobDay = dateParts[\"day\"];\n\t\t\t\t\tcontroller.page.dobDayColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"issueDate\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"issueDate\"].substring(0, 2) + \"-\" + hcParts[\"issueDate\"].substring(2, 4) + \"-\" + hcParts[\"issueDate\"].substring(4);\n\t\t\t\tif (controller.page.demo.effDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.effDate = swipeDate;\n\t\t\t\t\tcontroller.page.effDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"hinExp\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"hinExp\"].substring(0, 2) + \"-\" + hcParts[\"hinExp\"].substring(2, 4) + \"-\" + hcParts[\"hinExp\"].substring(4);\n\t\t\t\tif (controller.page.demo.hcRenewDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.hcRenewDate = swipeDate;\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tvar hinExpDate = buildDate(\"20\" + hcParts[\"hinExp\"].substring(0, 2), hcParts[\"hinExp\"].substring(2, 4), hcParts[\"hinExp\"].substring(4));\n\t\t\t\tif (hinExpDate != null && now > hinExpDate)\n\t\t\t\t{\n\t\t\t\t\talert(\"This health card has expired!\");\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t}\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t}\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t}\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t}\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t}\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t}\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t}\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t}\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t}\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t}\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t}\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t}\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t}\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t}\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t}\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t}\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t}\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t}\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t}\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t}\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label == \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t}\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t}\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t}\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t}\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func == \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion == \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion == \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func == \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func == \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t}\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"form ctrl \", $stateParams, $state);\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = $stateParams.formListId;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length == 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Library'\n\t\t}]; //Need to get this from the server.\n\n\t\tcontroller.page.formlists.forEach(function(item, index)\n\t\t{\n\t\t\tconsole.log('What is the item ', item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, item.label).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentFormList[index] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t});\n\n\n\t\tcontroller.page.encounterFormlist = [];\n\t\tcontroller.page.formGroups = [];\n\t\tcontroller.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tformService.getFormGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups = results;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups.push(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < controller.page.formGroups.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!(controller.page.formGroups[i].summaryItem instanceof Array))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.formGroups[i].summaryItem = [controller.page.formGroups[i].summaryItem];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getFormGroups();\n\t\tcontroller.page.formOptions = [];\n\t\tcontroller.favouriteGroup = null;\n\n\t\tgetFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tformService.getFavouriteFormGroup().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.favouriteGroup = results;\n\n\t\t\t\t\tif (!(controller.favouriteGroup.summaryItem instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.favouriteGroup.summaryItem = [controller.favouriteGroup.summaryItem];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tgetFavouriteFormGroup();\n\n\t\tformService.getFormOptions(controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(\"data\", results);\n\n\t\t\t\tif (results.items instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions = results.items;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions.push(results.items);\n\t\t\t\t}\n\n\n\t\t\t\tconsole.log(\"form options\", controller.page.formOptions);\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[0] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getSelectedEncounterForms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[1] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item, view)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar queryName = $location.search().name;\n\t\t\tvar params = {\n\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\ttype: item.type === 'eform' ? 'eform' : 'form',\n\t\t\t\tid: item.id || item.formId\n\t\t\t};\n\n\t\t\t// The items sent from the server are such that\n\t\t\t// 1. Existing eforms have a formId and an id\n\t\t\t// 2. Existing forms have a formId only\n\t\t\t// 3. Library/available eforms have a formId only\n\t\t\t// 4. Library/available forms have neither\n\t\t\tif ((item.type === 'eform' && item.id) || (item.type === 'form' && item.formId))\n\t\t\t{\n\t\t\t\tparams.name = item.type === 'form' ? item.name || queryName : '';\n\t\t\t\t$state.go('record.forms.view', params);\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\t$state.go('record.forms.add', params);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.go('record.forms');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* 1=frame\n\t\t\t* 2=newwindow\n\t\t\t*/\n\t\t\tif (view === undefined)\n\t\t\t{\n\t\t\t\tview = 1;\n\t\t\t}\n\n\t\t\tvar url = '';\n\t\t\tif (item.type === 'eform')\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmshowform_data.jsp?fdid=' + item.id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmformadd_data.jsp?fid=' + item.formId + '&demographic_no=' + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //form\n\t\t\t\tif (angular.isDefined(item.formId))\n\t\t\t\t{\n\t\t\t\t\tvar name = item.name || queryName;\n\t\t\t\t\turl = '../form/forwardshortcutname.jsp?formname=' + name + '&demographic_no=' + $stateParams.demographicNo + '&formId=' + item.formId;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = item.formValue + $stateParams.demographicNo + \"&formId=0&provNo=\" + user.providerNo + \"&parentAjaxId=forms\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view === 1)\n\t\t\t{\n\t\t\t\t$(\"html, body\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, \"slow\");\n\t\t\t}\n\t\t\telse if (view === 2)\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.page.currentForm = item;\n\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t{});\n\t\t\tcontroller.pymParent = pymParent;\n\n\t\t\t/*if(item.type != 'eform' && view==1){\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = \"1600px\"; //temp hack for the forms\n\t\t\t}*/\n\n\t\t\t//resize iframe for both form and eforms\n\t\t\t$('iframe').load(function()\n\t\t\t{\n\t\t\t\tvar maxheight = Math.max(document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.scrollHeight, document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.offsetHeight) + 30 + 'px';\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = maxheight;\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.isEmpty = function isEmpty(obj)\n\t\t{\n\t\t\tfor (var i in obj)\n\t\t\t\tif (obj.hasOwnProperty(i)) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.currentEformGroup = {};\n\n\t\tcontroller.setCurrentEFormGroup = function setCurrentEFormGroup(mod)\n\t\t{\n\t\t\tcontroller.currentEformGroup = mod;\n\t\t};\n\n\t\tcontroller.openFormFromGroups = function openFormFromGroups(item)\n\t\t{\n\t\t\tconsole.log(\"group item\", item);\n\t\t\titem.formId = item.id;\n\t\t\tdelete item.id;\n\t\t\tcontroller.viewFormState(item, 2);\n\t\t};\n\n\t\tcontroller.formOption = function formOption(opt)\n\t\t{\n\t\t\tvar atleastOneItemSelected = false;\n\t\t\tif (opt.extra == \"send2PHR\")\n\t\t\t{\n\t\t\t\tvar docIds = \"\";\n\t\t\t\tfor (var i = 0; i < controller.page.currentFormList[controller.page.currentlistId].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.page.currentFormList[controller.page.currentlistId][i].isChecked)\n\t\t\t\t\t{\n\t\t\t\t\t\tdocIds = docIds + '&sendToPhr=' + controller.page.currentFormList[controller.page.currentlistId][i].id;\n\t\t\t\t\t\tatleastOneItemSelected = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (atleastOneItemSelected)\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t\tvar url = '../eform/efmpatientformlistSendPhrAction.jsp?clientId=' + controller.demographicNo + docIds;\n\t\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atleastOneItemSelected)\n\t\t\t{\n\t\t\t\talert(\"No Documents Selected\");\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to make group setting active\n\t\t */\n\t\tcontroller.getGroupListClass = function getGroupListClass(grp)\n\t\t{\n\t\t\tif (grp === controller.currentEformGroup)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type === controller.page.currentForm.type && item.id === controller.page.currentForm.id && !Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type === controller.page.currentForm.type && item.formId === controller.page.currentForm.formId && Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t}\n\n\t\tvar currentState = $state.current.name;\n\t\tif (currentState === 'record.forms.view' || currentState === 'record.forms.add')\n\t\t{\n\t\t\tvar item = {};\n\t\t\titem.type = $state.params.type;\n\n\t\t\t// set item properties in a way that matches the content that the server returns\n\t\t\tif (currentState === 'record.forms.view' && item.type === 'eform')\n\t\t\t{\n\t\t\t\titem.id = $state.params.id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\titem.formId = $state.params.id;\n\t\t\t}\n\n\t\t\tcontroller.viewFormState(item);\n\t\t\tcontroller.changeTo(currentState === 'record.forms.view' ? 0 : 1);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.keyCode == 38)\n\t\t\t{ //up\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.keyCode == 40)\n\t\t\t{ //Down\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\tcontroller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code; //'ongoingconcerns';\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: true,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\n\t\t\tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t\teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\n\t\t\titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t\titvCheck = $interval(function()\n\t\t\t{\n\t\t\t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\n\t\t\t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}, 10000); //check for new edit every 10 sec\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\titvSet = null;\n\t\t\t\titvCheck = null;\n\t\t\t\teditingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$filter',\n\t'mod',\n\t'action',\n\t'$stateParams',\n\t'summaryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\tmod,\n\t\taction,\n\t\t$stateParams,\n\t\tsummaryService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.pageOptions = {};\n\t\tcontroller.pageOptions.printType = {};\n\t\tcontroller.pageOptions.dates = {};\n\t\tcontroller.page = {};\n\t\tcontroller.page.selectedWarning = false;\n\n\t\t/*\n\t\t *If mod length > 0 than the user has selected a note. = Default to Note\n\t\t *Other wise default to All\n\t\t */\n\t\tvar atleastOneSelected = false;\n\t\tfor (var i = 0; i < mod.length; i++)\n\t\t{\n\t\t\tif (mod[i].isSelected)\n\t\t\t{\n\t\t\t\tatleastOneSelected = true;\n\t\t\t\ti = mod.length;\n\t\t\t}\n\t\t}\n\n\t\tif (atleastOneSelected)\n\t\t{\n\t\t\tconsole.log(\"mod len \", mod.length);\n\t\t\tcontroller.pageOptions.printType = 'selected';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"printType = all\");\n\t\t\tcontroller.pageOptions.printType = 'all';\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = 'dates';\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType == 'all')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'selected')\n\t\t\t{\n\t\t\t\t//get array\n\t\t\t\tvar selectedList = [];\n\t\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueryString = queryString + '&notes2print=' + selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'dates')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tvar selectedList = [];\n\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t{\n\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t{\n\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tcontroller.pageOptions.selectedList = selectedList;\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"in summary Ctrl \", $stateParams);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNotes = [];\n\n\t\tcontroller.page.notes = {};\n\t\tcontroller.index = 0;\n\t\tcontroller.page.notes = {};\n\t\tcontroller.page.notes.notelist = [];\n\t\tcontroller.busy = false;\n\t\tcontroller.page.noteFilter = {};\n\t\tcontroller.page.currentFilter = 'none';\n\t\tcontroller.page.onlyNotes = false; // Filter for only showing encounter notes\n\t\tcontroller.page.onlyMine = false; // Filter for only showing notes the current user has created/edited\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(note)\n\t\t{\n\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAssessments = function openAssessments()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms', {formListId: 1});\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tconsole.log(controller.busy);\n\t\t\tif (controller.busy) return;\n\n\t\t\tcontroller.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, controller.index, 20, controller.page.noteFilter).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('whats the data', angular.isUndefined(results.notelist), results.notelist);\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.page.notes = data;\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"ok its in an array\", controller.busy);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.addMoreItems();\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\t// Call the findGroupNote function and search for the given note, if found, open the groupNote editor\n\t\tcontroller.editGroupNote = function editGroupNote(note)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\n\t\t\tif (obj !== null)\n\t\t\t{\n\t\t\t\tobj.module.editorNames = note.editorNames;\n\t\t\t\tcontroller.gotoState(obj.note, obj.module, obj.note.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.page.currentEditNote = {};\n\n\t\tcontroller.isNoteBeingEdited = function isNoteBeingEdited(note)\n\t\t{\n\n\t\t\tif (note.uuid === controller.page.currentEditNote.uuid && note.uuid !== null)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$rootScope.$on('currentlyEditingNote', function(event, data)\n\t\t{\n\t\t\tcontroller.page.currentEditNote = data;\n\t\t});\n\n\t\t// TODO\n\t\t$rootScope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tcontroller.page.currentEditNote = {};\n\t\t});\n\n\t\t$rootScope.$on('noteSaved', function(event, data)\n\t\t{\n\t\t\tconsole.log('new data coming in', data);\n\t\t\tvar noteFound = false;\n\t\t\tfor (var notecount = 0; notecount < controller.page.notes.notelist.length; notecount++)\n\t\t\t{\n\t\t\t\tif (data.uuid == controller.page.notes.notelist[notecount].uuid)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('uuid ' + data.uuid + ' notecount ' + notecount, data, controller.page.notes.notelist[notecount]);\n\t\t\t\t\tcontroller.page.notes.notelist[notecount] = data;\n\t\t\t\t\tnoteFound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (noteFound == false)\n\t\t\t{\n\t\t\t\tcontroller.page.notes.notelist.unshift(data);\n\t\t\t}\n\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t});\n\n\t\t// Check if note regular note, if not, we must either display the group note edit window or have no edit option\n\t\tcontroller.isRegularNote = function isRegularNote(note)\n\t\t{\n\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.setColor = function setColor(note)\n\t\t{\n\t\t\tif (note.eformData)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#DFF0D8',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.document)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#617CB2',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.rxAnnotation)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#D3D3D3',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.encounterForm)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#BCAD75',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.invoice)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '##FF7272',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.ticklerNote)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#FFA96F',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.cpp)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#9B8166',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showNoteHeader = function showNoteHeader(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.showNote = function showNote(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(controller.page.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (user.providerNo !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tcontroller.getNoteHeader = function firstLine(noteObj)\n\t\t{\n\t\t\treturn  noteObj.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tcontroller.toggleList = function toggleList(mod)\n\t\t{\n\n\t\t\t// If all the items are displayed, reset displaySize to 5 (min), else, show all the items\n\t\t\tif (mod.displaySize >= mod.summaryItem.length)\n\t\t\t{\n\t\t\t\tmod.displaySize = 5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmod.displaySize = mod.summaryItem.length;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showMoreItems = function showMoreItems(mod)\n\t\t{\n\n\t\t\tif (!angular.isDefined(mod.summaryItem))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mod.summaryItem.length == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Return true if a given section is expanded, otherwise return false\n\t\tcontroller.isSectionExpanded = function isSectionExpanded(mod)\n\t\t{\n\t\t\tif (mod.displaySize > 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Return true if a given section is empty, otherwise return false\n\t\tcontroller.isSectionEmpty = function isSectionEmpty(mod)\n\t\t{\n\t\t\tif (mod.summaryItem.length <= 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tcontroller.isUnsignedEncounterNote = function isUnsignedEncounterNote(note)\n\t\t{\n\t\t\treturn (!note.isSigned && !note.cpp && !note.document && !note.ticklerNote && !note.eformData);\n\t\t};\n\n\t\t// controller.showMoreItemsSymbol = function(mod)\n\t\t// {\n\t\t// \tif (!angular.isDefined(mod.summaryItem))\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif ((mod.displaySize < mod.summaryItem.length) && mod.displaySize == initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if ((mod.displaySize == mod.summaryItem.length) && mod.displaySize != initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if (mod.summaryItem.length <= initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down glyphicon-chevron-down-disabled pull-right\";\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif (controller.isSectionExpanded(mod))\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\n\t\t// \treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\n\t\t// };\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"left\", results);\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"right\", results);\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tif (editingNoteId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t\t\titvSet = null;\n\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\teditingNoteId = null;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\n\t\tcontroller.gotoState = function gotoState(item, mod, itemId)\n\t\t{\n\t\t\tconsole.log('ITEM: ', item);\n\t\t\tconsole.log('MOD: ', mod);\n\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal(mod, action)\n\t\t{\n\t\t\tvar size = 'lg';\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// Toggle whether the note is selected for printing\n\t\tcontroller.toggleIsSelectedForPrint = function toggleIsSelectedForPrint(note)\n\t\t{\n\t\t\tnote.isSelected = !note.isSelected;\n\t\t};\n\n\t}\n]);\n\n\nvar itvSet = null;\nvar itvCheck = null;\nvar editingNoteId = null;","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'scheduleService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\t/*\n\t\tcontroller.recordtabs2 = [ \n\t\t {id : 0,name : 'Master',url : 'partials/master.html'},\n\t\t {id : 1,name : 'Summary',url : 'partials/summary.html'},\n\t\t {id : 2,name : 'Rx',url : 'partials/rx.jsp'},\n\t\t {id : 3,name : 'Msg',url : 'partials/summary.html'},\n\t\t {id : 4,name : 'Trackers',url : 'partials/tracker.jsp'},\n\t\t {id : 5,name : 'Consults',url : 'partials/summary.html'},\n\t\t {id : 6,name : 'Forms',url : 'partials/formview.html'},\n\t\t {id : 7,name : 'Prevs/Measurements',url : 'partials/summary.html'},\n\t\t {id : 8,name : 'Ticklers',url : 'partials/summary.html'},\n\t\t {id : 9,name : 'MyOscar',url : 'partials/blank.jsp'},\n\t\t {id : 10,name : 'Allergies',url : 'partials/summary.html'},\n\t\t {id : 11,name : 'CPP',url : 'partials/cpp.html'},\n\t\t {id : 12,name : 'Labs/Docs',url : 'partials/labview.html'},\n\t\t {id : 13,name : 'Billing',url : 'partials/billing.jsp'}\t\n\t\t*/\n\t\tcontroller.recordtabs2 = [];\n\t\t/*\n\t\t                 \t {id : 0,displayName : 'Details'  ,path : 'record.details'},\n\t\t                 \t {id : 1,displayName : 'Summary'  ,path : 'record.summary'},\n\t\t                 \t {id : 2,displayName : 'Forms'    ,path : 'record.forms'},\n\t\t                 \t {id : 3,displayName : 'Labs/Docs',path : 'partials/eform.jsp'},\n\t\t                 \t {id : 4,displayName : 'Rx'       ,path : 'partials/eform.jsp'}];\n\t\t*/\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//var transitionP = $state.transitionTo(controller.recordtabs2[0].path,$stateParams,{location:'replace',notify:true});\n\t\t//console.log(\"transition \",transitionP);\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t\t//console.log(controller.recordtabs2[temp].path);\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn ($state.current.name === tab.state);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tconsole.log(\"whats the val \", (newVal != oldVal));\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$rootScope.$emit('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\t// if (controller.page.encounterNote.issueDescriptions == null)\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions = controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\t// else\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions += \",\" + controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$rootScope.$emit('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tscheduleService.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\n\t\tconsole.log('RecordCtrlEnd', $state);\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t// controller.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t// controller.$storage.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","angular.module('PatientList').controller('PatientList.PatientListProgramController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\t$scope.$on('updatePatientList', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientList=' + JSON.stringify(data));\n\t\t\tcontroller.updateData(data.currentPage, data.pageSize);\n\t\t});\n\n\n\t\t//the currentPage is 0 based\n\t\tcontroller.updateData = function updateData(currentPage, pageSize)\n\t\t{\n\t\t\tvar startIndex = currentPage * pageSize;\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/program/patientList?startIndex=' + startIndex + '&numToReturn=' + pageSize,\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders:\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.admissions = results.data.content;\n\t\t\t\t\t$scope.$emit('updatePatientListPagination', results.data.total);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//initialize..\n\t\tcontroller.updateData(0, controller.pageSize);\n\t\t$scope.$emit('togglePatientListFilter', false);\n\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListDemographicSetController', [\n\n\t'$scope',\n\t'$http',\n\t'Navigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\tNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$http(\n\t\t{\n\t\t\turl: '../ws/rs/reporting/demographicSets/list',\n\t\t\tmethod: \"GET\",\n\t\t\theaders:\n\t\t\t{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.sets = results.data.content;\n\t\t\t},\n\t\t\tfunction error(error)\n\t\t\t{\n\t\t\t\talert('Failed to get sets lists.');\n\t\t\t});\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListConfigController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'config',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tconfig)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.patientListConfig = config;\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\tcontroller.saveConfiguration = function saveConfiguration()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.patientListConfig);\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListAppointmentListController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$filter',\n\t'$uibModal',\n\t'Navigation',\n\t'scheduleService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$filter,\n\t\t$uibModal,\n\t\tNavigation,\n\t\tscheduleService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.dateOptions = {\n\t\t\tshowWeeks: false\n\t\t};\n\n\t\tscheduleService.getStatuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.statuses = results.content;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.getAppointmentTextStyle = function getAppointmentTextStyle(patient)\n\t\t{\n\t\t\tif (patient.demographicNo == 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'color': 'white'\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t//TODO:this gets called alot..should switch to a dictionary.\n\t\tcontroller.getAppointmentStyle = function getAppointmentStyle(patient)\n\t\t{\n\t\t\tif (patient.demographicNo == 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'background-color': 'black'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (controller.statuses != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < controller.statuses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.statuses[i].status == patient.status)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'background-color': controller.statuses[i].color\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {};\n\t\t};\n\n\n\t\tcontroller.today = function today()\n\t\t{\n\t\t\tcontroller.appointmentDate = new Date();\n\t\t};\n\n\t\tcontroller.today();\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.appointmentDate = null;\n\t\t};\n\n\t\tcontroller.open = function open($event)\n\t\t{\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t\tcontroller.opened = true;\n\t\t};\n\n\t\tDate.prototype.AddDays = function AddDays(noOfDays)\n\t\t{\n\t\t\tthis.setTime(this.getTime() + (noOfDays * (1000 * 60 * 60 * 24)));\n\t\t\treturn this;\n\t\t};\n\n\t\tcontroller.switchDay = function switchDay(n)\n\t\t{\n\t\t\tvar dateNew = controller.appointmentDate;\n\t\t\tdateNew.AddDays(n);\n\n\t\t\tcontroller.appointmentDate = dateNew;\n\n\t\t\tvar formattedDate = $filter('date')(dateNew, 'yyyy-MM-dd');\n\n\t\t\tcontroller.changeApptList(formattedDate);\n\n\n\t\t};\n\n\t\tcontroller.changeApptDate = function changeApptDate()\n\t\t{\n\t\t\tif (controller.appointmentDate == undefined)\n\t\t\t{\n\t\t\t\tcontroller.today();\n\t\t\t}\n\t\t\tvar formattedDate = $filter('date')(controller.appointmentDate, 'yyyy-MM-dd');\n\t\t\tcontroller.changeApptList(formattedDate);\n\t\t};\n\n\t\tcontroller.changeApptList = function changeApptList(day)\n\t\t{\n\n\t\t\ttemp = 0;\n\n\t\t\tcontroller.currenttab = patientListState.tabItems[temp];\n\t\t\tvar lastIndx = controller.currenttab.url.lastIndexOf(\"/\");\n\t\t\tcontroller.currenttab.url = controller.currenttab.url.slice(0, lastIndx + 1) + day;\n\t\t\tcontroller.showFilter = true;\n\t\t\t$scope.$emit('juno:patientListRefresh');\n\t\t};\n\n\t\tcontroller.addNewAppointment = function addNewAppointment()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentAdd.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentAddController as appointmentAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tapptDate: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.appointmentDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.viewAppointment = function viewAppointment(apptNo)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentView.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentViewController as appointmentViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tappointment: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getAppointment(apptNo);\n\t\t\t\t\t},\n\t\t\t\t\tstatusList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getStatuses();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('PatientList').controller('PatientList.PatientListController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'angularUtil',\n\t'Navigation',\n\t'personaService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\tangularUtil,\n\t\tNavigation,\n\t\tpersonaService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.sidebar = Navigation;\n\t\tcontroller.showFilter = true;\n\t\tcontroller.patientListConfig = {};\n\n\n\t\tcontroller.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t};\n\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hidePatientList();\n\t\t\t\t\t\tconsole.log('hiding patientlist');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"params\", params);\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t//for filter box\n\t\tcontroller.query = '';\n\n\n\t\tcontroller.isActive = function isActive(temp)\n\t\t{\n\t\t\tif (controller.currenttab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currenttab.id;\n\t\t};\n\n\t\tcontroller.isMoreActive = function isMoreActive(temp)\n\t\t{\n\t\t\tif (controller.currentmoretab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currentmoretab.id;\n\t\t};\n\n\t\tcontroller.showPatientList = function showPatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', true);\n\t\t};\n\n\t\tcontroller.hidePatientList = function hidePatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', false);\n\t\t};\n\n\t\tcontroller.changeMoreTab = function changeMoreTab(temp, filter)\n\t\t{\n\t\t\tvar beforeChangeTab = controller.currentmoretab;\n\t\t\tcontroller.currentmoretab = controller.moreTabItems[temp];\n\n\t\t\tcontroller.showFilter = true;\n\t\t\tcontroller.currenttab = null;\n\t\t\tcontroller.refresh(filter);\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(temp, filter)\n\t\t{\n\t\t\tif(controller.currenttab !== patientListState.tabItems[temp])\n\t\t\t{\n\t\t\t\tcontroller.currenttab = patientListState.tabItems[temp];\n\t\t\t\tcontroller.showFilter = true;\n\t\t\t\tcontroller.currentmoretab = null;\n\t\t\t\tcontroller.refresh(filter);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getMoreTabClass = function getMoreTabClass(id)\n\t\t{\n\t\t\tif (controller.currentmoretab != null && id == controller.currentmoretab.id)\n\t\t\t{\n\t\t\t\treturn \"more-tab-highlight\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\tcontroller.currentPage = 0;\n\t\tcontroller.pageSize = 8;\n\t\tcontroller.patients = null;\n\n\t\tcontroller.numberOfPages = function numberOfPages()\n\t\t{\n\t\t\tif (controller.nPages == null || controller.nPages == 0)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn controller.nPages;\n\t\t};\n\n\n\t\t$scope.$on('updatePatientListPagination', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientListPagination=' + data);\n\t\t\tcontroller.nPages = Math.ceil(data / controller.pageSize);\n\t\t\tconsole.log('nPages=' + controller.nPages);\n\t\t});\n\n\n\t\tcontroller.changePage = function changePage(pageNum)\n\t\t{\n\t\t\tcontroller.currentPage = pageNum;\n\t\t\t//broadcast the change page\n\t\t\t$scope.$broadcast('updatePatientList',\n\t\t\t{\n\t\t\t\tcurrentPage: controller.currentPage,\n\t\t\t\tpageSize: controller.pageSize\n\t\t\t});\n\t\t};\n\n\n\t\t//  $scope.$watch(\"currentPage\", function(newValue, oldValue) {\n\t\t//     console.log('currentPage changes from ' + oldValue + ' to ' + newValue);\n\t\t//   });\n\n\t\t$scope.$on('togglePatientListFilter', function(event, data)\n\t\t{\n\t\t\tconsole.log(\"received a togglePatientListFilter event:\" + data);\n\t\t\tcontroller.showFilter = data;\n\t\t});\n\n\n\t\tcontroller.process = function process(tab, filter)\n\t\t{\n\t\t\tif (tab.url != null)\n\t\t\t{\n\n\t\t\t\tvar d = undefined;\n\t\t\t\tif (tab.httpType == 'POST')\n\t\t\t\t{\n\t\t\t\t\td = filter != null ? JSON.stringify(filter) :\n\t\t\t\t\t{}\n\t\t\t\t}\n\n\t\t\t\t$http(\n\t\t\t\t{\n\t\t\t\t\turl: tab.url,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata: d,\n\t\t\t\t\tmethod: tab.httpType,\n\t\t\t\t\theaders:\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t}).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.template = tab.template;\n\t\t\t\t\t\tNavigation.load(controller.template);\n\n\t\t\t\t\t\tcontroller.currentPage = 0;\n\n\t\t\t\t\t\tif (results.data.patients instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patients = results.data.patients;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (results.data.patients == undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patients = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar arr = new Array();\n\t\t\t\t\t\t\tarr[0] = results.data.patients;\n\t\t\t\t\t\t\tcontroller.patients = arr;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.nPages = 1;\n\t\t\t\t\t\tif (controller.patients != null && controller.patients.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.nPages = Math.ceil(controller.patients.length / controller.pageSize);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\talert('error loading data for patient list:' + error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.changePage(controller.currentPage);\n\t\t\t\tcontroller.currentPage = 0;\n\t\t\t\tcontroller.nPages = 1;\n\t\t\t\tcontroller.template = tab.template;\n\t\t\t\tNavigation.load(controller.template);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.refresh = function refresh(filter)\n\t\t{\n\n\t\t\tif (controller.currenttab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currenttab, filter);\n\t\t\t}\n\t\t\tif (controller.currentmoretab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currentmoretab, filter);\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function()\n\t\t{\n\t\t\tcontroller.refresh();\n\t\t});\n\n\t\tproviderService.getRecentPatientList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tpersonaService.getPatientListConfig().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.getTabItems = function getTabItems()\n\t\t{\n\t\t\treturn patientListState.tabItems;\n\t\t};\n\n\t\tcontroller.manageConfiguration = function manageConfiguration()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientlist/patientListConfiguration.jsp',\n\t\t\t\tcontroller: 'PatientList.PatientListConfigController as patientListConfigCtrl',\n\t\t\t\tbackdrop: false,\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconfig: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.patientListConfig;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tpersonaService.setPatientListConfig(results).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t\t\t\t\t$scope.$emit('updatePatientListPagination', controller.patients.length);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tpatientListState.tabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Appts.\",\n\t\t\t\ttemplate: \"src/patientlist/patientList1.jsp\",\n\t\t\t\turl: \"../ws/rs/schedule/day/today\",\n\t\t\t\thttpType: \"GET\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Recent\",\n\t\t\t\ttemplate: \"src/patientlist/recent.jsp\",\n\t\t\t\turl: \"../ws/rs/providerService/getRecentDemographicsViewed\",\n\t\t\t\thttpType: \"GET\"\n\t\t\t}\n\t\t];\n\t\tcontroller.moreTabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Patient Sets\",\n\t\t\t\ttemplate: \"src/patientlist/demographicSets.jsp\",\n\t\t\t\turl: \"../ws/rs/reporting/demographicSets/patientList\",\n\t\t\t\thttpType: \"POST\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Caseload\",\n\t\t\t\ttemplate: \"src/patientlist/program.jsp\",\n\t\t\t\turl: null,\n\t\t\t\thttpType: null\n\t\t\t}\n\t\t];\n\t\tcontroller.changeTab(0);\n\t}\n]);","angular.module(\"PatientList\").service(\"patientListState\", [\n\t// Store variables here that must be accessible across controllers in patientlist\n\tfunction()\n\t{\n\t\tvar service = this;\n\n\t\tservice.tabItems = [];\n\n\t}\n]);","'use strict';\n\nangular.module('PatientList', ['Common', 'Common.Services']);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        console.log('TABLE PARAMS', NgTableParams);\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n                \tconsole.log(\"k2a feed response\", response);\n\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateMessages();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n            }\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n    }\n]);","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Patient').controller('Patient.NewPatientController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'demographicService',\n\t'securityService',\n\t'programService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tprogramService,\n\t\tstaticDataService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.demographic = {};\n\n\t\tcontroller.submitDisabled = false;\n\n\t\t//get access right for creating new patient\n\t\tsecurityService.hasRight(\"_demographic\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.hasRight = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.programs = results;\n\t\t\t\tif (controller.programs.length == 1)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographic.admissionProgramId = controller.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get genders to be selected\n\t\tcontroller.genders = staticDataService.getGenders();\n\n\t\tcontroller.save = function save(ngModelContoller)\n\t\t{\n\t\t\tconsole.log(controller.demographic.lastName);\n\t\t\tconsole.log(controller.demographic.firstName);\n\t\t\tconsole.log(controller.demographic.dobYear);\n\t\t\tconsole.log(controller.demographic.dobMonth);\n\t\t\tconsole.log(controller.demographic.dobDay);\n\t\t\tconsole.log(controller.demographic.sex);\n\t\t\tconsole.log(controller.demographic);\n\t\t\tconsole.log(ngModelContoller.$valid);\n\t\t\tconsole.log($scope);\n\n\t\t\tcontroller.submitDisabled = true;\n\n\t\t\tif (ngModelContoller.$valid)\n\t\t\t{\n\t\t\t\tconsole.log(\"Saving...\");\n\n\t\t\t\tif (!controller.isCorrectDate(controller.demographic.dobYear,\n\t\t\t\t\t\tcontroller.demographic.dobMonth, controller.demographic.dobDay))\n\t\t\t\t{\n\t\t\t\t\talert(\"Incorrect Date of Birth!\");\n\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.demographic.dateOfBirth =\n\t\t\t\t\tcontroller.demographic.dobYear + '-' +\n\t\t\t\t\tcontroller.demographic.dobMonth + \"-\" +\n\t\t\t\t\tcontroller.demographic.dobDay;\n\n\t\t\t\tcontroller.demographic.patientStatusDate = new Date();\n\t\t\t\tcontroller.demographic.dateJoined = new Date();\n\t\t\t\tcontroller.demoRetVal = {};\n\n\t\t\t\tdemographicService.saveDemographic(controller.demographic).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tcontroller.demoRetVal = results;\n\t\t\t\t\t\t$uibModalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"ERR!!\");\n\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.ok = function ok()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.selected.item);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.capName = function capName()\n\t\t{\n\t\t\tif (controller.demographic.lastName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.lastName = controller.demographic.lastName.toUpperCase();\n\t\t\t}\n\n\t\t\tif (controller.demographic.firstName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.firstName = controller.demographic.firstName.toUpperCase();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isCorrectDate = function isCorrectDate(year, month, day)\n\t\t{\n\t\t\tvar d = new Date(year, month - 1, day);\n\n\t\t\tif (d == \"Invalid Date\") return false;\n\t\t\tif (d.getFullYear() != year) return false;\n\t\t\tif (d.getMonth() != month - 1) return false;\n\t\t\tif (d.getDate() != day) return false;\n\n\t\t\treturn true;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Layout').controller('Layout.NavBarController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$q',\n\t'$timeout',\n\t'$location',\n\t'$state',\n\t'$uibModal',\n\t'securityService',\n\t'personaService',\n\t'billingService',\n\t'inboxService',\n\t'messageService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$q,\n\t\t$timeout,\n\t\t$location,\n\t\t$state,\n\t\t$uibModal,\n\t\tsecurityService,\n\t\tpersonaService,\n\t\tbillingService,\n\t\tinboxService,\n\t\tmessageService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.unAckLabDocTotal = 0;\n\t\t\tcontroller.unreadMessageTotal = 0;\n\t\t\tcontroller.demographicSearch = null;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'w'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.searchRights = results.content[0];\n\t\t\t\t\t\tcontroller.newDemographicRights = results.content[1];\n\t\t\t\t\t\tcontroller.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.getUnAckLabDocCount();\n\t\t\t\t\tcontroller.getUnreadMessageCount();\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tcontroller.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tconsole.log('NavBarController::watch demographicSearch', controller.demographicSearch);\n\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tcontroller.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tcontroller.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tcontroller.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tcontroller.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tcontroller.demographicSearch = null;\n\t\t};\n\n\t\tcontroller.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t{\n\t\t\t\tterm: search\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'search'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'record.details'\n\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tcontroller.transition = function transition(item)\n\t\t{\n\t\t\tconsole.log('transition', item);\n\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Admin\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../administration/\";\n\t\t\t\t\twname = \"admin\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openMessenger = function(item)\n\t\t{\n\t\t\tif (controller.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\t\t\t\t\tconsole.log($location.path());\n\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\n\t\t\t\t\tconsole.log($location.path());\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn ($state.current.name === tab.state);\n\t\t};\n\n\t\tcontroller.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\n\t\t\t\tvar labelsToShow = ['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tcontroller.smallNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Dashboard'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = true;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tconsole.log(\"Layout.BodyController updating showPatientList\", value);\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplay_field_errors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.display_field_errors) ||\n\t\t\t$scope.display_field_errors !== false)\n\t\t{\n\t\t\t$scope.display_field_errors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.display_field_errors &&\n\t\t\t\t$scope.errors.display_field_errors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.rows = '@caRows';\n\tscope.max_characters = '@caMaxCharacters';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.model)\n\t\t{\n\t\t\t$scope.model = '';\n\t\t}\n\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t{\n\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t}\n\t\t});\n\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.options = '=caOptions';\n\tscope.include_empty_option = '@caEmptyOption';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t};\n\n  return {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function(e) {\n\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\tconsole.log('DRAGGABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\tconsole.log('RESIZABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\n\t\t\t\tconsole.log('RESIZABLE DIRECTIVE HEIGHT ', $(\".note-editor-textarea\").height());\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: 'Name',\n\t\t\t\t\t'term': search,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(function success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(data.content);\n\t\t\t\t\t\tconsole.log('dataa', data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = data.content;\n\t\t\t\t\t\tif(data.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: data.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\tconsole.log('typeaheadHelper::onSelect - setting model', $item);\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onChange - setting model (isTypeaheadSearchQuery)');\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgendered\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.has_one_of_permissions = function has_one_of_permissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.has_permission = function has_permission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"scheduleService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getStatuses = function getStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/statuses',\n\t\t\t\tservice.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching statuses\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTypes = function getTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/types',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointments = function getAppointments(day)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/day/' +\n\t\t\t\tencodeURIComponent(day)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting appointments\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAppointment = function addAppointment(appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(appointment),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::addAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointment = function getAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/getAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.appointment);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.deleteAppointment = function deleteAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/deleteAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::deleteAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while deleting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.appointmentHistory = function appointmentHistory(demoNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/' +\n\t\t\t\t\tencodeURIComponent(demoNo) + \"/appointmentHistory\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::appointmentHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting appointment history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.cancelAppointment = function cancelAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'C'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::cancelAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while cancelling appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.noShowAppointment = function noShowAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'N'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::noShowAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting no show appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleGroups = function getScheduleGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/groups',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getScheduleGroups error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSchedulesForCalendar = function getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\tsiteName\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'schedule/calendar/';\n\t\t\turl += encodeURIComponent(providerId) + '/';\n\t\t\turl += '?startDate=' + encodeURIComponent(startDate);\n\t\t\turl += '&endDate=' + encodeURIComponent(endDate);\n\n\t\t\tif(siteName != null)\n\t\t\t{\n\t\t\t\turl += '&site=' + encodeURIComponent(siteName);\n\t\t\t}\n\n\t\t\tjunoHttp.get(\n\t\t\t\turl,\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSchedulesForCalendar error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleTemplateCodes = function getAvailabilityCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/templateCodes',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAvailabilityTypes error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointmentStatuses = function getAppointmentStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/calendar/statuses',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointmentStatuses error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSites = function getSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'sites',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSites error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"providerService::getRecentDemographicsViewed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results.data);\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\toffset: encodeURIComponent(offset),\n\t\t\t\tnumToReturn: encodeURIComponent(numberToReturn),\n\t\t\t\tnoteConfig: noteConfig\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/' + demographicNo + '/completedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getCompletedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching completed encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur'\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errors_hash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t\t\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errors_hash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errors_hash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    console.log('converted RESULTS: ', results.data);\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while saving demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","'use strict';\n\n// Helper functions for cpCalendar\nangular.module('cpCalendar').factory(\n\t'cpCalendar.Util',\n\t[\n\n\t\tfunction (\n\t\t) {\n\t\t\tvar service = {\n\t\t\t\tsettings: {\n\t\t\t\t\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\t\t\t\t\ttime_format: \"h:mma\",\n\t\t\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\t\t\tdayofweek_format: \"dddd\"\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t// ===============================================================================================\n\t\t\t// Public Methods\n\t\t\t// ===============================================================================================\n\n\t\t\t// Use this to check for existence of value.  It will allow anything that\n\t\t\t// we want to be written to a text box when prefilling\n\t\t\tservice.exists = function exists(value)\n\t\t\t{\n\t\t\t\t// Don't allow undefined or null\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Don't allow empty strings\n\t\t\t\tif (value === '')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\tservice.is_integer_string = function is_integer_string(string)\n\t\t\t{\n\t\t\t\tvar parsed_string = parseInt(string);\n\n\t\t\t\tif (/^-?\\d+$/.test(string.toString()))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\tservice.escape_html = function escape_html(str)\n\t\t\t{\n\t\t\t\tvar entityMap = {\n\t\t\t\t\t\"&\": \"&amp;\",\n\t\t\t\t\t\"<\": \"&lt;\",\n\t\t\t\t\t\">\": \"&gt;\",\n\t\t\t\t\t'\"': '&quot;',\n\t\t\t\t\t\"'\": '&#39;',\n\t\t\t\t\t\"/\": '&#x2F;'\n\t\t\t\t};\n\n\t\t\t\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t\t\t\t{\n\t\t\t\t\treturn entityMap[s];\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tservice.get_datetime_moment = function get_datetime_moment(datetime_string)\n\t\t\t{\n\t\t\t\treturn moment.utc(datetime_string,\n\t\t\t\t\tservice.settings.datetime_format, true);\n\t\t\t};\n\n\t\t\tservice.get_date_string = function get_date_string(moment)\n\t\t\t{\n\t\t\t\treturn moment.format(service.settings.date_format);\n\t\t\t};\n\n\t\t\tservice.get_date_moment = function get_date_moment(date_string)\n\t\t\t{\n\t\t\t\treturn moment.utc(date_string, service.settings.date_format, true);\n\t\t\t};\n\n\t\t\tservice.get_time_moment = function get_time_moment(time_string)\n\t\t\t{\n\t\t\t\treturn moment.utc(time_string, service.settings.time_format, true);\n\t\t\t};\n\n\t\t\tservice.get_date_and_time_moment = function get_combined_moment(date_string, time_string)\n\t\t\t{\n\t\t\t\treturn moment.utc(date_string + \" \" + time_string,\n\t\t\t\t\tservice.settings.date_format + \" \" +\n\t\t\t\t\tservice.settings.time_format, true);\n\t\t\t};\n\n\t\t\tservice.get_time_string = function get_time_string(moment, format)\n\t\t\t{\n\t\t\t\tif(!format) {\n\t\t\t\t\tformat = service.settings.time_format;\n\t\t\t\t}\n\t\t\t\treturn moment.format(format);\n\t\t\t};\n\n\t\t\tservice.validate_date_string = function validate_date_string(\n\t\t\t\tdate_string, display_errors, field, required)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(date_string))\n\t\t\t\t{\n\t\t\t\t\tvar moment = service.get_date_moment(date_string);\n\t\t\t\t\tif(!moment.isValid())\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplay_errors.add_field_error(field, 'is invalid');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(required)\n\t\t\t\t{\n\t\t\t\t\tdisplay_errors.add_field_error(field, 'is required');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tservice.validate_time_string = function validate_time_string(\n\t\t\t\ttime_string, display_errors, field, required)\n\t\t\t{\n\t\t\t\tif (Juno.Common.Util.exists(time_string))\n\t\t\t\t{\n\t\t\t\t\tvar moment = service.get_time_moment(time_string);\n\t\t\t\t\tif (!moment.isValid())\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplay_errors.add_field_error(field, 'is invalid');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (required)\n\t\t\t\t{\n\t\t\t\t\tdisplay_errors.add_field_error(field, 'is required');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tservice.datetime_range_overlaps = function datetime_range_overlaps(\n\t\t\t\tfirst_start_moment, first_end_moment,\n\t\t\t\tsecond_start_moment, second_end_moment)\n\t\t\t{\n\t\t\t\t// the first must start before the second ends,\n\t\t\t\t// and the second must end after the first starts\n\t\t\t\treturn (first_end_moment === null ||\n\t\t\t\t\tsecond_start_moment === null ||\n\t\t\t\t\tsecond_start_moment.isBefore(first_end_moment)) &&\n\t\t\t\t\t(second_end_moment === null ||\n\t\t\t\t\t\tfirst_start_moment === null ||\n\t\t\t\t\t\tsecond_end_moment.isAfter(first_start_moment));\n\t\t\t};\n\n\t\t\tservice.sort_by_property_fn = function sort_by_property_fn(sort_col, sort_dir)\n\t\t\t{\n\t\t\t\tif (['ASC', 'DESC'].indexOf(sort_dir) < 0)\n\t\t\t\t{\n\t\t\t\t\tsort_dir = 'ASC';\n\t\t\t\t}\n\n\t\t\t\treturn function (a, b)\n\t\t\t\t{\n\t\t\t\t\tif (a[sort_col] > b[sort_col])\n\t\t\t\t\t{\n\t\t\t\t\t\treturn (sort_dir == 'ASC') ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (a[sort_col] < b[sort_col])\n\t\t\t\t\t{\n\t\t\t\t\t\treturn (sort_dir == 'ASC') ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tservice.create_availability_events = function create_availability_events(\n\t\t\t\t\tevent_array, availability, availability_types, start, end)\n\t\t\t{\n\t\t\t\tvar event_start = service.get_datetime_moment(availability.start_time);\n\t\t\t\tvar event_end = service.get_datetime_moment(availability.end_time);\n\n\t\t\t\t// use fullCalendar moment to ensure stripTime is available on object (used by calendar)\n\t\t\t\tevent_start = $.fullCalendar.moment(event_start);\n\t\t\t\tevent_end = $.fullCalendar.moment(event_end);\n\n\t\t\t\tvar availability_type = availability_types[\n\t\t\t\t\t\tavailability.availability_type_uuid];\n\n\t\t\t\tif(service.exists(availability_type) &&\n\t\t\t\t\t\tservice.datetime_range_overlaps(\n\t\t\t\t\t\t\t\tevent_start, event_end, start, end))\n\t\t\t\t{\n\t\t\t\t\tservice.create_background_events(event_array, event_start, event_end,\n\t\t\t\t\t\t\tavailability_type, availability.schedule_uuid);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tservice.create_relation_events = function create_relation_events(\n\t\t\t\t\tevent_array, schedule_templates, availability_types, relation, start, end)\n\t\t\t{\n\t\t\t\tvar template = schedule_templates[relation.schedule_template_uuid];\n\n\t\t\t\tvar relation_start = service.exists(relation.start_date) ?\n\t\t\t\t\t\tmoment(relation.start_date) : null;\n\t\t\t\tvar relation_end = service.exists(relation.end_date) ?\n\t\t\t\t\t\tmoment(relation.end_date) : null;\n\n\t\t\t\t// go through each day that is visible on the calendar\n\t\t\t\t// and if the schedule template relation is on the day,\n\t\t\t\t// create the template events for that day\n\n\t\t\t\tvar processing_date = moment.utc().year(start.year()).month(\n\t\t\t\t\t\tstart.month()).date(start.date()).hour(\n\t\t\t\t\t\t0).minute(0).second(0).milliseconds(0);\n\n\t\t\t\twhile(processing_date.unix() <= end.unix())\n\t\t\t\t{\n\t\t\t\t\tif((relation_start === null ||\n\t\t\t\t\t\t\trelation_start.unix() <= processing_date.unix()) &&\n\t\t\t\t\t\t\t(relation_end === null ||\n\t\t\t\t\t\t\t\t\trelation_end.unix() >= processing_date.unix()))\n\t\t\t\t\t{\n\t\t\t\t\t\tservice.create_template_events(\n\t\t\t\t\t\t\t\tevent_array, availability_types, template, relation, processing_date);\n\t\t\t\t\t}\n\n\t\t\t\t\tprocessing_date.add(1, 'd');\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t// ===============================================================================================\n\t\t\t// Private Methods\n\t\t\t// ===============================================================================================\n\n\t\t\tservice.create_background_events = function create_background_events(\n\t\t\t\t\tevent_array, event_start, event_end, availability_type, schedule_uuid)\n\t\t\t{\n\t\t\t\t// get the available time ranges given the existing events and\n\t\t\t\t// the desired time range\n\t\t\t\tvar available_time_ranges = service.get_available_time_ranges(\n\t\t\t\t\t\tevent_array, event_start, event_end);\n\n\t\t\t\tfor(var k = 0; k < available_time_ranges.length; k++)\n\t\t\t\t{\n\t\t\t\t\t// create an event for all the available time gaps\n\t\t\t\t\tevent_array.push(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstart: available_time_ranges[k].start,\n\t\t\t\t\t\t\t\tend: available_time_ranges[k].end,\n\t\t\t\t\t\t\t\tcolor: availability_type.color,\n\t\t\t\t\t\t\t\trendering: 'background',\n\t\t\t\t\t\t\t\tresourceId: schedule_uuid,\n\t\t\t\t\t\t\t\tavailability_type: availability_type\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tservice.get_available_time_ranges = function get_available_time_ranges(\n\t\t\t\t\tevents, start_time, end_time)\n\t\t\t{\n\t\t\t\tvar overlapping_events = service.get_overlapping_events(\n\t\t\t\t\t\tevents, start_time, end_time);\n\n\t\t\t\t// if there are no overlapping events, then the whole range is available\n\t\t\t\tif(overlapping_events.length === 0)\n\t\t\t\t{\n\t\t\t\t\treturn [ { start: start_time, end: end_time } ];\n\t\t\t\t}\n\n\t\t\t\t// otherwise there are overlapping events: go through and find the gaps\n\t\t\t\tvar available_time_ranges = [];\n\n\t\t\t\tvar available_time_range = {};\n\t\t\t\tfor(var i = 0; i < overlapping_events.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar overlapping = overlapping_events[i];\n\n\t\t\t\t\t// if the overlap starts in the middle of the event,\n\t\t\t\t\t// the last available time slot ends there\n\t\t\t\t\tif(!service.exists(available_time_range.end) &&\n\t\t\t\t\t\t\toverlapping.start.isAfter(start_time))\n\t\t\t\t\t{\n\t\t\t\t\t\tavailable_time_range.end = overlapping.start;\n\n\t\t\t\t\t\t// if ended without a start, the start was the start_time\n\t\t\t\t\t\tif(!service.exists(available_time_range.start))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tavailable_time_range.start = start_time;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if a valid available time range has been found,\n\t\t\t\t\t// add it and reset the working hash\n\t\t\t\t\tif(service.exists(available_time_range.start) &&\n\t\t\t\t\t\t\tservice.exists(available_time_range.end) &&\n\t\t\t\t\t\t\tavailable_time_range.start.isBefore(available_time_range.end))\n\t\t\t\t\t{\n\t\t\t\t\t\tavailable_time_ranges.push(angular.copy(available_time_range));\n\t\t\t\t\t\tavailable_time_range = {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the overlap starts in the middle of the event,\n\t\t\t\t\t// the last available time slot ends there\n\t\t\t\t\tif(!service.exists(available_time_range.start) &&\n\t\t\t\t\t\t\toverlapping.end.isBefore(end_time))\n\t\t\t\t\t{\n\t\t\t\t\t\tavailable_time_range.start = overlapping.end;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// started an availability slot at the end of the range, end it and add\n\t\t\t\tif(!service.exists(available_time_range.end) &&\n\t\t\t\t\t\tservice.exists(available_time_range.start))\n\t\t\t\t{\n\t\t\t\t\tavailable_time_range.end = end_time;\n\t\t\t\t\tavailable_time_ranges.push(angular.copy(available_time_range));\n\t\t\t\t}\n\n\t\t\t\treturn available_time_ranges;\n\t\t\t};\n\n\t\t\tservice.get_overlapping_events = function get_overlapping_events(\n\t\t\t\t\tevents, start_time, end_time)\n\t\t\t{\n\t\t\t\tvar overlaps = [];\n\t\t\t\tfor(var i = 0; i < events.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar bg_event = events[i];\n\t\t\t\t\tif(service.datetime_range_overlaps(\n\t\t\t\t\t\t\tstart_time, end_time, bg_event.start, bg_event.end))\n\t\t\t\t\t{\n\t\t\t\t\t\toverlaps.push(bg_event);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toverlaps.sort(service.sort_by_property_fn('start'));\n\n\t\t\t\treturn overlaps;\n\t\t\t};\n\n\t\t\tservice.create_template_events = function create_template_events(\n\t\t\t\t\tevent_array, availability_types, template, relation, moment_date)\n\t\t\t{\n\t\t\t\tvar day = moment_date.format('dddd').toLowerCase();\n\n\t\t\t\t// find the time periods defined for the template on the\n\t\t\t\t// given day of the week\n\t\t\t\tvar process_time_periods = [];\n\t\t\t\tfor(var i = 0; i < template.schedule_template_days.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar template_day = template.schedule_template_days[i];\n\t\t\t\t\tif(day == template_day.day_of_the_week)\n\t\t\t\t\t{\n\t\t\t\t\t\tprocess_time_periods =\n\t\t\t\t\t\t\t\ttemplate_day.schedule_template_time_periods;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// for each time period, calculate the start and end times\n\t\t\t\t// and create the events for non-overlapping time ranges\n\t\t\t\tfor(var j = 0; j < process_time_periods.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar time_period = process_time_periods[j];\n\n\t\t\t\t\tvar event_start = moment_date.clone().hour(\n\t\t\t\t\t\t\ttime_period.start_time.split(':')[0]).minute(\n\t\t\t\t\t\t\ttime_period.start_time.split(':')[1]);\n\n\t\t\t\t\tvar event_end = moment_date.clone().hour(\n\t\t\t\t\t\t\ttime_period.end_time.split(':')[0]).minute(\n\t\t\t\t\t\t\ttime_period.end_time.split(':')[1]);\n\n\t\t\t\t\tif(event_end.hour() === 0 && event_end.minute() === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent_end.add(1, 'day');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar availability_type = availability_types[\n\t\t\t\t\t\t\ttime_period.availability_type_uuid];\n\n\t\t\t\t\tif(service.exists(availability_type))\n\t\t\t\t\t{\n\t\t\t\t\t\tservice.create_background_events(\n\t\t\t\t\t\t\t\tevent_array, event_start, event_end,\n\t\t\t\t\t\t\t\tavailability_type, relation.schedule_uuid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn service;\n\t\t}\n\t]\n);\n","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nangular.module('cpCalendar').controller(\n\t'cpCalendar.EventController',\n\n\t[\n\t\t'$scope',\n\t\t'$q',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModalInstance',\n\n\t\t'errorsService',\n\t\t'cpCalendar.Util',\n\n\n\t\t'access_control',\n\t\t'key_binding',\n\t\t'focus',\n\t\t'type', 'parent_scope', 'label', 'edit_mode', 'data',\n\n\tfunction (\n\t\t$scope, $q, $timeout, $state, $uibModalInstance,\n\n\t\tmessages_factory, util,\n\n\t\taccess_control,\n\t\tkey_binding, focus,\n\t\ttype, parent_scope, label, edit_mode, data\n\t)\n{\n\t$scope.parent_scope = parent_scope;\n\n\n\t//=========================================================================\n\t// Access Control\n\t//=========================================================================/\n\n\n\t//=========================================================================\n\t// Local scope variables\n\t//=========================================================================/\n\n\t$scope.access_control= access_control;\n\n\t$scope.label = label;\n\t$scope.edit_mode = edit_mode;\n\n\t$scope.key_binding = key_binding;\n\t$scope.event_uuid = data.uuid;\n\t$scope.num_invoices = data.num_invoices;\n\t$scope.tag_names = data.tag_names;\n\n\t$scope.schedule = data.schedule;\n\n\t$scope.availability_types = data.availability_types;\n\t$scope.schedule_templates = data.schedule_templates;\n\n\t$scope.event_data = {\n\t\tstart_time: null,\n\t\tend_time: null,\n\t\treason: null,\n\t\tdescription: null\n\t};\n\n\t$scope.time_interval = data.time_interval;\n\t$scope.start_date = null;\n\t$scope.start_time = null;\n\t$scope.end_date = null;\n\t$scope.end_time = null;\n\n\t$scope.last_event_length = null;\n\n\t$scope.patient = parent_scope.calendar_api_adapter.patient_model;\n\t$scope.autocomplete_values = {};\n\n\t$scope.active_template_events = [];\n\n\t$scope.event_statuses = $scope.parent_scope.event_statuses;\n\t$scope.event_status_options = [];\n\t$scope.selected_event_status = null;\n\t$scope.default_event_status = null;\n\n\t$scope.selected_site_name = null;\n\n\t$scope.timepicker_format = \"h:mm A\";\n\n\t$scope.field_value_mapping = {\n\t\tstart_date: 'Start Date',\n\t\tstart_time: 'Start Time',\n\t\tend_date: 'End Date',\n\t\tend_time: 'End Time'\n\t};\n\t$scope.display_messages = messages_factory.factory();\n\n\t$scope.initialized = false;\n\t$scope.working = false;\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\tif(!access_control.has_permission('scheduling_create'))\n\t\t{\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\t$scope.cancel();\n\t\t\t});\n\t\t}\n\n\t\tvar moment_start = moment(data.start_time);\n\t\tvar moment_end = moment(data.end_time);\n\n\t\t$scope.start_time = util.get_time_string(moment_start, $scope.timepicker_format);\n\t\t$scope.end_time = util.get_time_string(moment_end, $scope.timepicker_format);\n\t\t$scope.start_date = util.get_date_string(moment_start);\n\t\t$scope.end_date = util.get_date_string(moment_end);\n\n\t\t$scope.last_event_length = moment_end.diff(moment_start, 'minutes');\n\n\t\t// maintain a list of the 'active' templates based on start time\n\t\t$scope.set_active_template_events();\n\n\t\tfor(var key in $scope.event_statuses)\n\t\t{\n\t\t\tif($scope.event_statuses.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t$scope.event_status_options.push($scope.event_statuses[key]);\n\t\t\t}\n\t\t}\n\t\t$scope.default_event_status = data.default_event_status;\n\t\t$scope.set_selected_event_status(data.event_status_uuid);\n\n\t\tif(edit_mode)\n\t\t{\n\t\t\t$scope.event_data.reason = data.reason;\n\t\t\t$scope.event_data.description = data.description;\n\n\t\t\t// either load the patient data and init the autocomplete\n\t\t\t// or ensure the patient model is clear\n\t\t\t$scope.patient.uuid = data.demographics_patient_uuid;\n\t\t\t$scope.init_patient_autocomplete().then(function() {\n\t\t\t\t$scope.initialized = true;\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create mode: adjust the end date (if needed)\n\t\t\t// and clear the patient model\n\t\t\t$scope.adjust_end_datetime();\n\t\t\t$scope.patient.clear();\n\n\t\t\t// autofocus the patient field\n\t\t\tfocus.element(\"#input-patient\");\n\n\t\t\t$scope.initialized = true;\n\t\t}\n\t};\n\n\t$scope.init_patient_autocomplete = function init_patient_autocomplete()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tif(util.exists($scope.patient.uuid))\n\t\t{\n\t\t\tparent_scope.autocomplete.init_autocomplete_values(\n\t\t\t\t{ patient: $scope.patient.uuid },\n\t\t\t\t$scope.autocomplete_values).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.autocomplete_values = results.data;\n\t\t\t\t\t$scope.patient.fill_data($scope.autocomplete_values.patient.data);\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t},\n\t\t\t\tfunction(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t\t$scope.patient.clear();\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.patient.clear();\n\t\t\tdeferred.resolve();\n\t\t}\n\n\t\treturn deferred.promise;\n\t};\n\n\t//=========================================================================\n\t// Private methods\n\t//=========================================================================/\n\n\t$scope.get_inclusive_days = function get_inclusive_days(\n\t\tmoment_start, moment_end)\n\t{\n  \t\tvar days = [];\n  \t\tvar moment_day = moment_start.clone().hour(0).minute(0);\n  \t\twhile(moment_day.isBefore(moment_end))\n  \t\t{\n  \t\t\tdays.push(moment_day.clone());\n  \t\t\tmoment_day.add(1, 'day');\n  \t\t}\n  \t\treturn days;\n\t};\n\n\t$scope.set_selected_event_status = function set_selected_event_status(uuid)\n\t{\n\t\tvar event_status_uuid = $scope.default_event_status;\n\t\tif(util.exists(uuid))\n\t\t{\n\t\t\tevent_status_uuid = uuid;\n\t\t}\n\n\t\tif(!util.exists(event_status_uuid) ||\n\t\t\t!util.exists($scope.event_statuses[event_status_uuid]))\n\t\t{\n\t\t\t// if not set or found just pick the first one\n\t\t\tevent_status_uuid = $scope.event_status_options[0].uuid;\n\t\t}\n\n\t\t$scope.selected_event_status = $scope.event_statuses[event_status_uuid];\n\t};\n\n\t$scope.set_active_template_events = function set_active_template_events()\n\t{\n\t\tvar active_events = [];\n\n\t\t// find the active template events based on the current event date/times\n\t\t// if the date/times are currently valid, otherwise leave as-is\n\n\t\tvar moment_start = util.get_date_and_time_moment(\n\t\t\t$scope.start_date, $scope.formatted_time($scope.start_time));\n\t\tvar moment_end = util.get_date_and_time_moment(\n\t\t\t$scope.end_date, $scope.formatted_time($scope.end_time));\n\n\t\tif(moment_start.isValid() && moment_end.isValid())\n\t\t{\n\t\t\t// use the parent functions to get a list of non-overlapping\n\t\t\t// background events for the day(s) in the range\n\n\t\t\tvar date_start = util.get_date_moment($scope.start_date);\n\t\t\tvar date_end = util.get_date_moment(\n\t\t\t\t$scope.end_date).add(1, 'day');\n\n\t\t\tif(util.exists($scope.schedule.availabilities))\n\t\t\t{\n\t\t\t\tfor(var j = 0; j < $scope.schedule.availabilities.length; j++)\n\t\t\t\t{\n\t\t\t\t\tutil.create_availability_events(\n\t\t\t\t\t\t\tactive_events, $scope.schedule.availabilities[j], $scope.availability_types,\n\t\t\t\t\t\t\tdate_start, date_end);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(util.exists($scope.schedule.relations))\n\t\t\t{\n\t\t\t\tfor(var k = 0; k < $scope.schedule.relations.length; k++)\n\t\t\t\t{\n\t\t\t\t\tutil.create_relation_events(\n\t\t\t\t\t\tactive_events, $scope.schedule_templates, $scope.availability_types,\n\t\t\t\t\t\t$scope.schedule.relations[k], date_start, date_end);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// filter out the ones that aren't in the appointment time range\n\t\tactive_events = $.grep(active_events, function(ev) {\n\t\t\treturn ev.start.isBefore(moment_end) &&\n\t\t\t\tev.end.isAfter(moment_start);\n\t\t});\n\n\t\t// sort them: unavailable first, then by date\n\t\tactive_events.sort(function(a, b)\n\t\t{\n\t\t\tif(a.availability_type.system_code ===\n\t\t\t\tb.availability_type.system_code)\n\t\t\t{\n\t\t\t\treturn a.start.unix() - b.start.unix();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn a.availability_type.system_code -\n\t\t\t\t\tb.availability_type.system_code;\n\t\t\t}\n\n\t\t});\n\n\t\t\t$scope.active_template_events = active_events;\n\t\t}\n\t};\n\n\t$scope.adjust_end_datetime = function adjust_end_datetime(length_minutes)\n\t{\n\t\t// adjusts the end time to the specified length or\n\t\t// adjusts to keep the event length the same as it last was\n\n\t\tvar moment_start = util.get_date_and_time_moment(\n\t\t\t$scope.start_date, $scope.formatted_time($scope.start_time));\n\t\tif(moment_start.isValid())\n\t\t{\n\t\t\tvar new_event_length = util.exists(length_minutes) ?\n\t\t\t\tlength_minutes : $scope.last_event_length;\n\n\t\t\tvar moment_end = moment_start.add(new_event_length, 'minutes');\n\n\t\t\t$scope.end_date = util.get_date_string(moment_end);\n\t\t\t$scope.end_time = util.get_time_string(moment_end, $scope.timepicker_format);\n\t\t}\n\t};\n\n\t$scope.update_last_event_length = function update_last_event_length()\n\t{\n\t\t// saves the current event length, if the date/times are valid\n\n\t\tvar moment_start = util.get_date_and_time_moment(\n\t\t\t$scope.start_date, $scope.formatted_time($scope.start_time));\n\t\tvar moment_end = util.get_date_and_time_moment(\n\t\t\t$scope.end_date, $scope.formatted_time($scope.end_time));\n\n\t\tif(moment_start.isValid() && moment_end.isValid())\n\t\t{\n\t\t\tvar event_length = moment_end.diff(moment_start, 'minutes');\n\t\t\tif(event_length > 0)\n\t\t\t{\n\t\t\t$scope.last_event_length = event_length;\n\t\t\t}\n\t\t}\n\t};\n\n\t$scope.validate_form = function validate_form()\n\t{\n\t\t$scope.display_messages.clear();\n\n\t\tutil.validate_date_string($scope.start_date,\n\t\t\t$scope.display_messages, 'start_date', true);\n\n\t\tutil.validate_time_string($scope.formatted_time($scope.start_time),\n\t\t\t$scope.display_messages, 'start_time', true);\n\n\t\tutil.validate_date_string($scope.end_date,\n\t\t\t$scope.display_messages, 'end_date', true);\n\n\t\tutil.validate_time_string($scope.formatted_time($scope.end_time),\n\t\t\t$scope.display_messages, 'end_time', true);\n\n\t\t// if all the date/time fields look good, validate range\n\t\tif(!$scope.display_messages.has_errors())\n\t\t{\n\t\t\tvar start_datetime = util.get_date_and_time_moment(\n\t\t\t\t$scope.start_date, $scope.formatted_time($scope.start_time));\n\t\t\tvar end_datetime = util.get_date_and_time_moment(\n\t\t\t\t$scope.end_date, $scope.formatted_time($scope.end_time));\n\n\t\t\tif(end_datetime.isSame(start_datetime) ||\n\t\t\t\tend_datetime.isBefore(start_datetime))\n\t\t\t{\n\t\t\t\t$scope.display_messages.add_standard_error(\"The appointment must end after it starts\");\n\t\t\t}\n\t\t}\n\n\t\treturn !$scope.display_messages.has_errors();\n\t};\n\n\t$scope.save_event = function save_event()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar start_datetime = util.get_date_and_time_moment(\n\t\t\t\t$scope.start_date, $scope.formatted_time($scope.start_time));\n\n\t\tvar end_datetime = util.get_date_and_time_moment(\n\t\t\t\t$scope.end_date, $scope.formatted_time($scope.end_time));\n\n\t\tparent_scope.calendar_api_adapter.save_event(\n\t\t\t\tedit_mode,\n\t\t\t\t$scope.event_uuid,\n\t\t\t\tstart_datetime,\n\t\t\t\tend_datetime,\n\t\t\t\t$scope.event_data,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.selected_event_status.uuid,\n\t\t\t\t$scope.patient.uuid,\n\t\t\t\t$scope.selected_site_name\n\t\t).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tif(parent_scope.calendar_api_adapter.process_save_results(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (results)\n\t\t\t\t{\n\t\t\t\t\tparent_scope.calendar_api_adapter.process_save_results(results);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.delete_event = function delete_event()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tparent_scope.calendar_api_adapter.delete_event($scope.event_uuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.formatted_time = function formatted_time(time_str)\n\t{\n\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\treturn time_str.replace(/ /g,'');\n\t};\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t// when the start date is changed,\n\t// update the active template events\n\t$scope.$watch('start_date', function(new_start_date, old_start_date)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(new_start_date !== old_start_date)\n\t\t{\n\t\t\t$scope.set_active_template_events();\n\t\t\t$scope.adjust_end_datetime();\n\t\t}\n\t});\n\n\t// when the start time is changed,\n\t// update the active template events and adjust the end time\n\t$scope.$watch('start_time', function(new_start_time, old_start_time)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(new_start_time !== old_start_time)\n\t\t{\n\t\t\t$scope.set_active_template_events();\n\t\t\t$scope.adjust_end_datetime();\n\t\t}\n\t});\n\n\t// when the end date is changed, track the event length\n\t$scope.$watch('end_date', function(new_end_date, old_end_date)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(new_end_date !== old_end_date)\n\t\t{\n\t\t\t$scope.set_active_template_events();\n\t\t\t$scope.update_last_event_length();\n\t\t}\n\t});\n\n\t// when the end time is changed, track the event length\n\t$scope.$watch('end_time', function(new_end_time, old_end_time)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(new_end_time !== old_end_time)\n\t\t{\n\t\t\t$scope.set_active_template_events();\n\t\t\t$scope.update_last_event_length();\n\t\t}\n\t});\n\n\t//=========================================================================\n\t// Public methods\n\t//=========================================================================/\n\n\t$scope.loaded_new_photo = function loaded_new_photo(file, event)\n\t{\n\t\tif(file == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.preview_patient_image = file;\n\t\t$scope.new_photo = true;\n\t\t$scope.patient.has_photo = true;\n\t\t$scope.patient.upload_photo(file);\n\t};\n\n\t$scope.is_working = function()\n\t{\n\t\treturn $scope.working;\n\t};\n\n\t$scope.is_initialized = function()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.is_patient_selected = function()\n\t{\n\t\treturn util.exists($scope.patient.uuid);\n\t};\n\n\t$scope.clear_patient = function()\n\t{\n\t\t$scope.autocomplete_values.patient = null;\n\t\t$scope.patient.clear();\n\t};\n\n\t$scope.on_select_patient = function on_select_patient($item, $model, $label, $event)\n\t{\n\t\t// $item is a Patient pojo\n\t\t$scope.patient.uuid = $item.data[$item.value_field];\n\t\t$scope.patient.fill_data($item.data);\n\t};\n\n\t$scope.set_event_length = function set_event_length(minutes)\n\t{\n\t\t$scope.adjust_end_datetime(minutes);\n\t};\n\n\t$scope.save = function save()\n\t{\n\t\tif(!$scope.validate_form())\n\t\t{\n\t\t\t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.save_event().then(function()\n\t\t{\n\t\t\t$scope.parent_scope.refetch_events();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.display_messages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.delete = function()\n\t{\n\t\t$scope.working = true;\n\t\t$scope.delete_event().then(function()\n\t\t{\n\t\t\t$scope.parent_scope.refetch_events();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.display_messages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.cancel = function()\n\t{\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\n\t$scope.save_and_bill = function()\n\t{\n\t\tif(!$scope.validate_form())\n\t\t{\n\t  \t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.save_event().then(function()\n\t\t{\n\t\t\t$scope.parent_scope.refetch_events();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t\t$scope.parent_scope.open_create_invoice(\n\t\t\t\t$scope.event_uuid,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.patient.uuid);\n\t\t}, function()\n\t\t{\n\t\t\t$scope.display_messages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.view_invoices = function()\n\t{\n\t\t$scope.parent_scope.open_view_invoices($scope.event_uuid);\n\t};\n\n\t$scope.create_patient = function create_patient()\n\t{\n\t\tvar edit_mode_callback = function() { return false; };\n\t\tvar on_save_callback = function() { return $scope.on_patient_modal_save; };\n\t\tvar load_error_link_patient_fn = function() { return $scope.on_patient_modal_save; };\n\n\t\t$scope.create_patient_dialog = parent_scope.calendar_api_adapter.open_patient_dialog(\n\t\t\t\tedit_mode_callback, on_save_callback, load_error_link_patient_fn);\n\t};\n\n\t$scope.modify_patient = function modify_patient()\n\t{\n\t\tif(!$scope.patient.uuid)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar edit_mode_callback = function() { return true; };\n\t\tvar on_save_callback = function() { return $scope.on_patient_modal_save; };\n\t\tvar load_error_link_patient_fn = function() { return $scope.on_patient_modal_save; };\n\n\t\t$scope.modify_patient_dialog = parent_scope.calendar_api_adapter.open_patient_dialog(\n\t\t\t\tedit_mode_callback, on_save_callback, load_error_link_patient_fn);\n\t};\n\n\t// for callback on create/edit patient modal\n\t$scope.on_patient_modal_save = function on_patient_modal_save(uuid)\n\t{\n\t\t// load the newly created/updated patient\n\t\t$scope.patient.uuid = uuid;\n\t\t$scope.init_patient_autocomplete();\n\t};\n\n\t//=========================================================================\n\t//  Key Bindings\n\t//=========================================================================\n\n\t$scope.key_bind_settings =\n\t{\n\t\t\"ctrl+enter\": {\n\t\t\ttitle: 'Ctrl+Enter',\n\t\t\ttooltip: 'Save',\n\t\t\tdescription: 'Save appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.is_working())\n\t\t\t\t{\n\t\t\t\t\t$scope.save();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t},\n\t\t\"ctrl+shift+enter\": {\n\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\ttooltip: 'Save And Bill',\n\t\t\tdescription: 'Save and bill for appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.is_working())\n\t\t\t\t{\n\t\t\t\t\t$scope.save_and_bill();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t}\n\t};\n\t$scope.key_binding.bind_key_global(\"ctrl+enter\", $scope.key_bind_settings[\"ctrl+enter\"]);\n\t$scope.key_binding.bind_key_global(\"ctrl+shift+enter\", $scope.key_bind_settings[\"ctrl+shift+enter\"]);\n}]);\n","angular.module('cpCalendar')\n\n\n//=========================================================================\n// Main Calendar Controller\n//=========================================================================/\n\n.controller('cpCalendar.Controller', [\n\t'$scope',\n\t'$q',\n\t'$stateParams',\n\t'$uibModal',\n\t'$window',\n\t'cpCalendar.Util',\n\t'uiCalendarConfig',\n\nfunction(\n\t\t$scope,\n\t\t$q,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\t$window,\n\t\tutil,\n\t\tuiCalendarConfig)\n{\n\n\t//$scope.global_state = global_state;\n\n\t$scope.availability_type_model = null;\n\n\t$scope.calendar_name = 'cpCalendar';\n\t$scope.event_sources = [];\n\n\t$scope.min_height = 650;\n\n\t$scope.default_calendar_view = 'agendaWeek';\n\t$scope.default_time_interval = '00:15:00';\n\t$scope.default_event_color = \"#333\";\n\t$scope.default_auto_refresh_minutes = 3;\n\n\t$scope.time_interval_options =\n\t\t\t['00:05:00','00:10:00','00:15:00','00:30:00'];\n\t$scope.selected_time_interval = $scope.default_time_interval;\n\n\t$scope.default_date = null;\n\n\tif($stateParams.default_date)\n\t{\n\t\tvar default_moment =\n\t\t\t\tutil.get_date_moment($stateParams.default_date);\n\t\tif( default_moment.isValid() )\n\t\t{\n\t\t\t$scope.default_date =\n\t\t\t\t\tutil.get_date_moment($stateParams.default_date);\n\t\t}\n\t}\n\n\t$scope.selected_schedule = null;\n\t$scope.selected_site_name = null;\n\t$scope.schedule_options = [];\n\t$scope.resource_options = [];\n\t$scope.resource_option_hash = {};\n\t$scope.selected_resources = [];\n\n\t$scope.event_statuses = {};\n\t$scope.sites = {};\n\t$scope.site_options = [];\n\t$scope.rotate_statuses = [];\n\t$scope.availability_types = {};\n\t$scope.schedule_templates = {};\n\n\t$scope.schedules = [];\n\t$scope.events = [];\n\n\t$scope.calendar_loading = false;\n\t$scope.initialized = false;\n\n\t$scope.opening_dialog = false;\n\t$scope.dialog = null;\n\n\n\t$scope.calendar = function calendar()\n\t{\n\t\treturn uiCalendarConfig.calendars[$scope.calendar_name];\n\t};\n\n\t$scope.is_initialized = function()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.show_schedule_select = function()\n\t{\n\t\treturn $scope.view_name() !== 'resourceDay';\n\t};\n\n\t$scope.show_time_intervals = function()\n\t{\n\t\treturn $scope.view_name() !== 'month';\n\t};\n\n\n\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\t$scope.default_date = $scope.global_state.selected_date;\n\t\t$scope.ui_config.calendar.schedulerlicensekey = \"0752822575-fcs-1459294728\";\n\t\t\t\t//$scope.global_state.global_settings.interface_preferences.scheduler_license_key,\n\t\t$scope.ui_config.calendar.defaultView = $scope.calendar_view_name();\n\n\t\t$scope.load_schedule_templates().then(\n\t\t\t$scope.load_availability_types).then(\n\t\t\t$scope.load_event_statuses).then(\n\t\t\t$scope.load_schedule_options).then(\n\t\t\t$scope.load_site_options).then(\n\t\t\t$scope.load_default_selections).then(\n\t\t\t$scope.load_selected_schedules).then(\n\t\t\t$scope.set_calendar_resources).then(\n\t\t\t$scope.set_event_sources).then(\n\t\t\t$scope.init_events_auto_refresh).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t});\n\t};\n\n\t$scope.init_events_auto_refresh = function init_events_auto_refresh()\n\t{\n\t\t// if there is already a refresh set up, stop it\n\t\tvar refresh = $scope.get_global_state('schedule_auto_refresh');\n\t\tif(refresh !== null)\n\t\t{\n\t\t\tclearInterval(refresh);\n\t\t}\n\n\t\t// get the refresh interval from preferences, or use default\n\t\tvar minutes = $scope.get_global_preference_setting(\n\t\t\t\t'schedule_auto_refresh_minutes');\n\t\tif(!util.exists(minutes) || !util.is_integer_string(minutes))\n\t\t{\n\t\t\tminutes = $scope.default_auto_refresh_minutes;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminutes = parseInt(minutes);\n\t\t}\n\n\t\tif(minutes > 0)\n\t\t{\n\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t$scope.save_global_state('schedule_auto_refresh',\n\t\t\t\t\tsetInterval($scope.refetch_events, minutes * 60 * 1000));\n\t\t}\n\t};\n\n\n\t//=========================================================================\n\t// Global State Manipulation\n\t//=========================================================================/\n\n\t$scope.get_global_preference_setting = function get_global_preference_setting(key)\n\t{\n\t\tif(util.exists($scope.global_state.preferences) &&\n\t\t\t\tutil.exists($scope.global_state.preferences.settings))\n\t\t{\n\t\t\treturn $scope.global_state.preferences.settings[key];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t$scope.get_global_state = function get_global_setting(key)\n\t{\n\t\tvar setting = $scope.global_state[key];\n\t\tif(!util.exists(setting))\n\t\t{\n\t\t\tsetting = null;\n\t\t}\n\t\treturn setting;\n\t};\n\n\t$scope.save_global_state = function save_global_setting(key, value)\n\t{\n\t\t$scope.global_state[key] = value;\n\t};\n\n\n\t//=========================================================================\n\t// Event Handlers\n\t//=========================================================================/\n\n\t$scope.on_schedule_changed = function on_schedule_changed(selected_schedule, selected_site_name)\n\t{\n\t\tif(!util.exists(selected_schedule))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar schedule_uuid = selected_schedule.uuid;\n\n\t\t$scope.save_global_state('schedule_default', schedule_uuid);\n\t\t$scope.selected_schedule = $scope.calendar_api_adapter.get_selected_schedule(\n\t\t\t\t$scope.schedule_options);\n\n\t\tif(util.exists(selected_site_name))\n\t\t{\n\t\t\t$scope.selected_site_name = selected_site_name;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.selected_site_name = null;\n\t\t}\n\n\t\t// reload the schedule and then events data, triggering a rerender\n\t\t$scope.load_selected_schedules().then($scope.refetch_events);\n\t};\n\n\t$scope.on_time_interval_changed = function()\n\t{\n\t\t$scope.save_global_state(\n\t\t\t\t'schedule_time_interval', $scope.selected_time_interval);\n\n\t\t// updating the config will automatically trigger an events refresh\n\t\t$scope.ui_config.calendar.slotDuration = $scope.selected_time_interval;\n\t\t$scope.ui_config.calendar.slotLabelInterval = $scope.selected_time_interval;\n\t};\n\n\t$scope.on_resources_changed = function(selected_resource_uuids)\n\t{\n\t\t$scope.save_global_state('schedule_resources', selected_resource_uuids);\n\n\t\tvar updated_resources = [];\n\t\tfor(var i = 0; i < $scope.resource_options.length; i++)\n\t\t{\n\t\t\tvar schedule = $scope.resource_options[i];\n\t\t\tif(selected_resource_uuids.indexOf(schedule.uuid) > -1)\n\t\t\t{\n\t\t\t\tschedule.name = schedule.display_name;\n\t\t\t\tupdated_resources.push(schedule);\n\t\t\t}\n\t\t}\n\t\t$scope.selected_resources = updated_resources;\n\n\t\t// reload the schedules and then update the calendar config,\n\t\t// triggering a refetch events and rerender\n\t\t$scope.load_selected_schedules().then($scope.set_calendar_resources);\n\t};\n\n\t$scope.on_view_render = function on_view_render()\n\t{\n\t\tif($scope.is_initialized() && $scope.calendar())\n\t\t{\n\t\t\t$scope.global_state.selected_date = moment(util.get_date_string(\n\t\t\t\t\tmoment($scope.calendar().fullCalendar('getDate'))));\n\t\t}\n\n\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t$(\"#ca-calendar\").css('min-width',$('.fc-resource-cell').length*125);\n\t};\n\n\t$scope.after_render = function after_render()\n\t{\n\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t$('.fc-agendaDay-button').click(function(){$(\"#schedule_container\").css('min-width',$('.fc-resource-cell').length*125);});\n\t};\n\n\t$scope.on_event_clicked = function on_event_clicked(calEvent, jsEvent, view)\n\t{\n\t\tif($(jsEvent.target).is(\".event-status.rotate\"))\n\t\t{\n\t\t\t$scope.rotate_event_status(calEvent);\n\t\t}\n\t\telse if($(jsEvent.target).is(\".event-invoice.edit\"))\n\t\t{\n\t\t\t$scope.open_view_invoices(calEvent.data.uuid);\n\t\t}\n\t\telse if($(jsEvent.target).is(\".event-invoice\"))\n\t\t{\n\t\t\t$scope.open_create_invoice(\n\t\t\t\t\tcalEvent.data.uuid,\n\t\t\t\t\tcalEvent.data.schedule_uuid,\n\t\t\t\t\tcalEvent.data.demographics_patient_uuid);\n\t\t}\n\t\telse if($(jsEvent.target).is(\".event-demographic\") ||\n\t\t\t\t$(jsEvent.target).parent().is(\".event-demographic\"))\n\t\t{\n\t\t\t$scope.open_patient_demographic(calEvent);\n\t\t}\n\t\telse if($(jsEvent.target).is(\".event-note\") ||\n\t\t\t\t$(jsEvent.target).parent().is(\".event-note\"))\n\t\t{\n\t\t\t$scope.open_create_chart_note(calEvent);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.open_edit_event_dialog(calEvent);\n\t\t}\n\t};\n\n\t$scope.on_event_drop = function on_event_drop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t{\n\t\tif(!$scope.access_control.has_permission('scheduling_create') )\n\t\t{\n\t\t\trevertFunc();\n\t\t\treturn;\n\t\t}\n\n\t\t// event was dragged and dropped on the calendar:\n\t\t// load then update the start and end time based on the delta\n\t\t$scope.set_calendar_loading(true);\n\n\t\t$scope.calendar_api_adapter.drop_event(calEvent.data.uuid, calEvent.resourceId, delta).then(\n\t\t\tfunction success(event_data)\n\t\t\t{\n\t\t\t\tcalEvent.data.start_time = event_data.start_time;\n\t\t\t\tcalEvent.data.end_time = event_data.end_time;\n\t\t\t\tcalEvent.data.schedule_uuid = event_data.schedule_uuid;\n\n\t\t\t\t$scope.update_event(calEvent);\n\n\t\t\t\t$scope.set_calendar_loading(false);\n\n\t\t\t}, function error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t// revert on fail\n\t\t\t\trevertFunc();\n\t\t\t\t$scope.set_calendar_loading(false);\n\t\t\t});\n\t};\n\n\t$scope.on_event_resize = function on_event_resize(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t{\n\t\tif(!$scope.access_control.has_permission('scheduling_create') )\n\t\t{\n\t\t\trevertFunc();\n\t\t\treturn;\n\t\t}\n\n\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t// load then update the end time based on the delta\n\t\t$scope.set_calendar_loading(true);\n\n\t\t$scope.calendar_api_adapter.resize_event(calEvent.data.uuid, delta).then(\n\t\t\t\tfunction success(event_data)\n\t\t\t\t{\n\t\t\t\t\tcalEvent.data.end_time = event_data.end_time;\n\n\t\t\t\t\t$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.set_calendar_loading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.set_calendar_loading(false);\n\t\t\t\t});\n\t};\n\n\t$scope.get_icon_path = function get_icon_path(icon, status_modifier)\n\t{\n\t\tif(!util.exists(icon))\n\t\t{\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar modifier_string = \"\";\n\n\t\tif(util.exists(status_modifier))\n\t\t{\n\t\t\tmodifier_string = status_modifier;\n\t\t}\n\n\t\treturn \"../images/\" + modifier_string + icon;\n\t};\n\n\t$scope.on_event_render = function(event, element, view)\n\t{\n\t\tif(event.rendering !== 'background')\n\t\t{\n\t\t\tvar event_site_html = '';\n\t\t\tvar event_site = $scope.sites[event.data.site];\n\n\t\t\tif(util.exists(event_site))\n\t\t\t{\n\t\t\t\tevent_site_html += \"<span style='background-color: \" + event_site.color + \"'>&nbsp;</span>\"\n\t\t\t}\n\n\n\t\t\tvar event_status_html = '';\n\t\t\tvar event_status =\n\t\t\t\t\t$scope.event_statuses[event.data.event_status_uuid];\n\n\t\t\tif(util.exists(event_status) && util.exists(event_status.icon) &&\n\t\t\t\tutil.exists(event) && util.exists(event.data))\n\t\t\t{\n\t\t\t\tevent_status_html += \"<img src='\" + $scope.get_icon_path(event_status.icon, event.data.event_status_modifier) + \"' />\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tevent_status_html = '<span class=\"event-status';\n\t\t\t\tif(util.exists(event_status))\n\t\t\t\t{\n\t\t\t\t\tvar event_status_rotate = util.exists(event_status.sort_order);\n\t\t\t\t\tif(event_status_rotate)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent_status_html += ' rotate ';\n\t\t\t\t\t}\n\t\t\t\t\tevent_status_html += '\"' + ' title=\"' + util.escape_html(event_status.name) + '\">' +\n\t\t\t\t\t\t\tutil.escape_html(event_status.display_letter) + '</span>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tevent_status_html += '\" title=\"Unknown\">?</span>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar event_invoice_html = '<span class=\"event-invoice';\n\t\t\tif(event.data.num_invoices > 0)\n\t\t\t{\n\t\t\t\tevent_invoice_html += ' edit\" title=\"View Invoice' +\n\t\t\t\t\t\t(event.data.num_invoices > 1 ? \"s\" : \"\") + '\">B</span>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tevent_invoice_html += '\" title=\"Create Invoice\">$</span>';\n\t\t\t}\n\n\t\t\tvar event_details = \"\";\n\t\t\tif(util.exists(event.data.demographics_patient_name))\n\t\t\t{\n\t\t\t\tevent_details = util.escape_html(event.data.demographics_patient_name);\n\t\t\t\tif(util.exists(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\tevent_details += \" (\" + util.escape_html(event.data.reason) + \")\"\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(util.exists(event.data.reason))\n\t\t\t{\n\t\t\t\tevent_details = util.escape_html(event.data.reason);\n\t\t\t}\n\n\t\t\tvar event_details_html = \"<span class='event-details' title='\" + event_details + \"'>\" +\n\t\t\t\t\tevent_details + \"</span>\";\n\n\t\t\tvar event_demographic_html = \"\";\n\t\t\tif($scope.access_control.has_one_of_permissions(['patient_view', 'patient_manage']) &&\n\t\t\t\t\tutil.exists(event.data.demographics_patient_uuid))\n\t\t\t{\n\t\t\t\tevent_demographic_html =\n\t\t\t\t\t\t'<span class=\"event-demographic\" title=\"View Patient\">' +\n\t\t\t\t\t\t'<i class=\"fa fa-user\"></i></span>';\n\t\t\t}\n\n\t\t\tvar event_note_html = \"\";\n\t\t\tif($scope.access_control.has_one_of_permissions(['chart_note_view', 'chart_note_manage']) &&\n\t\t\t\t\tutil.exists(event.data.demographics_patient_uuid))\n\t\t\t{\n\t\t\t\tevent_note_html =\n\t\t\t\t\t\t'<span class=\"event-note\" title=\"Add Patient Note\">' +\n\t\t\t\t\t\t'<i class=\"fa fa-file-text-o\"></i></span>';\n\t\t\t}\n\n\t\t\tvar event_tags_html = '';\n\t\t\tvar tag_class = element.hasClass('text-light') ? 'icon-white' : '';\n\n\t\t\tif(util.exists(event.data.tag_names))\n\t\t\t{\n\t\t\t\tevent_tags_html = '<span class=\"event-tags\" title=\"' +\n\t\t\t\t\t\tevent.data.tag_names.join(\", \") +\n\t\t\t\t\t\t'\"><i class=\"icon ' + tag_class + ' icon-tags\"/></span>';\n\t\t\t}\n\n\t\t\t$(element).find('.fc-content').html(event_site_html + event_status_html + event_invoice_html +\n\t\t\t\t\tevent_demographic_html + event_note_html + event_tags_html + event_details_html);\n\t\t}\n\t};\n\n\n\t//=========================================================================\n\t// Control Methods\n\t//=========================================================================/\n\n\t$scope.change_view = function(view)\n\t{\n\t\t// if switching to or from resourceDay view, need to update schedules\n\t\tvar reload_schedules = false;\n\t\tif(view === 'resourceDay' ||\n\t\t\t\t$scope.get_global_state('schedule_view_name') === 'resourceDay')\n\t\t{\n\t\t\treload_schedules = true;\n\t\t}\n\n\t\t// save the new view to global state so it gets picked up in rendering\n\t\t$scope.save_global_state('schedule_view_name', view);\n\n\t\tif(reload_schedules)\n\t\t{\n\t\t\t$scope.load_selected_schedules().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.set_calendar_resources();\n\t\t\t\t\t\t$scope.update_calendar_view();\n\t\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.update_calendar_view();\n\t\t}\n\t};\n\n\t$scope.select_resources = function()\n\t{\n\t\t// if already opening a dialog or have one open, ignore and return\n\t\tif($scope.opening_dialog || $scope.dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.opening_dialog = true;\n\n\t\tvar preselections = [];\n\t\tfor(var i = 0; i < $scope.selected_resources.length; i++)\n\t\t{\n\t\t\tpreselections.push($scope.selected_resources[i].uuid);\n\t\t}\n\n\t\t$scope.dialog = $uibModal.open({\n\t\t\tanimation: false,\n\t\t\tbackdrop: 'static',\n\t\t\tcontroller: 'Schedule.SelectResourcesController',\n\t\t\ttemplateUrl: 'code/schedule/select_resources.html',\n\t\t\tresolve: {\n\t\t\t\tresource_options: function() { return $scope.resource_options; },\n\t\t\t\tselected_resources: function() { return preselections; },\n\t\t\t\ton_update_callback: function() { return $scope.on_resources_changed; }\n\t\t\t}\n\t\t});\n\n\t\t// when the dialog closes clear the variable\n\t\t$scope.dialog.closed.then(function() {\n\t\t\t$scope.dialog = null;\n\t\t});\n\n\t\t$scope.opening_dialog = false;\n\t};\n\n\t$scope.show_legend = function()\n\t{\n\t\t// if already opening a dialog or have one open, ignore and return\n\t\tif($scope.opening_dialog || $scope.dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.opening_dialog = true;\n\n\t\tvar data = {\n\t\t\tevent_statuses: $scope.event_statuses,\n\t\t\tavailability_types: $scope.availability_types\n\t\t};\n\n\t\t$scope.dialog = $uibModal.open({\n\t\t\tanimation: false,\n\t\t\tbackdrop: 'static',\n\t\t\tcontroller: 'Schedule.LegendController',\n\t\t\ttemplateUrl: 'code/schedule/legend.html',\n\t\t\tresolve: {\n\t\t\t\tdata: function() { return data }\n\t\t\t}\n\t\t});\n\n\t\t// when the dialog closes clear the variable\n\t\t$scope.dialog.closed.then(function() {\n\t\t\t$scope.dialog = null;\n\t\t});\n\n\t\t$scope.opening_dialog = false;\n\t};\n\n\t$scope.refetch_events = function()\n\t{\n\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t};\n\n\t$scope.update_event = function update_event(cal_event)\n\t{\n\t\t$scope.calendar().fullCalendar('updateEvent', cal_event);\n\t};\n\n\t$scope.update_calendar_view = function update_calendar_view()\n\t{\n\t\t$scope.ui_config.calendar.defaultView = $scope.calendar_view_name();\n\t};\n\n\t$scope.open_create_event_dialog = function open_create_event_dialog(\n\t\t\tstart, end, jsEvent, view, resource)\n\t{\n\t\tif(!$scope.access_control.has_permission('scheduling_create') )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// if already opening a dialog or have one open, ignore and return\n\t\tif($scope.opening_dialog || $scope.dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.opening_dialog = true;\n\n\t\tvar schedule_uuid = null;\n\t\tif(util.exists(resource))\n\t\t{\n\t\t\tschedule_uuid = resource.id;\n\t\t}\n\t\telse if($scope.selected_schedule !== null)\n\t\t{\n\t\t\tschedule_uuid = $scope.selected_schedule.uuid;\n\t\t}\n\n\t\tvar schedule = $scope.get_loaded_schedule(schedule_uuid);\n\t\tif(schedule !== null)\n\t\t{\n\t\t\tvar default_event_status = schedule.new_event_status_uuid;\n\n\t\t\tvar data =\n\t\t\t\t{\n\t\t\t\t\tschedule: schedule,\n\t\t\t\t\tdefault_event_status: default_event_status,\n\t\t\t\t\tstart_time: start,\n\t\t\t\t\tend_time: end,\n\t\t\t\t\ttime_interval: $scope.time_interval_minutes(),\n\t\t\t\t\tschedule_templates: $scope.schedule_templates,\n\t\t\t\t\tavailability_types: $scope.availability_types,\n\t\t\t\t\tsites: $scope.sites\n\t\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcontroller: 'cpCalendar.EventController',\n\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\tresolve: {\n\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\tparent_scope: [function() { return $scope }],\n\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\tedit_mode: [function() { return false }],\n\t\t\t\t\taccess_control: [function() {return $scope.access_control}],\n\t\t\t\t\tkey_binding: [function() {return {bind_key_global: function(){}}}],\n\t\t\t\t\tfocus: [function() {return $scope.calendar_api_adapter.focus}],\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t{\n\t\t\t\t\tthrow res;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// when the dialog closes clear the variable\n\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t$scope.dialog = null;\n\t\t\t});\n\t\t}\n\n\t\t$scope.opening_dialog = false;\n\t};\n\n\t$scope.open_edit_event_dialog = function open_edit_event_dialog(calEvent)\n\t{\n\t\tif(!$scope.access_control.has_permission('scheduling_create') )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// if already opening a dialog or have one open, ignore and return\n\t\tif($scope.opening_dialog || $scope.dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.opening_dialog = true;\n\n\t\tvar data = angular.extend({}, calEvent.data);\n\n\t\tdata.start_time = util.get_datetime_moment(\n\t\t\t\tcalEvent.data.start_time);\n\t\tdata.end_time = util.get_datetime_moment(\n\t\t\t\tcalEvent.data.end_time);\n\t\tdata.num_invoices = calEvent.data.num_invoices;\n\n\t\tdata.schedule =\n\t\t\t\t$scope.get_loaded_schedule(calEvent.data.schedule_uuid);\n\n\t\tdata.time_interval = $scope.time_interval_minutes();\n\n\t\tdata.schedule_templates = $scope.schedule_templates;\n\t\tdata.availability_types = $scope.availability_types;\n\n\t\t$scope.dialog = $uibModal.open({\n\t\t\tanimation: false,\n\t\t\tbackdrop: 'static',\n\t\t\tcontroller: 'cpCalendar.EventController',\n\t\t\ttemplateUrl: 'code/schedule/event.html',\n\t\t\tresolve: {\n\t\t\t\ttype: function() { return 'create_edit_event' },\n\t\t\t\tlabel: function() { return 'Appointment' },\n\t\t\t\tparent_scope: function() { return $scope },\n\t\t\t\tdata: function() { return data },\n\t\t\t\tedit_mode: function() { return true }\n\t\t\t}\n\t\t});\n\n\t\t// when the dialog closes clear the variable\n\t\t$scope.dialog.closed.then(function() {\n\t\t\t$scope.dialog = null;\n\t\t});\n\n\t\t$scope.opening_dialog = false;\n\t};\n\n\t$scope.rotate_event_status = function rotate_event_status(calEvent)\n\t{\n\t\tif(!$scope.access_control.has_permission('scheduling_create') )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t$scope.set_calendar_loading(true);\n\n\t\t$scope.calendar_api_adapter.rotate_event_status(calEvent.data.uuid, $scope.rotate_statuses).then(\n\t\t\t\tfunction success(event_data)\n\t\t\t\t{\n\n\t\t\t\t\tvar event_status_uuid = event_data.event_status_uuid;\n\t\t\t\t\tvar event_status_color =\n\t\t\t\t\t\t\t$scope.event_statuses[event_status_uuid] ?\n\t\t\t\t\t\t\t\t\t$scope.event_statuses[event_status_uuid].color :\n\t\t\t\t\t\t\t\t\t$scope.default_event_color;\n\n\t\t\t\t\tcalEvent.data.event_status_uuid = event_status_uuid;\n\t\t\t\t\tcalEvent.color = event_status_color;\n\t\t\t\t\t// This is being set to an array because of a bug:\n\t\t\t\t\t// https://github.com/fullcalendar/fullcalendar/issues/4011\n\t\t\t\t\tcalEvent.className = [$scope.calendar_api_adapter.event_class(event_status_color)];\n\n\t\t\t\t\t$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.set_calendar_loading(false);\n\t\t\t\t});\n\t};\n\n\t$scope.open_create_invoice = function open_create_invoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t{\n\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\t\t\n\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\twindow.window_scope = $scope;\n\t\t$window.open(url, '_blank');\n\t};\n\n\t$scope.open_patient_demographic = function open_patient_demographic(event)\n\t{\n\t\tvar url = $scope.calendar_api_adapter.get_patient_demographic_url(event);\n\t\t$window.open(url, '_blank');\n\t};\n\n\t$scope.open_create_chart_note = function open_create_chart_note(event)\n\t{\n\t\tvar url = $scope.calendar_api_adapter.get_create_chart_note_url(event);\n\t\t$window.open(url, '_blank');\n\t};\n\n\n\t//=========================================================================\n\t// Get information\n\t//=========================================================================/\n\n\t$scope.get_schedule_height = function get_schedule_height()\n\t{\n\t\tif ($scope.calendar_api_adapter)\n\t\t{\n\t\t\t$scope.calendar_api_adapter.get_schedule_height();\n\t\t}\n\t};\n\n\t// This gets the view name, but if it's resourceDay, it will get agendaDay.\n\t// TODO Not sure why this works this way.  Maybe it uses it to get a day of events for each\n\t//      resource in the resource list?\n\t$scope.calendar_view_name = function calendar_view_name()\n\t{\n\t\tvar view = $scope.view_name();\n\t\tif(view == 'resourceDay')\n\t\t{\n\t\t\tview = 'agendaDay';\n\t\t}\n\t\treturn view;\n\t};\n\n\t$scope.set_calendar_loading = function set_calendar_loading(is_loading)\n\t{\n\t\t$scope.calendar_loading = is_loading;\n\t};\n\n\t$scope.get_loaded_schedule = function get_loaded_schedule(uuid)\n\t{\n\t\tvar schedule = null;\n\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t{\n\t\t\tif($scope.schedules[i].uuid === uuid)\n\t\t\t{\n\t\t\t\tschedule = $scope.schedules[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn schedule;\n\t};\n\n\n\t//=========================================================================\n\t// Get information and maybe do something\n\t//=========================================================================/\n\n\t$scope.view_name = function view_name()\n\t{\n\t\tvar view_name = $scope.get_global_state('schedule_view_name');\n\n\t\tif(!util.exists(view_name))\n\t\t{\n\t\t\tview_name = $scope.get_global_preference_setting(\n\t\t\t\t\t'schedule_view_name');\n\t\t}\n\n\t\tif(!util.exists(view_name))\n\t\t{\n\t\t\tview_name = $scope.default_calendar_view;\n\t\t}\n\n\t\t$scope.save_global_state('schedule_view_name', view_name);\n\n\t\treturn view_name;\n\t};\n\n\t$scope.calendar_events = function(start, end, timezone, callback)\n\t{\n\t\t// load the events for each of the loaded schedules\n\t\tvar promise_array = [];\n\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t{\n\t\t\tpromise_array.push(\n\t\t\t\t\t$scope.calendar_api_adapter.load_schedule_events(\n\t\t\t\t\t\t\t$scope.schedules[i], $scope.selected_site_name, start, end, $scope.view_name(), $scope.schedule_templates,\n\t\t\t\t\t\t\t$scope.event_statuses, $scope.default_event_color, $scope.availability_types));\n\t\t}\n\n\t\t// once all the events are loaded, concat them together and callback\n\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\tvar schedule_events = [];\n\t\t\t\t\tfor(var i=0; i<results_array.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tschedule_events.push(results_array[i].data);\n\t\t\t\t\t}\n\t\t\t\t\t$scope.events = Array.prototype.concat.apply([], schedule_events);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t});\n\t};\n\n\n\n\t// ===============================================================================================\n\t// Data retrieval methods\n\t// ===============================================================================================\n\n\t$scope.load_schedule_templates = function load_schedule_templates()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\t$scope.calendar_api_adapter.load_schedule_templates().then(function success(results)\n\t\t{\n\t\t\t$scope.schedule_templates = results;\n\t\t\tdeferred.resolve($scope.schedule_templates);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t// Loads the list of availability types.  Sets the following:\n\t// $scope.availability_types - hash of availability types with uuid as key.\n\t$scope.load_availability_types = function load_availability_types()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\t$scope.calendar_api_adapter.load_availability_types().then(function success(results)\n\t\t{\n\t\t\t$scope.availability_types = results;\n\t\t\tdeferred.resolve($scope.availability_types);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t// $scope.event_statuses - a table to look up a status by uuid.\n\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t$scope.load_event_statuses = function load_event_statuses()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\t$scope.event_statuses = {};\n\t\t$scope.rotate_statuses = [];\n\t\t$scope.calendar_api_adapter.load_event_statuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t$scope.event_statuses[result.uuid] = result;\n\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.rotate_statuses.push(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdeferred.resolve(results);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t// Load the list of available sites from the API.  Sets the following:\n\t// $scope.sites - a table to lookup a site's info by name\n\t// $scope.site_options - the options for the site selection dropdown\n\t$scope.load_site_options = function load_site_options()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\t$scope.calendar_api_adapter.load_sites().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\t$scope.sites = {};\n\t\t\t\t$scope.site_options = [];\n\t\t\t\tif(angular.isArray(results) && results.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t$scope.site_options = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\tdisplay_name: \"All\",\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\t$scope.site_options = $scope.site_options.concat(results);\n\t\t\t\t}\n\n\t\t\t\tdeferred.resolve(results);\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t// $scope.resource_option_hash - table to look up schedule information by providerNo.  This is\n\t//                               used to create the resource view headers.\n\t$scope.load_schedule_options = function load_schedule_options()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\t$scope.calendar_api_adapter.load_schedule_options().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar schedule_data = results[i];\n\n\t\t\t\t\t\t$scope.schedule_options.push(schedule_data);\n\n\t\t\t\t\t\t// Get the possible resources by inferring that the group is a provider\n\t\t\t\t\t\t// by checking if the array has one entry and matches the identifier\n\t\t\t\t\t\t// Also uses fields specific to Juno.\n\t\t\t\t\t\t// TODO: CHANGE THIS!!\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\tangular.isArray(schedule_data.providerNos) &&\n\t\t\t\t\t\t\tschedule_data.providerNos.length == 1 &&\n\t\t\t\t\t\t\tschedule_data.providerNos[0].toString() == schedule_data.identifier\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar providerNo = schedule_data.providerNos[0];\n\n\t\t\t\t\t\t\t$scope.resource_option_hash[providerNo] = {\n\t\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t\t'uuid': providerNo,\n\t\t\t\t\t\t\t\t'name': providerNo,\n\t\t\t\t\t\t\t\t'title': schedule_data.name,\n\t\t\t\t\t\t\t\t'display_name': schedule_data.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t$scope.build_selected_resources = function build_selected_resources(providerNos)\n\t{\n\t\tvar selected_resources = [];\n\n\t\tfor(var i = 0; i < providerNos.length; i++)\n\t\t{\n\t\t\tselected_resources.push($scope.resource_option_hash[providerNos[i]]);\n\t\t}\n\n\t\treturn selected_resources;\n\t};\n\n\t$scope.load_selected_schedules = function load_selected_schedules()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar promise_array = [];\n\n\t\tif(\n\t\t\tutil.exists($scope.selected_schedule.providerNos) &&\n\t\t\tangular.isArray($scope.selected_schedule.providerNos)\n\t\t)\n\t\t{\n\t\t\t// TODO: this is really gross and I don't like it\n\t\t\t// Potentially put this in the calendarApiAdapter\n\t\t\tangular.forEach($scope.selected_schedule.providerNos, function(providerNo)\n\t\t\t{\n\t\t\t\tpromise_array.push($scope.calendar_api_adapter.load_schedule(providerNo.toString()));\n\t\t\t});\n\n\t\t\tif($scope.selected_schedule.providerNos.length > 1)\n\t\t\t{\n\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t$scope.selected_resources = $scope.build_selected_resources($scope.selected_schedule.providerNos);\n\t\t\t\t$scope.ui_config.calendar.resources = $scope.selected_resources;\n\t\t\t\t$scope.ui_config.calendar.defaultView = \"resourceDay\";\n\n\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t$scope.save_global_state(\"schedule_view_name\", \"resourceDay\");\n\t\t\t\t$scope.update_calendar_view();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t$scope.ui_config.calendar.defaultView = \"agendaWeek\";\n\t\t\t\t$scope.save_global_state(\"schedule_view_name\", \"agendaWeek\");\n\t\t\t\t$scope.ui_config.calendar.resources = false;\n\t\t\t}\n\t\t}\n\t\telse if(\n\t\t\t$scope.view_name() !== 'resourceDay' &&\n\t\t\t$scope.selected_schedule !== null\n\t\t)\n\t\t{\n\t\t\tpromise_array.push(\n\t\t\t\t$scope.calendar_api_adapter.load_schedule($scope.selected_schedule.uuid));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tangular.forEach($scope.selected_resources, function(selected)\n\t\t\t{\n\t\t\t\tpromise_array.push($scope.calendar_api_adapter.load_schedule(selected.uuid));\n\t\t\t});\n\t\t}\n\n\t\t// Loop through the schedules added above and add them to the schedule list.\n\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\t$scope.schedules = [];\n\t\t\t\t\tfor(var i=0; i<results_array.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.schedules[i] = results_array[i].data;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results_array);\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('errors');\n\t\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\n\n\n\t// ===============================================================================================\n\t// Schedule config methods\n\t// ===============================================================================================\n\n\t$scope.set_schedule_hour_range = function set_schedule_hour_range()\n\t{\n\t\t// restrict day view if user preferences are set\n\n\t\tvar min_time = $scope.get_global_preference_setting('schedule_min_time');\n\t\tif(util.exists(min_time))\n\t\t{\n\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t$scope.ui_config.calendar.minTime = min_time + \":00\";\n\t\t}\n\n\t\tvar max_time = $scope.get_global_preference_setting('schedule_max_time');\n\t\tif(util.exists(max_time))\n\t\t{\n\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t$scope.ui_config.calendar.maxTime = max_time + \":00\";\n\t\t}\n\n\t\t// scroll so that one hour ago is the top of the calendar\n\t\t$scope.ui_config.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t};\n\n\t$scope.load_default_selections = function load_default_selections()\n\t{\n\t\t$scope.selected_schedule = $scope.calendar_api_adapter.get_selected_schedule(\n\t\t\t\t$scope.schedule_options);\n\n\t\t$scope.selected_resources = $scope.calendar_api_adapter.get_selected_resources(\n\t\t\t\t$scope.resource_options);\n\n\t\t$scope.selected_time_interval = $scope.calendar_api_adapter.get_selected_time_interval(\n\t\t\t\t$scope.time_interval_options, $scope.default_time_interval);\n\t\t$scope.ui_config.calendar.slotDuration = $scope.selected_time_interval;\n\t\t$scope.ui_config.calendar.slotLabelInterval = $scope.selected_time_interval;\n\n\t\t$scope.ui_config.calendar.minTime = $scope.calendar_api_adapter.get_schedule_min_time();\n\t\t$scope.ui_config.calendar.maxTime = $scope.calendar_api_adapter.get_schedule_max_time();\n\n\t\t// scroll so that one hour ago is the top of the calendar\n\t\t$scope.ui_config.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t};\n\n\t$scope.set_calendar_resources = function set_calendar_resources()\n\t{\n\t\tif($scope.view_name() === 'resourceDay')\n\t\t{\n\t\t\t$scope.ui_config.calendar.resources = $scope.selected_resources;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.ui_config.calendar.resources = false;\n\t\t}\n\t};\n\n\t$scope.set_event_sources = function set_event_sources()\n\t{\n\t\t$scope.event_sources.push($scope.calendar_events);\n\t};\n\n\t$scope.time_interval_minutes = function time_interval_minutes()\n\t{\n\t\treturn parseInt($scope.selected_time_interval.split(\":\")[1]);\n\t};\n\n\t$scope.create_invoice_callback = function create_invoice_callback()\n\t{\n\t\t// check that the calendar exists before running refetch,\n\t\t// in case the window was closed before the callback\n\t\tif($scope.calendar())\n\t\t{\n\t\t\t$scope.refetch_events();\n\t\t}\n\t};\n\n\t$scope.open_view_invoices = function open_view_invoices(event_uuid)\n\t{\n\t\t$window.open(\n\t\t\t\t\"#/invoice/list?schedule_event_uuid=\" +\n\t\t\t\tencodeURIComponent(event_uuid),\n\t\t\t\t'_blank');\n\t};\n\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t$scope.$watch(\n\t\t\tfunction() { return $scope.global_state.selected_date },\n\t\t\tfunction(date)\n\t\t\t{\n\t\t\t\tif($scope.calendar())\n\t\t\t\t{\n\t\t\t\t\t$scope.calendar().fullCalendar('gotoDate', date);\n\t\t\t\t}\n\t\t\t});\n\n\n\t//=========================================================================\n\t// Config Array\n\t//=========================================================================/\n\t$scope.ui_config = {\n\t\tcalendar: {\n\t\t\theight: $scope.get_schedule_height(),\n\t\t\tnowIndicator: true,\n\t\t\theader: {\n\t\t\t\tleft: 'title',\n\t\t\t\tcenter: '',\n\t\t\t\tright: 'today prev,next'\n\t\t\t},\n\n\t\t\tallDaySlot: false,\n\n\t\t\tdefaultView: null,\n\t\t\tdefaultDate: $scope.default_date,\n\t\t\tslotDuration: $scope.selected_time_interval,\n\t\t\tslotLabelInterval: $scope.selected_time_interval,\n\t\t\tslotLabelFormat: 'h:mma',\n\n\t\t\tloading: $scope.set_calendar_loading,\n\n\t\t\tselectable: true,\n\t\t\tselect: $scope.open_create_event_dialog,\n\t\t\teventClick: $scope.on_event_clicked,\n\t\t\teventRender: $scope.on_event_render,\n\t\t\tviewRender: $scope.on_view_render,\n\t\t\teventAfterAllRender: $scope.after_render,\n\n\t\t\teditable: true,\n\t\t\teventDrop: $scope.on_event_drop,\n\t\t\teventResize: $scope.on_event_resize\n\t\t}\n\t};\n}]);\n","angular.module('cpCalendar')\n\n\n//=========================================================================\n// cpCalendar Directive\n//=========================================================================/\n\n.directive(\n\t\t'cpCalendar',\n\n\t\t[\n\t\t\t'$parse',\n\t\t\t'$injector',\n\t\t\t'$timeout',\n\n\t\t\tfunction(\n\t\t\t\t\t$parse,\n\t\t\t\t\t$injector,\n\t\t\t\t\t$timeout\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tui_config: '=cpCalendar',\n\t\t\t\t\tcontrol: '=cpCalendarControl',\n\t\t\t\t\tselected_schedule: '=cpCalendarSelectedSchedule',\n\t\t\t\t\tselected_time_interval: '=cpCalendarSelectedTimeInterval',\n\t\t\t\t\tcalendarWatchEvent : '&'\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attributes, controller) {\n\n\t\t\t\t\t//=========================================================================\n\t\t\t\t\t// Control methods\n\t\t\t\t\t//=========================================================================/\n\n\t\t\t\t\tthis.is_initialized = function is_initialized() {\n\t\t\t\t\t\treturn $scope.is_initialized();\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.has_schedules = function has_schedules() {\n\t\t\t\t\t\treturn $scope.schedules.length > 0;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.has_sites = function has_sites() {\n\t\t\t\t\t\treturn $scope.site_options.length > 0;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.get_schedule_options = function get_schedule_options()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.schedule_options;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.get_site_options = function get_site_options()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.site_options;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.on_schedule_changed = function on_schedule_changed(schedule_uuid, site)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.on_schedule_changed(schedule_uuid, site);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.change_view = function change_view(view)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.change_view(view);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.view_name = function view_name()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.view_name();\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.get_time_interval_options = function get_time_interval_options()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.time_interval_options;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.show_legend = function show_legend()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.show_legend();\n\t\t\t\t\t};\n\n\t\t\t\t\t// Create the API to communicate from the outside\n\t\t\t\t\t$parse(attributes.cpCalendarControl).assign($scope.$parent, this);\n\n\n\t\t\t\t\t//=========================================================================\n\t\t\t\t\t// External models\n\t\t\t\t\t//=========================================================================/\n\n\t\t\t\t\t// Link up all of the models\n\t\t\t\t\t$scope.calendar_api_adapter = $injector.get(attributes.cpCalendarCalendarApiAdapter);\n\t\t\t\t\t$scope.access_control = $injector.get(attributes.cpCalendarAccessControl);\n\t\t\t\t\t$scope.autocomplete = $injector.get(attributes.cpCalendarAutoComplete);\n\t\t\t\t\t$scope.global_state = $injector.get(attributes.cpCalendarGlobalState);\n\t\t\t\t\t$scope.patient_model = $injector.get(attributes.cpCalendarPatientModel);\n\n\n\t\t\t\t\t//=========================================================================\n\t\t\t\t\t// Start the scheduler\n\t\t\t\t\t//=========================================================================/\n\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\t$scope.init();\n\t\t\t\t\t});\n\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'A',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\tcontroller: 'cpCalendar.Controller',\n\t\t\t\t\ttemplate: '<div><div id=\"cp-calendar\" class=\"calendar\" ng-model=\"event_sources\" calendar=\"cpCalendar\" ui-calendar=\"ui_config.calendar\"></div></div>',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function\n\t\t\t\t};\n\t\t\t}\n\t\t]\n);\n","'use strict';\n\nangular.module('cpCalendar', [\n\t'Common',\n]);\n","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable')\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable')\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('angular-ui-calendar');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('ngstorage');\nrequire('./scss/juno.scss')\nrequire('font-awesome/css/font-awesome.min.css');\n// TODO: make sure this works, fix if it doesn't\n//require('components-font-awesome');\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n\t'cpCalendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'PatientList',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController'\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin_popup.jsp',\n\t\t\tcontroller: 'AdminCtrl'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tformListId: 0\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.view',\n\t\t{\n\t\t\turl: '/view/:type/:id?name',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tparams: { name: { dynamic: true } },\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.forms.add',\n\t\t{\n\t\t\turl: '/add/:type/:id',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t{\n\t\t\turl:'/k2aNotification',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t});\n\n}]);\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n {\n\n\tvar dateOfBirth = new Date(parseInt(dobYear, 10), parseInt(dobMonth, 10), parseInt(dobDay, 10));\n\tvar currDate = new Date();\n\n\tvar years = (currDate.getFullYear() - dateOfBirth.getFullYear());\n\n\tif (currDate.getMonth() < dateOfBirth.getMonth() ||\n\t\tcurrDate.getMonth() == dateOfBirth.getMonth() && currDate.getDate() < dateOfBirth.getDate())\n\t{\n\t\tyears--;\n\t}\n\treturn years;\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {}\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}"],"sourceRoot":""}