{"version":3,"sources":["webpack:///./generated/api/ScheduleApi.ts","webpack:///./generated/api/AppointmentApi.ts","webpack:///./src/help/helpController.js","webpack:///./src/help/supportController.js","webpack:///./src/help/module.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/document/module.js","webpack:///./src/report/reportSHMentalHealthController.js","webpack:///./src/report/reportRegistrationIntakeController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportFollowUpIntakeController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/module.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/inbox/module.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/module.js","webpack:///./src/billing/billingController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/fax/faxSendReceiveController.js","webpack:///./src/admin/integration/fax/faxConfigurationEditController.js","webpack:///./src/admin/integration/fax/faxConfigurationController.js","webpack:///./src/admin/integration/fax/module.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/module.js","webpack:///./src/schedule/appointmentViewController.js","webpack:///./src/schedule/appointmentAddController.js","webpack:///./src/schedule/eventController.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/module.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./src/record/details/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/module.js","webpack:///./src/patientlist/patientListProgramController.js","webpack:///./src/patientlist/patientListDemographicSetController.js","webpack:///./src/patientlist/patientListConfigController.js","webpack:///./src/patientlist/patientListAppointmentListController.js","webpack:///./src/patientlist/patientListController.js","webpack:///./src/patientlist/patientListState.js","webpack:///./src/patientlist/module.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/module.js","webpack:///./src/patient/newPatientController.js","webpack:///./src/patient/module.js","webpack:///./src/layout/navBarController.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/module.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/selectOptionTooltip.js","webpack:///./src/common/directives/angular-ui-calendar.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/systemPreferenceService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/scheduleService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/reportingService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/faxOutboundService.js","webpack:///./src/common/services/faxInboundService.js","webpack:///./src/common/services/faxAccountService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/module.js","webpack:///./src/common/util/searchListHelper.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/module.js","webpack:///./src/common/module.js","webpack:///./app.js","webpack:///./src/consults/common.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/common/util/util.js","webpack:///./src/common/displayMessages.js","webpack:///../webapp/share/javascript/Oscar.js"],"names":["ScheduleApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","fetchMonthlyData","year","month","providerNo","extraHttpRequestParams","localVarPath","replace","encodeURIComponent","String","headerParams","Object","assign","Error","httpRequestParams","method","url","params","headers","findExistAppointments","demographicNo","getAppointment","appointmentTo1","data","getAppointmentReasons","getAppointmentStatuses","getAppointmentTypes","getAppointmentsForDay","date","getAppointmentsForDay1","getCalendarAppointmentStatuses","getCalendarEvents","providerId","startDate","endDate","site","queryParameters","getScheduleGroups","getScheduleTemplateCodes","updateAppointmentStatus","id","updateAppointmentType","$inject","exports","AppointmentApi","addAppointment","calendarAppointment","deleteAppointment","appointmentNo","setNextStatus","updateAppointment","angular","module","controller","$scope","ospInfo","name","phone","contact","email","buildInfo","versionDisplayName","version","$uibModalInstance","qll","close","addQuickLink","qlForm","$valid","changePassword","console","log","$state","$uibModal","$filter","providerList","user","billingServiceTypes","loadedSettings","providerService","encounterForms","eforms","teams","groupNames","loadedApps","appService","$emit","pref","content","recentPatients","formGroupNames","value","label","i","length","push","billingServiceTypesMod","copy","splice","type","appointmentScreenForms","selected","formName","x","checked","appointmentScreenEforms","tabs","displayName","path","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","current","currentTab","tab","isActive","changeTab","go","save","newList","appointmentScreenQuickLinks","saveSettings","then","alert","cancel","selectEncounterForms","tmp","selectEForms","removeQuickLinks","openChangePasswordModal","window","open","openQuickLinkModal","templateUrl","result","selectedItem","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","getApps","errorMessage","securityService","me","$watch","getUser","newVal","openPopup","$log","Date","generateReport","includePastForms","searchProviders","val","search","searchTerm","active","results","resp","firstName","lastName","errors","updateProviderNo","item","model","p","age","response","region","startTime","endTime","reset","factory","$rootScope","location","load","msg","ReportNavigation","reports","iframeUrl","group","init","reportGroup","reportGroups","getReportGroups","reportSidebar","test","editDemographicSet","selectReport","getReports","groups","groupMap","key","report","currentReport","direct","width","height","total","currentPage","pageSize","startIndex","doImport","d","myUrl","remoteFacilityId","prevPage","nextPage","$q","$stateParams","NgTableParams","demographicsService","demographicReadAccess","clearParams","Juno","Common","Util","exists","term","hasRights","items","objectName","privilege","initTable","tableParams","page","count","sorting","Name","getData","deferred","defer","promiseArray","integratorResults","integrator","searchIntegrator","all","demographicSearchResults","resolve","promiseErrors","reject","promise","searchPatients","dobMoment","moment","isValid","format","reload","searchType","status","outofdomain","searchTermPlaceHolder","toggleParam","param","indexOf","loadRecord","hideNote","showIntegratorResults","$","$resource","$location","consultService","demographicService","summaryService","staticDataService","consult","initialize","hasRight","consultReadAccess","consultUpdateAccess","consultWriteAccess","referringDoctorList","toArray","faxList","sendToList","attachments","Consults","sortAttachmentDocs","getLetterheadList","letterheadList","letterhead","changeLetterhead","letterheadName","forEach","referringDoc","referringDoctor","demographic","extras","cellPhone","letterheadAddress","address","letterheadPhone","letterheadFax","fax","urgencies","getConsultUrgencies","statuses","getConsultResponseStatuses","hours","getHours","minutes","getMinutes","parseTime","time","tArray","split","appointmentHour","appointmentMinute","appointmentTime","consultChanged","$watchCollection","$on","event","confirm","preventDefault","writeToBox","boxId","summaryItem","boxData","addNewLine","clinicalInfo","concurrentProblems","currentMeds","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","invalidData","urgency","isUndefinedOrNull","setAppointmentTime","apptTime","now","set","openAttach","attachment","attachFiles","windowClass","backdrop","attachmentsChanged","consultSaving","saveResponse","body","list","p_page1","sendFax","p_urgency","toTrimmedString","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","reqId","faxNumber","printPreview","printWin","document","p_attachments","write","p_clinicName","p_responseDate","formatDate","responseDate","p_referralDate","referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","alternativePhone","p_patientBirthdate","dateOfBirth","p_patientSex","sexDesc","p_patientHealthCardNo","hin","ver","p_patientChartNo","chartNo","p_patientAddress","city","province","postal","p_appointmentDate","appointmentDate","p_appointmentTime","formatTime","p_reason","reasonForReferral","examination","impression","plan","allergies","$timeout","onRecordPage","lastResponse","team","numToReturn","parseInt","getAccessRights","getTeams","getActiveTeams","unshift","searchMrps","mrpNo","updateMrpNo","Number","mrpName","getProvider","doSearch","updateDemographicNo","demographicName","checkAll","checkNone","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","clear","ReferralDate","getSavedSearchParams","_params","perPage","myRegexp","match","exec","sortColumn","sortDirection","tmpSearch","searchResponses","meta","j","statusDescription","urgencyDescription","urgencyColor","hideSearchPatient","srhDemoNo","srhMrpNo","referralStartDate","referralEndDate","appointmentStartDate","appointmentEndDate","countPerPage","toPage","serviceList","getConsultRequestStatuses","error","getDemographic","demographicId","serviceId","specialists","spec","professionalSpecialist","oldVal","changeService","index","selectedIndex","getAllergies","patientWillBook","size","setESendEnabled","eSendEnabled","eDataUrl","trim","valid","saveRequest","finally","saveAndFax","noNull","eSend","eSendRequest","message","saveAndPrint","print","JSON","stringify","searchParams","searchDemoNo","setSearchParams","$current","srhStatus","srhTeam","srhRefStartDate","getTime","srhRefEndDate","srhApptStartDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","getSavedSearchVals","search1","searchRequests","refDate","toDate","setMonth","getMonth","outstanding","sortMode","popup","vheight","vwidth","varpage","winname","windowprops","opener","self","atth","patientName","attachedDocs","selectedAttachedDoc","consultId","getResponseAttachments","availableDocs","selectedAvailableDoc","openDoc","doc","attach","attached","detach","done","getRequestAttachments","removeIndex","map","documentNo","documentType","selectionIndex","reportByTemplateService","k2aService","k2aActive","k2aReports","K2A_URL","dtOptions","checkStatus","isK2AInit","getAllK2AReports","saveK2AReport","getK2AReportById","refreshParent","openK2AUrl","getK2AUrl","href","onunload","notifications","readMore","notif","getMoreNotification","focus","archive","ackNotification","getNotifications","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","clinicName","getPreventionRulesList","getCurrentPreventionRulesVersion","preventionRulesList","loadPreventionRuleById","prevSet","increasePrevListQuantity","initK2A","info","faxAccountService","faxInboundService","faxOutboundService","systemStatusEnum","freeze","sent","queued","tabEnum","inbox","outbox","activeTab","loggedInProviderNo","nextPullTime","nextPushTime","selectedFaxAccount","faxAccountList","outboxItemList","inboxItemList","DateSent","listAccounts","loadNextPushTime","loadNextPullTime","loadOutboxItems","tableParamsOutbox","defaults","formatOptionalDateParam","searchListHelper","SearchListHelper","getOutbox","loadInboxItems","tableParamsInbox","getInbox","resendFax","outboxItem","systemStatus","resendOutboundFax","systemStatusMessage","getNextPullTime","getNextPushTime","tabId","openDocument","documentId","openDocumentWindow","windowName","getMe","viewDownloadFile","outboundId","getDownloadUrl","dateObj","faxAccount","masterFaxEnabledInbound","masterFaxEnabledOutbound","connectionStatusEnum","unknown","success","failure","coverLetterOptions","connectionStatus","setDefaultConnectionStatus","enabled","enableInbound","enableOutbound","accountLogin","accountEmail","password","coverLetterOption","form","closeSuccess","updatedAccount","closeError","updateAccountSettings","addAccountSettings","dismiss","testConnection","systemPreferenceService","loggedInProvider","masterFaxDisabled","isPreferenceEnabled","updateMasterFaxDisabledStatus","editNewFaxAccount","editFaxAccount","isNewAcct","saveMasterFaxEnabledStateInbound","setSystemProperty","saveMasterFaxEnabledStateOutbound","setPreference","scheduleService","appointment","statusList","appointmentUpdate","appointmentWriteAccess","getStatus","description","providerName","editProvider","showProviderFormControl","provider","updateProvider","needsUpdate","cancelProviderUpdate","showAppointmentHistory","appointmentHistory","noShowAppointment","cancelAppointment","apptDate","types","duration","formattedName","reason","notes","resources","critical","getTypes","selectType","validate","t","showErrors","startTime12hWithMedian","messagesFactory","keyBinding","parentScope","editMode","eventUuid","schedule","eventData","timeInterval","lastEventLength","patientTypeahead","autocompleteValues","activeTemplateEvents","eventStatuses","eventStatusOptions","selectedEventStatus","defaultEventStatus","selectedSiteName","timepickerFormat","fieldValueMapping","displayMessages","initialized","working","demographicModel","fullName","hasPhoto","patientPhotoUrl","birthDate","healthNumber","ontarioVersionCode","phoneNumberPrimary","fillData","formatName","dob","getDateMomentFromComponents","dobYear","dobMonth","dobDay","formatMomentDate","uploadPhoto","file","hasPermission","momentStart","momentEnd","formatMomentTime","diff","setActiveTemplateEvents","hasOwnProperty","setSelectedEventStatus","eventStatusCode","initPatientAutocomplete","adjustEndDatetime","element","selectedCode","displayLetter","getDateAndTimeMoment","formattedTime","activeEvents","events","rendering","resourceId","uuid","start","getDatetimeNoTimezoneMoment","end","isBefore","isAfter","availabilityType","availabilityTypes","scheduleTemplateCode","lengthMinutes","newEventLength","add","updateLastEventLength","eventLength","validateForm","validateDateString","validateTimeString","has_errors","startDatetime","endDatetime","isSame","addStandardError","saveEvent","processSaveResults","deleteEvent","time_str","loadPatientFromTypeahead","newStartDate","oldStartDate","newStartTime","oldStartTime","newEndDate","oldEndDate","newEndTime","oldEndTime","loadedNewPhoto","preview_patient_image","new_photo","isWorking","isInitialized","isPatientSelected","hasSites","siteOptions","clearPatient","patient","setEventLength","refetchEvents","field_errors","has_standard_errors","add_generic_fatal_error","del","saveAndBill","openCreateInvoice","viewInvoices","open_view_invoices","createPatient","create_patient_dialog","calendar_api_adapter","openPatientDialog","onPatientModalSave","modify_patient","modify_patient_dialog","newDemographic","keyBindSettings","ctrl+enter","title","tooltip","callback_fn","target","ctrl+shift+enter","bindKeyGlobal","focusService","uiCalendarConfig","appointmentApi","_generated_api_AppointmentApi__WEBPACK_IMPORTED_MODULE_0__","scheduleApi","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_1__","calendarName","calendarLoading","uiConfig","uiConfigApplied","eventSources","selectedSchedule","selectedTimeInterval","cpCalendarControl","schedules","scheduleOptions","resourceOptions","defaultEventColor","defaultTimeInterval","timeIntervalOptions","defaultAutoRefreshMinutes","defaultCalendarView","rotateStatuses","resourceOptionHash","scheduleTemplates","sites","openingDialog","dialog","defaultDate","selectedDate","scheduleViewName","scheduleDefault","scheduleTimeInterval","scheduleAutoRefresh","scheduleAutoRefreshMinutes","calendar","defaultView","calendarViewName","loadAvailabilityTypes","loadEventStatuses","loadScheduleOptions","loadSiteOptions","loadDefaultSelections","loadSelectedSchedules","setCalendarResources","setEventSources","initEventsAutoRefresh","applyUiConfig","calendars","isSchedulingEnabled","hasSchedules","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","isDefined","selectedSite","viewName","calendarEvents","timezone","callback","promise_array","loadScheduleEvents","results_array","Array","concat","apply","err","showTimeIntervals","changeView","view","reload_schedules","updateCalendarView","showLegend","event_statuses","availability_types","animation","closed","fullCalendar","changeDate","isAgendaView","getSelectedSchedule","selectedUuid","providerNos","isArray","loadSchedule","toString","selectedResources","buildSelectedResources","resultsArray","availabilities","relations","setCalendarLoading","isLoading","getLoadedSchedule","updateEvent","calEvent","timeIntervalMinutes","code","getSelectedTimeInterval","slotDuration","slotLabelInterval","minTime","getScheduleMinTime","maxTime","getScheduleMaxTime","scrollTime","subtract","rawResults","rotates","siteName","startDateString","settings","date_format","endDateString","moveEvent","delta","adjustStartTime","startMoment","endMoment","movedAppointment","formatMomentDateTimeNoTimezone","asMinutes","displayErrors","validationErrorArray","validationErrors","add_standard_error","add_field_error","event_uuid","schedule_uuid","demographics_patient_uuid","get_loaded_schedule","get_create_invoice_url","demographics_practitioner_uuid","window_scope","$window","getIconPath","icon","statusModifier","modifierString","rotateEventStatus","newStatus","color","getBillingLink","referralNoParameter","billingRdohip","billingRegion","billingForm","userProviderNo","getEncounterLink","userFirstName","userLastName","getRxLink","onEventRender","eventSiteHtml","eventSite","eventStatusHtml","eventStatus","eventStatusRotate","sortOrder","eventStatusModifier","escapeHtml","eventDetails","isBlank","find","html","onViewRender","css","afterRender","click","openCreateEventDialog","jsEvent","resource","scheduleUuid","display_name","modalSchedule","catch","res","editModeCallback","onSaveCallback","loadErrorLinkPatientFn","edit_mode","on_save_callback","load_error_link_patient_fn","openPatientDemographic","encType","openEditEventDialog","onEventClicked","is","onEventDrop","revertFunc","ui","datetime_no_timezone_format","onEventResize","onSiteChanged","onScheduleChanged","onTimeIntervalChanged","scheduleData","identifier","loadSites","getSites","out","siteId","bgColor","newValue","oldValue","refresh","clearInterval","isIntegerString","setInterval","nowIndicator","header","left","center","right","allDaySlot","slotLabelFormat","loading","selectable","select","eventClick","eventRender","viewRender","eventAfterAllRender","editable","eventDrop","eventResize","schedulerLicenseKey","tickler","ticklerNote","noteService","originalNote","note","saveTicklerNote","ticklerService","demographicSearch","template","serviceDateDate","serviceDateTime","suggestedTextId","priorities","timepicker","defaultTime","getTextSuggestions","textSuggestions","suggestedText","taskAssignedTo","priority","givenDate","givenTime","setHours","get","setMinutes","serviceDate","demo","taskAssignedToName","setSuggestedText","addMonthsFromNow","num","ticklerWriteAccess","ticklerUpdate","serviceDateInput","serviceTimeInput","showUpdates","showComments","showCommentFormControl","selectedStatus","newDate","finalVal","updateTaskAssignedTo","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","dp","tp","serviceTime","isNaN","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","updateDate","newComment","cancelCommentUpdate","saveChanges","postData","update","completeTickler","setCompleted","deleteTickler","setDeleted","printTickler","providers","ticklerAPI","ticklerReadAccess","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","getTicklerNote","editNote2","editor","noteId","observationDate","revision","printArea","input","tableName","tableId","uxService","getTrackerUrl","resizeIframe","iframe","h","contentWindow","scrollHeight","formService","currentFormList","currentForm","currentlistId","isUndefined","formlists","changeTo","listId","getAllFormsByHeading","debug","viewFormState","getElementById","hasChildNodes","removeChild","firstChild","rnd","Math","round","random","win","pymParent","pym","Parent","getListClass","getActiveFormClass","formId","keypress","altKey","currIdx","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","buildDate","day","dateEmpty","date3Valid","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","hcParts","phoneNum","defPhTitle","prefPhTitle","properties","$parent","recordCtrl","initDemographicVars","checkAccess","getBySecurityRole","doctors","nurses","midwives","getDemographicContacts","demoContacts","demoContactShow","demoContactPros","scrNotes","substring","lastIndexOf","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrPaperChartArchivedDate","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","waitingListNames","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","genders","getGenders","titles","getTitles","provinces","getProvinces","countries","getCountries","engFre","getEngFre","spokenlangs","getSpokenLanguages","rosterTermReasons","getRosterTerminationReasons","securityQuestions","getSecurityQuestions","rxInteractionLevels","getRxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","billregion","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","getStatusList","rosterStatusList","patientStatusList","calcAge","formatLastName","formatFirstName","setSwipeReady","validateHCSave","sin","effDate","hcRenewDate","rosterDate","rosterTerminationDate","patientStatusDate","dateJoined","onWaitingListSinceDate","canRead","cannotChange","checkAction","stopPropagation","onbeforeunload","toUpperCase","readyForSwipe","swipecardMsg","swipecard","healthCardHandler","keycode","swipeCardData","namePos","endNamePos","isNumber","healthCardUpdateDemographics","validateHC","hcType","hcTypeColor","lastNameColor","firstNameColor","hinColor","verColor","hcSex","sex","sexColor","dateParts","dobYearColor","dobMonthColor","dobDayColor","swipeDate","effDateColor","hcRenewDateColor","hinExpDate","HCValidation","responseDescription","responseCode","checkHin","checkHinVer","checkDate","charAt","checkYear","checkMonth","daysOfMonth","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","getFullYear","getDate","dateValid","isPostalComplete","isPostalValid","resetEditState","RegExp","checkEmail","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","n","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchName","searchReferralDocs","searchReferralDocsRefNo","searchRefNo","searchReferralDoctors","referralDoctors","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doSave","isUniqueHC","saving","newDemoExtras","updateDemographic","maxDaysOfMonth","s","demoContact","contactShow","role","sdm","ec","category","obj","formListId","adminAccess","adminEformAccess","hasAdminAccess","encounterFormlist","formGroups","getFormGroups","formOptions","favouriteGroup","getFavouriteFormGroup","getFormOptions","getCompletedEncounterForms","getSelectedEncounterForms","queryName","formValue","animate","scrollTop","maxheight","max","offsetHeight","style","isEmpty","currentEformGroup","setCurrentEFormGroup","mod","openFormFromGroups","formOption","opt","atleastOneItemSelected","extra","docIds","isChecked","getGroupListClass","grp","currentState","keyCode","saveSignNote","cancelNoteEdit","isFunction","clearChanges","$interval","action","diseaseRegistryService","quickLists","summaryCode","groupNotesForm","assignedCMIssues","encounterNote","position","annotation_attrib","getIssueQuickLists","addDxItem","issue","codingSystem","findDxIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","displayIssueId","issueCode","getIssueId","issueId","displayGroupNote","itemId","getIssueNote","editorNames","groupNoteExt","setAvailablePositions","removeEditingNoteFlag","itemExtra","availablePositions","changeNote","saveGroupNotes","cpp","isSigned","encounterType","encounterTime","assignedIssues","saveIssueNote","transitionTo","inherit","notify","removeGroupNoteIssue","unchecked","doSetEditingNoteFlag","setEditingNoteFlag","editingNoteId","itvSet","itvCheck","checkEditNoteNew","removeIssue","restoreIssue","archiveGroupNotes","archived","openRevisionHistory","searchIssues","assignIssue","getIssue","isSelected","addToDxRegistry","pageOptions","printType","dates","selectedWarning","atleastOneSelected","printToday","cancelPrint","sendToPhr","queryString","selectedList","join","ops","columnOne","modules","columnThree","selectedNotes","notelist","busy","noteFilter","currentFilter","onlyNotes","onlyMine","cannotAdd","openRx","demoNo","openAllergies","openPreventions","openAssessments","addMoreItems","getNotesFrom","editNote","editGroupNote","findGroupNote","gotoState","moduleList","summaryItems","k","currentEditNote","isNoteBeingEdited","noteFound","notecount","isRegularNote","rxAnnotation","eformData","encounterForm","invoice","setColor","border-left-color","showNoteHeader","showNote","deleted","getNoteHeader","noteObj","trackerUrl","toggleList","displaySize","showMoreItems","isSectionExpanded","isSectionEmpty","isUnsignedEncounterNote","getSummaryHeaders","fillItems","summaryLists","itemsToFill","getFullSummary","editGroupedNotes","viewEform","eFormId","viewDocument","itemArray","showPrintModal","toggleIsSelectedForPrint","zero","$localStorage","billingService","isNoteSaved","$storage","recordtabs2","fillMenu","menu","temp","currenttab2","isDefinedAndNotNull","state","demoId","timeout","saveUpdates","initNote","tmpSave","skipTmpSave","saveIntervalSeconds","totalSeconds","myVar","setTime","innerHTML","pad","valString","getCurrentTimerToggle","toggleTimer","hasClass","removeClass","addClass","pasteTimer","ed","toggleNote","getCurrentNote","saveNote","issueDescriptions","isInArray","saveSignVerifyNote","isVerified","getBillingRegion","getDefaultView","saveSignBillNote","dxCode","apptNo","apptProvider","apptStartTime","dt","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","displayWarning","noteEditorText","searchTemplates","templates","encounterTemplateName","insertTemplate","getTemplate","encounterTemplateValue","options","magicVal","noteToEdit","$broadcast","mediumNavItemFilter","inverse","filterValue","inArray","updateData","Content-Type","admissions","reportingService","getDemographicSetList","sets","config","patientListConfig","saveConfiguration","Navigation","patientListState","statusCodeMap","Map","dateOptions","showWeeks","getStatuses","getAppointmentStatusDescriptionByStatusCode","statusCode","getAppointmentStatusColourByStatusCode","colour","today","$event","opened","AddDays","noOfDays","switchDay","dateNew","formattedDate","changeApptList","changeApptDate","currenttab","tabItems","serviceMethod","getAppointments","patients","showFilter","addNewAppointment","viewAppointment","isScheduleActive","angularUtil","personaService","sidebar","goToRecord","inMobileView","hidePatientList","query","isMoreActive","currentmoretab","showPatientList","changeMoreTab","moreTabItemsIndex","filter","moreTabItems","tabItemIndex","getMoreTabClass","numberOfPages","nPages","ceil","changePage","pageNum","process","resultList","getRecentPatientList","recentPatientList","getPatientListConfig","numberOfApptstoShow","getTabItems","manageConfiguration","setPatientListConfig","Promise","service","prefs","dashboardPreferences","updateDashboardPreferences","messageService","inboxService","displayDate","k2aFeedActive","busyLoadingData","getDashboardPreferences","inboxTableParams","getDashboardItems","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","removeK2AComment","agreeId","agreeCount","disagree","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","postK2AComment","post","commentCount","comments","updateTicklers","creator","overdueOnly","totalTicklers","ticklers","arr","updateMessages","getUnread","totalMessages","messages","updateReports","totalInbox","startPoint","numberOfRows","getK2aFeed","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","parse","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","programService","submitDisabled","getPrograms","programs","admissionProgramId","ngModelContoller","isCorrectDate","demoRetVal","saveDemographic","ok","capName","unAckLabDocTotal","unreadMessageTotal","billRegion","searchRights","newDemographicRights","messageRights","getDashboardMenu","menus","dashboardMenu","getNavBar","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","getUnAckLabDocCount","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","new_value","isTypeaheadSearchQuery","moreResults","goToPatientSearch","searchQuery","goToPatientRecord","getUnreadCount","onPatientSearch","transition","newWindow","wname","qs","openNewWindow","openMessenger","changeProgram","programId","setCurrentProgram","smallNavItemFilter","setUser","directive","restrict","require","link","scope","attrs","ctrl","$formatters","pad_length","caZeroPad","$parsers","on","e","$parse","scrollHandler","resizeHandler","modelSetter","fileModel","bind","$apply","files","$compile","$eval","compileHtml","jsp","contents","$document","eventName","attribute","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","scrollLeft","update_search_results_footer","offset","top","ngModel","toolbar","container","image-tooltip","link-tooltip","theme","extraOptions","quill","extend","Quill","children","$render","source","getHTML","$setViewValue","setHTML","$viewValue","pagination","change_page_callback","mode","change_page","page_number","current_page","total_pages","expand_ellipsis","go_to_page_num","close_ellipsis","go_to_page","page_int","key_combo","key_bind_settings","hierarchy","parents","each","attributes","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","field_value_map","success_message","field_value_map_label_key","displayFieldErrors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","has_sub_errors","isString","isObject","error_link_has_function","error_link","error_links","execute_error_link_fn","should_display_field_errors","has_field_errors","attr","field_controllers","field","ignore","ignore_focus_field","form_nav","focus_field","helper","default_scope","true_text","false_text","true_value","false_value","resolve_template","default_link_function","default_controller","minute_step","picker_container","toggle_widget","minuteStep","icons","up","down","rows","max_characters","old_value","error_message","include_empty_option","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","change_fn","merge_title_messages","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","on_focus","open_date_picker","focus_fn","on_click","new_is_multi_date","on_focus_fn","input_box","caDatePickerId","dropdown","footer","replaceWith","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","ngModelController","text","tempValue","parseFloat","toFixed","currencyFilter","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","global_state","autocomplete","results_factory","min_length_zero_types","placeholder","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","ca_exclude_list","search_field","keys","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","input_placeholder","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","$item","$model","$label","create_on_not_found_fn","temp_model","on_change","build_model_object","on_blur","model_on_focus","blur_fn","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","in_list","ii","exclude_item","value_field","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","disabled","momentDate","addCustomAttr","fnDisableIfTrue","locals","expElements","attrToWatch","constant","$locale","sources","extraEventSignature","calendarWatchEvent","noop","eventSerialId","eventFingerprint","_id","extraSignature","isMoment","unix","allDay","className","sourceSerialId","sourceEventsSerialId","sourceFingerprint","fp","__id","allEvents","arraySources","srcLen","extEvent","eI","changeWatcher","arraySource","tokenFn","getTokens","token","el","array","subtractAsSets","a","b","inB","subscribe","onArrayChanged","newTokens","oldTokens","replacedTokens","removedTokens","removedToken","newToken","onRemoved","onChanged","addedTokens","onAdded","applyChanges","getFullCalendarConfig","calendarSettings","functionToWrap","$root","$$phase","arguments","args","getLocaleConfig","fullCalendarConfig","lang","useNgLocale","tValues","r","dtf","DATETIME_FORMATS","monthNames","MONTH","monthNamesShort","SHORTMONTH","dayNames","DAY","dayNamesShort","SHORTDAY","elm","sourcesChanged","eventSourcesWatcher","eventsWatcher","destroyCalendar","initCalendar","stick","clientEvents","clientEvent","uiCalendar","localeFullCalendarConfig","options2","o","elem","draggable","axis","containment","__webpack_require__","resizable","handles","minHeight","minWidth","maxWidth","innerWidth","maxHeight","innerHeight","evt","newHeight","showIcon","disableInput","openDatepicker","typeaheadHelper","defaultTypeaheadScope","initTypeahead","forceSelection","findMatches","formatMatchSelection","typeaheadLabel","optionsTemplateUrl","quickSearch","matches","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","searchField","typeaheadModelOptions","debounce","default","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","onSelect","onBlur","onChange","createDummySelection","onSearch","onAdd","slice","wordwise","tail","substr","lastspace","years","months","days","junoHttp","apiPath","ServiceHelper","configHeaders","searchSpecialists","itemsToReturn","getDisplayProperties","ticklerIds","limit","getPreference","defaultValue","put","getRiskFactors","langs","reasons","questions","levels","u","configHeadersWithCache","listOfItems","isAllowedAccessToPatientRecord","hasOneOfPermissions","permission_array","permission","getSchedulesForCalendar","results_hash","meta_hash","results_object","has_results","error_type","util","equals","per_page","searchText","searchMode","getByType","getSettings","healthCardNo","versionCode","numberToReturn","noteConfig","getNoteExt","ticklerId","noteUUID","userId","transferObj","commentItem","commentId","global_settings","interface_preferences","scheduler_license_key","heading","getAllEncounterForms","getAllEForms","getGroupNames","selector","first_form_input","first","first_error_input","opts","first_alert","scroll_offset","form_group_class","label_size","input_size","text_length","hide_label_colon","hint","tab_index","warning_message","depends_on_field","depends_on_value","hide","base_default_template","title_array","title_string","$element","$attrs","isEnabled","getAccountSettings","transfer","accountId","getParams","errorsHash","DisplayMessages","getQuickLists","disease","issueToSend","jsonData","listType","contactCategory","getRequest","requestId","followUpDate","getNewRequest","request","getResponse","responseId","getReferralPathwaysByService","serviceName","getUniqueServiceTypes","errorsz","init_autocomplete_values","autocomplete_values","formatDemographic","full_name","birth_date","health_number","phone_number_primary","defaultParams","initSearchParameters","fieldName","outParams","http_util","request_hash","success_function","errors_function","progress","request_result","call","mergeHash","$stateProvider","$urlRouterProvider","otherwise","dynamic","arrayOfDocs","sort","doc1","doc2","Accept","cache","datetime_format","time_format","dayofweek_format","object","pad0","getDateMoment","date_string","utc","getTimeMoment","time_string","year_string","month_string","day_string","dateString","timeString","datetime_string","fieldDisplayName","required","line","mssg","currDate","baseHash","toMerge","objectArrayIndexOf","property","len","string","str","entityMap","&","<",">","\"","'","/","messages_hash","display_field_errors","field_errors_label_map","field_errors_label_map_key","extra_info","saving_message","force_field_error_arrays","merge","display_messages","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","standard_errors","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","prepend_label","has_one_of_field_error","has_field_error","has_indexed_field_error","field_error_string","concat_string","remove_field_error","has_error_links","add_error_link","out_field_errors","merge_messages","merge_display_messages","standard_infos","popup2","w","getElementsByTagName","clientWidth","clientHeight","winRefs","resizeTo","confirmNGo","showHideItem","display","showItem","hideItem","validDate","validDateText","completeRawDate","delimiter","dateArray","dateObject","validDateFieldsByClass","parentEle","datefields","getElementsByClassName","getMouseCoords","posx","posy","pageX","pageY","clientX","clientY","documentElement","master","chkList","oscarLog","grabEnter","callb","which","eval","isNumericInt","sText","chara","isNumeric","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","arrReturnElements","oAttributeValue","getAttribute"],"mappings":"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","file":"bundle.e6fc9c575dc828cd5801.js","sourcesContent":["/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param year \n     * @param month \n     * @param providerNo \n     */\n    public fetchMonthlyData (year: number, month: number, providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/fetchMonthly/{providerNo}/{year}/{month}'\n            .replace('{' + 'year' + '}', encodeURIComponent(String(year)))\n            .replace('{' + 'month' + '}', encodeURIComponent(String(month)))\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'year' is not null or undefined\n        if (year === null || year === undefined) {\n            throw new Error('Required parameter year was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'month' is not null or undefined\n        if (month === null || month === undefined) {\n            throw new Error('Required parameter month was null or undefined when calling fetchMonthlyData.');\n        }\n\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling fetchMonthlyData.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param demographicNo \n     */\n    public findExistAppointments (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling findExistAppointments.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentTo1 \n     */\n    public getAppointment (appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/getAppointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param date \n     */\n    public getAppointmentsForDay (providerNo: string, date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/{providerNo}/day/{date}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay1 (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponsePatientListApptBean> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay1.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerId \n     * @param startDate \n     * @param endDate \n     * @param site \n     */\n    public getCalendarEvents (providerId: number, startDate?: string, endDate?: string, site?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarEvent> {\n        const localVarPath = this.basePath + '/schedule/calendar/{providerId}'\n            .replace('{' + 'providerId' + '}', encodeURIComponent(String(providerId)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerId' is not null or undefined\n        if (providerId === null || providerId === undefined) {\n            throw new Error('Required parameter providerId was null or undefined when calling getCalendarEvents.');\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentStatus (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateStatus'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param id \n     * @param appointmentTo1 \n     */\n    public updateAppointmentType (id: number, appointmentTo1?: models.AppointmentTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/appointment/{id}/updateType'\n            .replace('{' + 'id' + '}', encodeURIComponent(String(id)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateAppointmentType.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: appointmentTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class AppointmentApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public addAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public deleteAppointment (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseInteger> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling deleteAppointment.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'DELETE',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public setNextStatus (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/rotate_status'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling setNextStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public updateAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t$scope.ospInfo = {\n\t\t\tname: 'OscarHost.ca',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Oscarhost Support',\n\t\t\temail: 'support@oscarhost.ca',\n\t\t\turl: 'https://help.oscarhost.ca'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: '15-Beta',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Help', []);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function(data)\n\t\t\t{\n\t\t\t\talert('saved');\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Report').controller('Report.ReportSHMentalHealthController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run sh mental health report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/StreetHealthIntakeReportAction.do?startDate=' + startDate;\n\t\t\twindow.open(url, 'report_sh', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportRegistrationIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run registration intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=quick&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_registration_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportFollowUpIntakeController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tincludePastForms: true\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run follow up intake report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../PMmodule/GenericIntake/Report.do?method=report&type=indepth&startDate=' + startDate + '&endDate=' + endDate + '&includePast=' + controller.params.includePastForms;\n\t\t\twindow.open(url, 'report_followup_intake', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: new Date(),\n\t\t\t\tendDate: new Date(),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: new Date()\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'General Forms',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/ClientManager.do?method=getGeneralFormsReport'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Registration Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_registration_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Follow-up Intake',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_followup_intake.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Activity Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../PMmodule/Reports/ProgramActivityReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UCF Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../SurveyManager.do?method=reportForm'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SH Mental Health Report',\n\t\t\t\tgroup: 'CAISI',\n\t\t\t\ttemplateUrl: 'src/report/report_sh_mental_health.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\t\t\t}\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, ((page - 1) * count), count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.content);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === \"DOB\")\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = 'Name';\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: \"all\",\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === \"DOB\") ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Inbox', []);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tcontroller.consult = consult;\n\t\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\n\t\t\t\t\t//set default letterhead\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//show referringDoctor in list\n\t\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t\t{\n\t\t\t\tif(consult.referringDoctor !== null)\n\t\t\t\t{\n\t\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set patient cell phone\n\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1px;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ', ' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\t//set demographic info\n\t\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t\t//set cell phone\n\t\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//set specialist list\n\t\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tangular.forEach(controller.specialists, function(spec)\n\t\t\t{\n\t\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = 0;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\t\t\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar valid = true;\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (controller.invalidData())\n\t\t\t{\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif(valid)\n\t\t\t{\n\t\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\t\tcontroller.setAppointmentTime();\n\n\t\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.id == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(results.id);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(\n\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.setESendEnabled();\n\t\t\t\t\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\t\t\t\t\tcontroller.consultChanged = 0; //reset change count\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdeferred.reject(\"Invalid\");\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\")\n\t\t\t{\n\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$location.path(\"/consults\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndFax = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tvar demographicNo = consult.demographicId;\n\t\t\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\n\t\t\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&fax=\" + fax);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.print(reqId);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.print = function print(reqId)\n\t\t{\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + reqId + \"&demographicNo=\" + consult.demographicId);\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.content[x].demographicNo,\n\t\t\t\t\t\t\tname: response.content[x].lastName + ', ' + response.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar refDate = moment(consult.referralDate).toDate();\n\t\t\t\t\t\t\t\trefDate.setMonth(refDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= refDate)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.outstanding = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxSendReceiveController', [\n\t'NgTableParams',\n\t'providerService',\n\t\"faxAccountService\",\n\t\"faxInboundService\",\n\t\"faxOutboundService\",\n\tfunction (NgTableParams,\n\t          providerService,\n\t          faxAccountService,\n\t          faxInboundService,\n\t          faxOutboundService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.systemStatusEnum = Object.freeze({\"sent\":\"SENT\", \"queued\":\"QUEUED\", \"error\":\"ERROR\"});\n\t\tcontroller.tabEnum = Object.freeze({\"inbox\":0, \"outbox\":1});\n\t\tcontroller.activeTab = controller.tabEnum.outbox;\n\t\tcontroller.loggedInProviderNo = null;\n\n\t\tcontroller.nextPullTime = null;\n\t\tcontroller.nextPushTime = null;\n\n\t\tcontroller.selectedFaxAccount = null;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.outboxItemList = [];\n\t\tcontroller.inboxItemList = [];\n\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.inbox =\n\t\t{\n\t\t\tsearch: {\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting: {\n\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tstartDate: null,\n\t\t\tendDate: null\n\t\t};\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.outbox =\n\t\t\t{\n\t\t\t\tsearch: {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tcount: 10,\n\t\t\t\t\tsorting: {\n\t\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstartDate: null,\n\t\t\t\tendDate: null\n\t\t\t};\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t\tif(controller.faxAccountList.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.selectedFaxAccount = controller.faxAccountList[0];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.loadOutboxItems = function()\n\t\t{\n\t\t\tcontroller.tableParamsOutbox = new NgTableParams(\n\t\t\t\tcontroller.outbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.outbox.search = params.url();\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.outbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.outbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.outbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.outbox.endDate),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getOutbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.outboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsOutbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.outboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load outbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t};\n\n\t\tcontroller.loadInboxItems = function ()\n\t\t{\n\t\t\tcontroller.tableParamsInbox = new NgTableParams(\n\t\t\t\tcontroller.inbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function (params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.inbox.search = params.url();\n\t\t\t\t\t\tconsole.info(controller.inbox);\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.inbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.inbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.inbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.inbox.endDate),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getInbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.inboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsInbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.inboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load inbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.resendFax = function(outboxItem)\n\t\t{\n\t\t\toutboxItem.systemStatus = 'RESEND';\n\t\t\tfaxOutboundService.resendOutboundFax(outboxItem.id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tangular.copy(response, outboxItem);\n\t\t\t\t\tconsole.info(outboxItem);\n\t\t\t\t\tif(outboxItem.systemStatus === controller.systemStatusEnum.error)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(outboxItem.systemStatusMessage);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\toutboxItem.systemStatus = controller.systemStatusEnum.error;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadNextPullTime = function()\n\t\t{\n\t\t\tfaxInboundService.getNextPullTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.loadNextPushTime = function()\n\t\t{\n\t\t\tfaxOutboundService.getNextPushTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.changeTab = function(tabId)\n\t\t{\n\t\t\tcontroller.activeTab = tabId;\n\t\t};\n\n\t\tcontroller.openDocument = function(documentId)\n\t\t{\n\t\t\tlet openDocumentWindow = function()\n\t\t\t{\n\t\t\t\tlet url = \"../dms/showDocument.jsp\";\n\t\t\t\tlet params = \"segmentID=\"+documentId+\"&providerNo=\"+ controller.loggedInProviderNo + \"&status=A&inWindow=true&chartView&demoName=\";\n\t\t\t\tlet windowName = \"ShowDocument\" + documentId;\n\t\t\t\twindow.open(url + \"?\" + params, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t\t};\n\n\t\t\t// if the current provider number is unknown, retrieve it before opening the new window.\n\t\t\tif(controller.loggedInProviderNo == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProviderNo = response.providerNo;\n\t\t\t\t\t\topenDocumentWindow();\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\topenDocumentWindow();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewDownloadFile = function(outboundId)\n\t\t{\n\t\t\tlet url = faxOutboundService.getDownloadUrl(outboundId);\n\t\t\tlet windowName = \"ViewFaxFile\" + outboundId;\n\t\t\twindow.open(url, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t};\n\n\t\tcontroller.formatOptionalDateParam = function(dateObj)\n\t\t{\n\t\t\treturn Juno.Common.Util.isUndefinedOrNull(dateObj)? null : moment(dateObj).format('YYYY-MM-DD')\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationEditController', [\n\t\"$uibModal\",\n\t\"$uibModalInstance\",\n\t\"faxAccountService\",\n\t\"faxAccount\",\n\t\"masterFaxEnabledInbound\",\n\t\"masterFaxEnabledOutbound\",\n\tfunction ($uibModal,\n\t          $uibModalInstance,\n\t          faxAccountService,\n\t          faxAccount,\n\t          masterFaxEnabledInbound,\n\t          masterFaxEnabledOutbound)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.connectionStatusEnum = Object.freeze({\"unknown\":1, \"success\":2, \"failure\":3});\n\t\tcontroller.coverLetterOptions = [\n\t\t\t\"None\",\n\t\t\t\"Basic\",\n\t\t\t\"Standard\",\n\t\t\t\"Company\",\n\t\t\t\"Personal\"\n\t\t];\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = angular.copy(faxAccount);\n\t\t\t\tif(!controller.faxAccount.connectionStatus)\n\t\t\t\t{\n\t\t\t\t\tcontroller.setDefaultConnectionStatus();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tenableInbound: false,\n\t\t\t\t\tenableOutbound: false,\n\t\t\t\t\taccountLogin: null,\n\t\t\t\t\taccountEmail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tdisplayName: '',\n\t\t\t\t\tcoverLetterOption: '',\n\t\t\t\t\tfaxNumber: '',\n\t\t\t\t\tconnectionStatus: controller.connectionStatusEnum.unknown\n\t\t\t\t};\n\t\t\t}\n\t\t\t// get the master flag status for inbound/outbound settings\n\t\t\tcontroller.masterFaxEnabledInbound = masterFaxEnabledInbound;\n\t\t\tcontroller.masterFaxEnabledOutbound = masterFaxEnabledOutbound;\n\n\t\t\t// switch off settings that are disabled and un-editable.\n\t\t\t// if this is not done, form errors may prevent saving changes to other section\n\t\t\tif(!controller.masterFaxEnabledInbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableInbound = false;\n\t\t\t}\n\t\t\tif(!controller.masterFaxEnabledOutbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableOutbound = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveSettings = function (form)\n\t\t{\n\t\t\tif(!form.$valid)\n\t\t\t{\n\t\t\t\talert(\"The form contains errors\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet closeSuccess = function(updatedAccount)\n\t\t\t{\n\t\t\t\t// keep these settings\n\t\t\t\tupdatedAccount.connectionStatus = controller.faxAccount.connectionStatus;\n\t\t\t\t$uibModalInstance.close(updatedAccount);\n\t\t\t};\n\t\t\tlet closeError = function(error)\n\t\t\t{\n\t\t\t\tconsole.error(error);\n\t\t\t};\n\n\t\t\tif (controller.faxAccount.id)\n\t\t\t{\n\t\t\t\tfaxAccountService.updateAccountSettings(controller.faxAccount.id, controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfaxAccountService.addAccountSettings(controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t};\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.testConnection = function()\n\t\t{\n\t\t\tfaxAccountService.testConnection(controller.faxAccount).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tif(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.success;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.failure;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t\tcontroller.setDefaultConnectionStatus = function()\n\t\t{\n\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationController', [\n\t\"$uibModal\",\n\t\"faxAccountService\",\n\t\"providerService\",\n\t\"systemPreferenceService\",\n\tfunction ($uibModal,\n\t          faxAccountService,\n\t          providerService,\n\t          systemPreferenceService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.loggedInProvider = null;\n\t\tcontroller.masterFaxDisabled = true;\n\t\tcontroller.masterFaxEnabledInbound = false;\n\t\tcontroller.masterFaxEnabledOutbound = false;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t// if the current provider number is unknown, retrieve it.\n\t\t\tif(controller.loggedInProvider == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProvider = response;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledInbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledOutbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\n\t\tcontroller.editNewFaxAccount = function editNewFaxAccount()\n\t\t{\n\t\t\tcontroller.editFaxAccount();\n\t\t};\n\t\tcontroller.editFaxAccount = function editFaxAccount(faxAccount)\n\t\t{\n\t\t\tlet isNewAcct = true;\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tisNewAcct = false;\n\t\t\t}\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfigurationEdit.jsp',\n\t\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationEditController as faxConfigEditController',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: 'faxEditModal',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfaxAccount: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn faxAccount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledInbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledInbound;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledOutbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledOutbound;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\t// the object passed back on closing\n\t\t\t\tfunction success(updatedAccount)\n\t\t\t\t{\n\t\t\t\t\tif(isNewAcct)\n\t\t\t\t\t{\n\t\t\t\t\t\t// new accounts get added to the account list\n\t\t\t\t\t\tcontroller.faxAccountList.push(updatedAccount);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// clear the existing properties and replace with the updated ones\n\t\t\t\t\t\tangular.copy(updatedAccount, faxAccount);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t// do nothing on dismissal\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.saveMasterFaxEnabledStateInbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\t\tcontroller.saveMasterFaxEnabledStateOutbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\n\t\tcontroller.updateMasterFaxDisabledStatus = function updateMasterFaxDisabledStatus()\n\t\t{\n\t\t\tcontroller.masterFaxDisabled = !controller.masterFaxEnabledInbound && !controller.masterFaxEnabledOutbound;\n\t\t};\n\t\tcontroller.setSystemProperty = function setSystemProperty(key, value)\n\t\t{\n\t\t\tsystemPreferenceService.setPreference(key, value).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","'use strict';\n\nangular.module('Admin.Integration.Fax', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","angular.module('oscarProviderViewModule').controller('AdminCtrl', ['$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","angular.module('Schedule').controller('Schedule.AppointmentViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'appointment',\n\t'statusList',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tappointment,\n\t\tstatusList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.me = me;\n\t\tcontroller.appointment = appointment;\n\t\tcontroller.statusList = statusList.content;\n\t\tcontroller.appointmentUpdate = {};\n\n\t\tcontroller.appointmentWriteAccess = false;\n\n\t\tcontroller.getStatus = function getStatus(status)\n\t\t{\n\n\t\t\tfor (var x = 0; x < controller.statusList.length; x++)\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(controller.statusList[x]));\n\t\t\t\tif (controller.statusList[x].status == status)\n\t\t\t\t{\n\t\t\t\t\treturn controller.statusList[x].description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn status;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.deleteAppointment = function deleteAppointment()\n\t\t{\n\t\t\tif (confirm('Are you sure you want to delete this appointment?'))\n\t\t\t{\n\t\t\t\tscheduleService.deleteAppointment(controller.appointment.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\n\n\t\tcontroller.editProvider = function editProvider()\n\t\t{\n\t\t\tcontroller.showProviderFormControl = true;\n\t\t\tcontroller.appointmentUpdate.providerNo = controller.appointment.providerNo;\n\t\t\tcontroller.appointmentUpdate.providerName = controller.appointment.provider.lastName + \",\" + controller.appointment.provider.lastName;\n\t\t};\n\n\t\tcontroller.updateProvider = function updateProvider(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t\tcontroller.showProviderFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelProviderUpdate = function cancelProviderUpdate()\n\t\t{\n\t\t\tcontroller.appointmentUpdate.providerNo = null;\n\t\t\tcontroller.appointmentUpdate.providerName = null;\n\n\t\t\tcontroller.showProviderFormControl = false;\n\n\t\t};\n\n\t\tcontroller.showAppointmentHistory = function showAppointmentHistory()\n\t\t{\n\t\t\tscheduleService.appointmentHistory(controller.appointment.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\talert(JSON.stringify(results));\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.noShowAppointment = function noShowAppointment()\n\t\t{\n\t\t\tscheduleService.noShowAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.cancelAppointment = function cancelAppointment()\n\t\t{\n\t\t\tscheduleService.cancelAppointment(controller.appointment.id).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t}\n]);","angular.module('Schedule').controller('Schedule.AppointmentAddController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'demographicService',\n\t'demographicsService',\n\t'me',\n\t'providerService',\n\t'scheduleService',\n\t'apptDate',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tme,\n\t\tproviderService,\n\t\tscheduleService,\n\t\tapptDate)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.types = [];\n\n\t\tcontroller.urgencies = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: 'Normal'\n\t\t},\n\t\t{\n\t\t\tvalue: 'critical',\n\t\t\tlabel: 'Critical'\n\t\t}];\n\n\t\tcontroller.me = me;\n\n\t\tcontroller.appointment = {\n\t\t\tstatus: 't',\n\t\t\tappointmentDate: $filter('date')(apptDate, 'yyyy-MM-dd'),\n\t\t\tstartTime: '09:00 AM',\n\t\t\ttype: '',\n\t\t\tduration: 15,\n\t\t\tproviderName: me.formattedName,\n\t\t\tproviderNo: me.providerNo,\n\t\t\treason: '',\n\t\t\tnotes: '',\n\t\t\tlocation: '',\n\t\t\tresources: '',\n\t\t\tcritical: ''\n\t\t};\n\n\t\tscheduleService.getTypes().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.types = results.types;\n\t\t\t\tcontroller.types.unshift(\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tduration: 15,\n\t\t\t\t\tlocation: '',\n\t\t\t\t\tnotes: '',\n\t\t\t\t\treason: '',\n\t\t\t\t\tresources: ''\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.selectType = function selectType()\n\t\t{\n\t\t\tvar type = null;\n\n\t\t\tfor (var x = 0; x < controller.types.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.types[x].name == controller.appointment.type)\n\t\t\t\t{\n\t\t\t\t\ttype = controller.types[x];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type != null)\n\t\t\t{\n\t\t\t\tcontroller.appointment.duration = type.duration;\n\t\t\t\tcontroller.appointment.location = type.location;\n\t\t\t\tcontroller.appointment.notes = type.notes;\n\t\t\t\tcontroller.appointment.reason = type.reason;\n\t\t\t\tcontroller.appointment.resources = type.resources;\n\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.validate = function validate()\n\t\t{\n\t\t\tvar t = controller.appointment;\n\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.providerNo == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a provider');\n\t\t\t}\n\t\t\tif (t.startTime == null || t.startTime.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\t\t\tif (t.duration == null || t.duration.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('start time is required');\n\t\t\t}\n\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar x = {};\n\t\t\tx.status = controller.appointment.status;\n\t\t\tx.appointmentDate = controller.appointment.appointmentDate;\n\t\t\tx.startTime12hWithMedian = controller.appointment.startTime;\n\t\t\tx.type = controller.appointment.type;\n\t\t\tx.duration = controller.appointment.duration;\n\t\t\tx.providerNo = controller.appointment.providerNo;\n\t\t\tx.reason = controller.appointment.reason;\n\t\t\tx.notes = controller.appointment.notes;\n\t\t\tx.location = controller.appointment.location;\n\t\t\tx.resources = controller.appointment.resources;\n\t\t\tx.urgency = controller.appointment.critical;\n\t\t\tx.demographicNo = controller.appointment.demographicNo;\n\n\t\t\t// TODO: make sure this works with the updated backend service (response changed)\n\t\t\tconsole.log(JSON.stringify(x));\n\t\t\tscheduleService.addAppointment(x).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\n\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.appointment.demographicNo = results.demographicNo;\n\t\t\t\t\tcontroller.appointment.demographicName = '';\n\t\t\t\t\tcontroller.appointment.demographic = results;\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tactive: true,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.appointment.providerNo = model;\n\t\t\tcontroller.appointment.providerName = label;\n\t\t};\n\t}\n]);","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nangular.module('Schedule').controller('Schedule.EventController', [\n\n\t\t'$scope',\n\t\t'$q',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModal',\n\t\t'$uibModalInstance',\n\n\t\t'errorsService',\n\n\t\t'demographicService',\n\t\t'securityService',\n\t\t'keyBinding',\n\t\t'focus',\n\t\t'type', 'parentScope', 'label', 'editMode', 'data',\n\n\tfunction (\n\t\t$scope, $q, $timeout, $state, $uibModal, $uibModalInstance,\n\n\t\tmessagesFactory,\n\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tkeyBinding,\n\t\tfocus,\n\t\ttype, parentScope, label, editMode, data\n\t)\n{\n\t$scope.parentScope = parentScope;\n\n\n\t//=========================================================================\n\t// Access Control\n\t//=========================================================================/\n\n\n\t//=========================================================================\n\t// Local scope variables\n\t//=========================================================================/\n\n\t$scope.label = label;\n\t$scope.editMode = editMode;\n\n\t$scope.keyBinding = keyBinding;\n\t$scope.eventUuid = null;\n\n\t$scope.schedule = data.schedule;\n\n\t$scope.eventData = {\n\t\tstartDate: null,\n\t\tstartTime: null,\n\t\tendDate: null,\n\t\tendTime: null,\n\t\treason: null,\n\t\tnotes: null\n\t};\n\n\t$scope.timeInterval = data.timeInterval;\n\n\t$scope.lastEventLength = null;\n\n\t$scope.patientTypeahead = {};\n\t$scope.autocompleteValues = {};\n\n\t$scope.activeTemplateEvents = [];\n\n\t$scope.eventStatuses = $scope.parentScope.eventStatuses;\n\t$scope.eventStatusOptions = [];\n\t$scope.selectedEventStatus = null;\n\t$scope.defaultEventStatus = null;\n\n\t$scope.selectedSiteName = null;\n\n\t$scope.timepickerFormat = \"h:mm A\";\n\n\t$scope.fieldValueMapping = {\n\t\tstartDate: 'Start Date',\n\t\tstartTime: 'Start Time',\n\t\tendDate: 'End Date',\n\t\tendTime: 'End Time'\n\t};\n\t$scope.displayMessages = messagesFactory.factory();\n\n\t$scope.initialized = false;\n\t$scope.working = false;\n\n\t$scope.demographicModel = {\n\t\tdemographicNo: null,\n\t\tfullName: null,\n\t\thasPhoto: true,\n\t\tpatientPhotoUrl: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\tdata: {\n\t\t\tbirthDate: null,\n\t\t\thealthNumber: null,\n\t\t\tontarioVersionCode: null,\n\t\t\tphoneNumberPrimary: null\n\t\t},\n\t\tclear: function clear()\n\t\t{\n\t\t\tthis.demographicNo = null;\n\t\t\tthis.fullName = null;\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=0';\n\t\t\tthis.data.birthDate = null;\n\t\t\tthis.data.healthNumber = null;\n\t\t\tthis.data.ontarioVersionCode = null;\n\t\t\tthis.data.phoneNumberPrimary = null;\n\t\t},\n\t\tfillData: function fillData(data)\n\t\t{\n\t\t\tthis.demographicNo = data.demographicNo;\n\t\t\tthis.fullName = Juno.Common.Util.formatName(data.firstName, data.lastName);\n\t\t\tthis.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=' + (data.demographicNo? data.demographicNo: 0);\n\n\t\t\tvar dateOfBirth = null;\n\t\t\tif(Juno.Common.Util.exists(data.dob))\n\t\t\t{\n\t\t\t\t// XXX: Perhaps put this in util?  Is this date format common for juno?\n\t\t\t\tdateOfBirth = moment(data.dob, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdateOfBirth = Juno.Common.Util.getDateMomentFromComponents(\n\t\t\t\t\tdata.dobYear, data.dobMonth, data.dobDay);\n\t\t\t}\n\t\t\tthis.data.birthDate = Juno.Common.Util.formatMomentDate(dateOfBirth);\n\n\n\t\t\tthis.data.healthNumber = data.hin;\n\t\t\t// XXX: no version code when loaded from autocomplete?  Does that matter?\n\t\t\tthis.data.ontarioVersionCode = data.ver;\n\t\t\tthis.data.phoneNumberPrimary = data.phone;\n\t\t},\n\t\tuploadPhoto: function uploadPhoto(file){}\n\t};\n\n\t//=========================================================================\n\t// Init\n\t//=========================================================================/\n\n\t$scope.init = function init()\n\t{\n\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t{\n\t\t\t$timeout(function ()\n\t\t\t{\n\t\t\t\t$scope.cancel();\n\t\t\t});\n\t\t}\n\n\t\t$scope.demographicModel.clear();\n\n\t\tvar momentStart = data.startTime;\n\t\tvar momentEnd = data.endTime;\n\n\t\t$scope.eventData.startTime = Juno.Common.Util.formatMomentTime(momentStart, $scope.timepickerFormat);\n\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t$scope.eventData.startDate = Juno.Common.Util.formatMomentDate(momentStart);\n\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\n\t\t$scope.lastEventLength = momentEnd.diff(momentStart, 'minutes');\n\n\t\t// maintain a list of the 'active' templates based on start time\n\t\t$scope.setActiveTemplateEvents();\n\n\t\t//$scope.eventStatusOptions.push(\"\");\n\t\tfor(var key in $scope.eventStatuses)\n\t\t{\n\t\t\tif($scope.eventStatuses.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t$scope.eventStatusOptions.push($scope.eventStatuses[key]);\n\t\t\t}\n\t\t}\n\t\t$scope.defaultEventStatus = data.defaultEventStatus;\n\t\t$scope.setSelectedEventStatus(data.eventData.eventStatusCode);\n\n\n\t\tif(editMode)\n\t\t{\n\t\t\t$scope.eventUuid = data.eventData.appointmentNo;\n\t\t\t$scope.eventData.reason = data.eventData.reason;\n\t\t\t$scope.eventData.notes = data.eventData.notes;\n\n\t\t\t// either load the patient data and init the autocomplete\n\t\t\t// or ensure the patient model is clear\n\t\t\t$scope.initPatientAutocomplete(data.eventData.demographicNo).then(function() {\n\t\t\t\t$scope.initialized = true;\n\t\t\t});\n\t\t\t$scope.selectedSiteName = data.eventData.site;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create mode: adjust the end date (if needed)\n\t\t\t// and clear the patient model\n\t\t\t$scope.adjustEndDatetime();\n\t\t\t$scope.demographicModel.clear();\n\n\t\t\t// autofocus the patient field\n\t\t\tfocus.element(\"#input-patient\");\n\n\t\t\t$scope.initialized = true;\n\t\t}\n\t};\n\n\t$scope.initPatientAutocomplete = function initPatientAutocomplete(demographicNo)\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tif(Juno.Common.Util.exists(demographicNo) && demographicNo != 0)\n\t\t{\n\t\t\tdemographicService.getDemographic(demographicNo).then(function(data)\n\t\t\t{\n\t\t\t\t$scope.patientTypeahead = data;\n\t\t\t\tdeferred.resolve();\n\t\t\t},\n\t\t\tfunction(errors)\n\t\t\t{\n\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t$scope.demographicModel.clear();\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.demographicModel.clear();\n\t\t\tdeferred.resolve();\n\t\t}\n\n\t\treturn deferred.promise;\n\t};\n\n\n\t//=========================================================================\n\t// Private methods\n\t//=========================================================================/\n\n\t$scope.setSelectedEventStatus = function setSelectedEventStatus(selectedCode)\n\t{\n\t\tvar eventStatusCode = $scope.defaultEventStatus;\n\n\t\tif(Juno.Common.Util.exists(selectedCode))\n\t\t{\n\t\t\teventStatusCode = selectedCode;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists(eventStatusCode) ||\n\t\t\t!Juno.Common.Util.exists($scope.eventStatuses[eventStatusCode]))\n\t\t{\n\t\t\t// if not set or found just pick the first one\n\t\t\teventStatusCode = $scope.eventStatusOptions[0].displayLetter;\n\t\t}\n\n\t\t$scope.selectedEventStatus = $scope.eventStatuses[eventStatusCode];\n\t};\n\n\t// Make a list of the types of appointments available for this appointment\n\t$scope.setActiveTemplateEvents = function setActiveTemplateEvents()\n\t{\n\t\t// Get templates that happen during the time period\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tvar activeEvents = [];\n\n\t\t// Loop through the events for this day\n\t\tfor(var i = 0; i < data.events.length; i++)\n\t\t{\n\t\t\tif(data.events[i].rendering != \"background\" || data.events[i].resourceId != $scope.schedule.uuid)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar event = angular.copy(data.events[i]);\n\n\t\t\t// if start time is before event end time or if end time is after event start\n\t\t\tevent.start = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\tevent.end = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\n\t\t\tif(momentStart.isValid() && momentEnd.isValid() &&\n\t\t\t\tevent.start.isValid() && event.end.isValid() &&\n\t\t\t\tmomentStart.isBefore(event.end) && momentEnd.isAfter(event.start))\n\t\t\t{\n\t\t\t\tevent.availabilityType = data.availabilityTypes[event.scheduleTemplateCode];\n\t\t\t\tactiveEvents.push(event);\n\t\t\t}\n\t\t}\n\n\t\t$scope.activeTemplateEvents = activeEvents;\n\t};\n\n\t$scope.adjustEndDatetime = function adjustEndDatetime(lengthMinutes)\n\t{\n\t\t// adjusts the end time to the specified length or\n\t\t// adjusts to keep the event length the same as it last was\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tif(momentStart.isValid())\n\t\t{\n\t\t\tvar newEventLength = Juno.Common.Util.exists(lengthMinutes) ?\n\t\t\t\tlengthMinutes : $scope.lastEventLength;\n\n\t\t\tvar momentEnd = momentStart.add(newEventLength, 'minutes');\n\n\t\t\t$scope.eventData.endDate = Juno.Common.Util.formatMomentDate(momentEnd);\n\t\t\t$scope.eventData.endTime = Juno.Common.Util.formatMomentTime(momentEnd, $scope.timepickerFormat);\n\t\t}\n\t};\n\n\t$scope.updateLastEventLength = function updateLastEventLength()\n\t{\n\t\t// saves the current event length, if the date/times are valid\n\n\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\tvar momentEnd = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\tif(momentStart.isValid() && momentEnd.isValid())\n\t\t{\n\t\t\tvar eventLength = momentEnd.diff(momentStart, 'minutes');\n\t\t\tif(eventLength > 0)\n\t\t\t{\n\t\t\t\t$scope.lastEventLength = eventLength;\n\t\t\t}\n\t\t}\n\t};\n\n\t$scope.validateForm = function validateForm()\n\t{\n\t\t$scope.displayMessages.clear();\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.startDate,\n\t\t\t$scope.displayMessages, 'startDate', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.startTime),\n\t\t\t$scope.displayMessages, 'startTime', 'Start Time', true);\n\n\t\tJuno.Common.Util.validateDateString($scope.eventData.endDate,\n\t\t\t$scope.displayMessages, 'endDate', 'End Time', true);\n\n\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.endTime),\n\t\t\t$scope.displayMessages, 'endTime', 'End Time', true);\n\n\t\t// if all the date/time fields look good, validate range\n\t\tif(!$scope.displayMessages.has_errors())\n\t\t{\n\t\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\t\t\tif(endDatetime.isSame(startDatetime) ||\n\t\t\t\tendDatetime.isBefore(startDatetime))\n\t\t\t{\n\t\t\t\t$scope.displayMessages.addStandardError(\"The appointment must end after it starts\");\n\t\t\t}\n\t\t}\n\n\t\treturn !$scope.displayMessages.has_errors();\n\t};\n\n\t$scope.saveEvent = function saveEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\tvar endDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t$scope.eventData.endDate, $scope.formattedTime($scope.eventData.endTime));\n\n\n\t\tparentScope.saveEvent(\n\t\t\teditMode,\n\t\t\t{\n\t\t\t\tappointmentNo: $scope.eventUuid,\n\t\t\t\tstartTime: startDatetime,\n\t\t\t\tendTime: endDatetime,\n\t\t\t\treason: $scope.eventData.reason,\n\t\t\t\tnotes: $scope.eventData.notes,\n\t\t\t\tproviderNo: $scope.schedule.uuid,\n\t\t\t\teventStatusCode: $scope.selectedEventStatus.displayLetter,\n\t\t\t\tdemographicNo: $scope.demographicModel.demographicNo,\n\t\t\t\tsite: $scope.selectedSiteName\n\t\t\t}\n\t\t).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tif(parentScope.processSaveResults(results, $scope.displayMessages))\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (results)\n\t\t\t{\n\t\t\t\tparentScope.processSaveResults(results, $scope.displayMessages);\n\t\t\t\tdeferred.reject();\n\t\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.deleteEvent = function deleteEvent()\n\t{\n\t\tvar deferred = $q.defer();\n\n\t\tparentScope.deleteEvent($scope.eventUuid).then(function()\n\t\t{\n\t\t\tdeferred.resolve();\n\n\t\t}, function()\n\t\t{\n\t\t\tdeferred.reject();\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\t$scope.formattedTime = function formattedTime(time_str)\n\t{\n\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\treturn time_str.replace(/ /g,'');\n\t};\n\n\t$scope.loadPatientFromTypeahead = function loadPatientFromTypeahead(patientTypeahead)\n\t{\n\t\t$scope.demographicModel.fillData(patientTypeahead);\n\t};\n\n\t//=========================================================================\n\t// Watches\n\t//=========================================================================/\n\n\t// when the start date is changed,\n\t// update the active template events\n\t$scope.$watch('startDate', function(newStartDate, oldStartDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartDate !== oldStartDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the start time is changed,\n\t// update the active template events and adjust the end time\n\t$scope.$watch('startTime', function(newStartTime, oldStartTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newStartTime !== oldStartTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.adjustEndDatetime();\n\t\t}\n\t});\n\n\t// when the end date is changed, track the event length\n\t$scope.$watch('endDate', function(newEndDate, oldEndDate)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndDate !== oldEndDate)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t// when the end time is changed, track the event length\n\t$scope.$watch('endTime', function(newEndTime, oldEndTime)\n\t{\n\t\t// avoid running first time this fires during initialization\n\t\tif(newEndTime !== oldEndTime)\n\t\t{\n\t\t\t$scope.setActiveTemplateEvents();\n\t\t\t$scope.updateLastEventLength();\n\t\t}\n\t});\n\n\t$scope.$watch('patientTypeahead', function()\n\t{\n\t\t$scope.loadPatientFromTypeahead($scope.patientTypeahead);\n\t});\n\n\t//=========================================================================\n\t// Public methods\n\t//=========================================================================/\n\n\t$scope.loadedNewPhoto = function loadedNewPhoto(file, event)\n\t{\n\t\tif(file == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t$scope.preview_patient_image = file;\n\t\t$scope.new_photo = true;\n\t\t$scope.demographicModel.hasPhoto = true;\n\t\t$scope.demographicModel.uploadPhoto(file);\n\t};\n\n\t$scope.isWorking = function isWorking()\n\t{\n\t\treturn $scope.working;\n\t};\n\n\t$scope.isInitialized = function isInitialized()\n\t{\n\t\treturn $scope.initialized;\n\t};\n\n\t$scope.isPatientSelected = function isPatientSelected()\n\t{\n\t\treturn Juno.Common.Util.exists($scope.demographicModel.demographicNo);\n\t};\n\n\t$scope.hasSites = function hasSites()\n\t{\n\t\treturn (parentScope.siteOptions.length > 0)\n\t}\n\n\t$scope.clearPatient = function clearPatient()\n\t{\n\t\t$scope.autocompleteValues.patient = null;\n\t\t$scope.demographicModel.clear();\n\t};\n\n\t$scope.setEventLength = function setEventLength(minutes)\n\t{\n\t\t$scope.adjustEndDatetime(minutes);\n\t};\n\n\t$scope.save = function save()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t\t\t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\tconsole.log($scope.displayMessages.field_errors()['location']);\n\t\t\tif(!$scope.displayMessages.has_standard_errors())\n\t\t\t{\n\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t}\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.del = function del()\n\t{\n\t\t$scope.working = true;\n\t\t$scope.deleteEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.cancel = function cancel()\n\t{\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\n\t$scope.saveAndBill = function saveAndBill()\n\t{\n\t\tif(!$scope.validateForm())\n\t\t{\n\t  \t\treturn false;\n\t\t}\n\n\t\t$scope.working = true;\n\t\t$scope.saveEvent().then(function()\n\t\t{\n\t\t\t$scope.parentScope.refetchEvents();\n\t\t\t$uibModalInstance.close();\n\t\t\t$scope.working = false;\n\t\t\t$scope.parentScope.openCreateInvoice(\n\t\t\t\t$scope.eventUuid,\n\t\t\t\t$scope.schedule.uuid,\n\t\t\t\t$scope.demographicModel.demographicNo);\n\t\t}, function()\n\t\t{\n\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t$scope.working = false;\n\t\t});\n\t};\n\n\t$scope.viewInvoices = function viewInvoices()\n\t{\n\t\t$scope.parentScope.open_view_invoices($scope.eventUuid);\n\t};\n\n\t$scope.createPatient = function createPatient()\n\t{\n\t\tvar editModeCallback = function() { return false; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.create_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t$scope.modify_patient = function modify_patient()\n\t{\n\t\tif(!$scope.demographicModel.demographicNo)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar editModeCallback = function() { return true; };\n\t\tvar onSaveCallback = function() { return $scope.onPatientModalSave; };\n\t\tvar loadErrorLinkPatientFn = function() { return $scope.onPatientModalSave; };\n\n\t\t$scope.modify_patient_dialog = parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t};\n\n\t// for callback on create/edit patient modal\n\t$scope.onPatientModalSave = function onPatientModalSave(demographicNo)\n\t{\n\t\t// load the newly created/updated patient\n\t\t$scope.demographicModel.demographicNo = demographicNo;\n\t\t$scope.initPatientAutocomplete();\n\t};\n\n\t$scope.searchPatients = function searchPatients(term)\n\t{\n\t\tvar search = {\n\t\t\ttype: 'Name',\n\t\t\t'term': term,\n\t\t\tstatus: 'active',\n\t\t\tintegrator: false,\n\t\t\toutofdomain: true\n\t\t};\n\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\tfunction(results)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: Juno.Common.Util.formatName(\n\t\t\t\t\t\t\t\tresults.content[x].firstName, results.content[x].lastName)\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t};\n\n\t$scope.newDemographic = function newDemographic(size)\n\t{\n\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\tmodalInstance.result.then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\n\t\t\t\t$scope.initPatientAutocomplete(results.demographicNo)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tconsole.log($('#myModal'));\n\t};\n\n\n\t//=========================================================================\n\t//  Key Bindings\n\t//=========================================================================\n\n\t$scope.keyBindSettings =\n\t{\n\t\t\"ctrl+enter\": {\n\t\t\ttitle: 'Ctrl+Enter',\n\t\t\ttooltip: 'Save',\n\t\t\tdescription: 'Save appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.save();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t},\n\t\t\"ctrl+shift+enter\": {\n\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\ttooltip: 'Save And Bill',\n\t\t\tdescription: 'Save and bill for appointment',\n\t\t\tcallback_fn: function enter_callback()\n\t\t\t{\n\t\t\t\tif(!$scope.isWorking())\n\t\t\t\t{\n\t\t\t\t\t$scope.saveAndBill();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttarget: null\n\t\t}\n\t};\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+enter\", $scope.keyBindSettings[\"ctrl+enter\"]);\n\t$scope.keyBinding.bindKeyGlobal(\"ctrl+shift+enter\", $scope.keyBindSettings[\"ctrl+shift+enter\"]);\n}]);\n","\nimport {AppointmentApi} from '../../generated/api/AppointmentApi';\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\n\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\t'$stateParams',\n\t'$q',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$uibModal',\n\t'$state',\n\t'focusService',\n\t'scheduleService',\n\t'securityService',\n\t'uiCalendarConfig',\n\n\tfunction(\n\t\t$scope,\n\t\t$stateParams,\n\t\t$q,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$uibModal,\n\t\t$state,\n\t\tfocusService,\n\t\tscheduleService,\n\t\tsecurityService,\n\t\tuiCalendarConfig\n\t)\n\t{\n\t\t//var controller = this;\n\n\t\t// XXX: put this address somewhere else\n\t\t$scope.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.calendarName = 'cpCalendar';\n\t\t$scope.initialized = false;\n\t\t$scope.calendarLoading = false;\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.uiConfigApplied = {};\n\t\t$scope.eventSources = [];\n\t\t$scope.selectedSchedule = null;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.selectedTimeInterval = null;\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in\n\t\t// this object.\n\t\t$scope.cpCalendarControl = {};\n\n\n\t\t// Parameters from directive controller\n\n\n\t\t$scope.schedules = [];\n\t\t$scope.scheduleOptions = [];\n\t\t$scope.resourceOptions = [];\n\t\t$scope.siteOptions = [];\n\t\t$scope.defaultEventColor = \"#333\";\n\t\t$scope.defaultTimeInterval = '00:15:00';\n\t\t$scope.timeIntervalOptions =\n\t\t\t['00:05:00','00:10:00','00:15:00','00:30:00'];\n\t\t$scope.selectedTimeInterval = $scope.defaultTimeInterval;\n\t\t$scope.defaultAutoRefreshMinutes = 3;\n\t\t$scope.defaultCalendarView = 'agendaWeek';\n\t\t$scope.eventStatuses = {};\n\t\t$scope.rotateStatuses = [];\n\t\t$scope.availabilityTypes = {};\n\t\t$scope.resourceOptionHash = {};\n\t\t$scope.events = [];\n\t\t$scope.scheduleTemplates = {};\n\t\t$scope.sites = {};\n\n\t\t$scope.openingDialog = false;\n\t\t$scope.dialog = null;\n\n\n\t\t// Global State parameters\n\t\t$scope.defaultDate = null;\n\t\t$scope.selectedDate = null;\n\t\t$scope.scheduleViewName = null;\n\t\t$scope.scheduleDefault = null;\n\t\t$scope.scheduleTimeInterval = null;\n\t\t$scope.scheduleAutoRefresh = null;\n\t\t$scope.scheduleAutoRefreshMinutes = null;\n\n\t\t$scope.scheduleService = scheduleService;\n\n\n\t\t$scope.init = function init()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\n\t\t\t// XXX: loadScheduleTemplates seems to not be used\n\n\t\t\t//{\n\t\t\t\t$scope.loadAvailabilityTypes().then(function()\n\t\t\t\t{\n\t\t\t\t\t$scope.loadEventStatuses().then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadScheduleOptions().then(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.loadSiteOptions().then(function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.loadDefaultSelections();\n\n\t\t\t\t\t\t\t\t$scope.loadSelectedSchedules().then(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$scope.setCalendarResources();\n\n\t\t\t\t\t\t\t\t\t$scope.setEventSources();\n\n\t\t\t\t\t\t\t\t\t$scope.initEventsAutoRefresh();\n\n\t\t\t\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t\t\t\t\tconsole.log(\"-- Calendar Initialized ----------------------------\");\n\t\t\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t//});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.calendar = function calendar()\n\t\t{\n\t\t\treturn uiCalendarConfig.calendars[$scope.calendarName];\n\t\t};\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.initialized;\n\t\t};\n\n\t\t$scope.hasSchedules = function hasSchedules()\n\t\t{\n\t\t\treturn $scope.schedules.length > 0;\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.siteOptions.length > 0;\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.scheduleOptions;\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\tif(!angular.isDefined($scope.selectedSite) || $scope.selectedSite === null)\n\t\t\t{\n\t\t\t\t$scope.selectedSite = $scope.siteOptions[0];\n\t\t\t}\n\n\t\t\treturn $scope.siteOptions;\n\t\t};\n\n\t\t$scope.viewName = function viewName()\n\t\t{\n\t\t\tvar viewName = $scope.scheduleViewName;\n\n\t\t\tif(!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = $scope.defaultCalendarView;\n\t\t\t}\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t$scope.calendarEvents = function calendarEvents(start, end, timezone, callback)\n\t\t{\n\t\t\t// load the events for each of the loaded schedules\n\t\t\tvar promise_array = [];\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tpromise_array.push(\n\t\t\t\t\t$scope.loadScheduleEvents(\n\t\t\t\t\t\t$scope.schedules[i].uuid, $scope.selectedSiteName, start, end));\n\t\t\t}\n\n\t\t\t// once all the events are loaded, concat them together and callback\n\t\t\t$q.all(promise_array).then(\n\t\t\t\tfunction success(results_array)\n\t\t\t\t{\n\t\t\t\t\t$scope.events = Array.prototype.concat.apply([], results_array);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.viewName() !== 'month';\n\t\t};\n\n\t\t$scope.changeView = function changeView(view)\n\t\t{\n\t\t\t// if switching to or from resourceDay view, need to update schedules\n\t\t\tvar reload_schedules = false;\n\t\t\tif(view === 'resourceDay' || $scope.scheduleViewName === 'resourceDay')\n\t\t\t{\n\t\t\t\treload_schedules = true;\n\t\t\t}\n\n\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t$scope.scheduleViewName = view;\n\n\t\t\tif(reload_schedules)\n\t\t\t{\n\t\t\t\t$scope.loadSelectedSchedules().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.setCalendarResources();\n\t\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.updateCalendarView();\n\t\t\t}\n\t\t};\n\n\t\t$scope.showLegend = function showLegend()\n\t\t{\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar data = {\n\t\t\t\tevent_statuses: $scope.eventStatuses,\n\t\t\t\tavailability_types: $scope.availabilityTypes\n\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcontroller: 'Schedule.LegendController',\n\t\t\t\ttemplateUrl: 'code/schedule/legend.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tdata: function() { return data }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// when the dialog closes clear the variable\n\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t$scope.dialog = null;\n\t\t\t});\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.refetchEvents = function refetchEvents()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t\t};\n\n\t\t$scope.changeDate = function changeDate(date)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('gotoDate', date);\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.viewName() != 'resourceDay')\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tvar selectedUuid = null;\n\t\t\tif($scope.scheduleDefault)\n\t\t\t{\n\t\t\t\tselectedUuid = $scope.scheduleDefault;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t$scope.loadSelectedSchedules = function loadSelectedSchedules()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar promiseArray = [];\n\n\t\t\tif(\n\t\t\t\tJuno.Common.Util.exists($scope.selectedSchedule.providerNos) &&\n\t\t\t\tangular.isArray($scope.selectedSchedule.providerNos)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// TODO: this is really gross and I don't like it\n\t\t\t\t// Potentially put this in the calendarApiAdapter\n\t\t\t\tangular.forEach($scope.selectedSchedule.providerNos, function(providerNo)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(providerNo.toString()));\n\t\t\t\t});\n\n\t\t\t\tif($scope.selectedSchedule.providerNos.length > 1)\n\t\t\t\t{\n\t\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t\t$scope.selectedResources = $scope.buildSelectedResources($scope.selectedSchedule.providerNos);\n\t\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"resourceDay\";\n\n\t\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t\t$scope.scheduleViewName = 'resourceDay';\n\t\t\t\t\t$scope.updateCalendarView();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t\t$scope.uiConfig.calendar.defaultView = \"agendaWeek\";\n\t\t\t\t\t$scope.scheduleViewName = 'agendaWeek';\n\t\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t\t}\n\n\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t}\n\t\t\telse if(\n\t\t\t\t$scope.viewName() !== 'resourceDay' &&\n\t\t\t\t$scope.selectedSchedule !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tpromiseArray.push(\n\t\t\t\t\t$scope.loadSchedule($scope.selectedSchedule.uuid));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tangular.forEach($scope.selectedResources, function(selected)\n\t\t\t\t{\n\t\t\t\t\tpromiseArray.push($scope.loadSchedule(selected.uuid));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Loop through the schedules added above and add them to the schedule list.\n\t\t\t$q.all(promiseArray).then(\n\t\t\t\tfunction success(resultsArray)\n\t\t\t\t{\n\t\t\t\t\t$scope.schedules = [];\n\t\t\t\t\tfor(var i = 0; i < resultsArray.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.schedules[i] = resultsArray[i].data;\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(resultsArray);\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('errors');\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSchedule = function loadSchedule(providerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// TODO: fill up availabilities and relations, or figure out how to show that info without them\n\t\t\tvar schedule = {\n\t\t\t\tuuid: providerId,\n\t\t\t\tavailabilities: [], // TODO: figure out if these have a Juno equivalent, I don't think\n\t\t\t\t\t\t\t\t\t// TODO: they do.  They are things like holidays and vacation days\n\t\t\t\trelations: [],\n\t\t\t\tevents: []\n\t\t\t};\n\n\t\t\tdeferred.resolve({data: schedule});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.updateCalendarView = function updateCalendarView()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.calendarViewName();\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t// This gets the view name, but if it's resourceDay, it will get agendaDay.\n\t\t// TODO Not sure why this works this way.  Maybe it uses it to get a day of events for each\n\t\t//      resource in the resource list?\n\t\t$scope.calendarViewName = function calendarViewName()\n\t\t{\n\t\t\tvar view = $scope.viewName();\n\t\t\tif(view == 'resourceDay')\n\t\t\t{\n\t\t\t\tview = 'agendaDay';\n\t\t\t}\n\t\t\treturn view;\n\t\t};\n\n\t\t$scope.setCalendarLoading = function setCalendarLoading(isLoading)\n\t\t{\n\t\t\t$scope.calendarLoading = isLoading;\n\t\t};\n\n\t\t$scope.getLoadedSchedule = function getLoadedSchedule(uuid)\n\t\t{\n\t\t\tvar schedule = null;\n\t\t\tfor(var i = 0; i < $scope.schedules.length; i++)\n\t\t\t{\n\t\t\t\tif($scope.schedules[i].uuid === uuid)\n\t\t\t\t{\n\t\t\t\t\tschedule = $scope.schedules[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schedule;\n\t\t};\n\n\t\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t\t$scope.buildSelectedResources = function buildSelectedResources(providerNos)\n\t\t{\n\t\t\tvar selectedResources = [];\n\n\t\t\tfor(var i = 0; i < providerNos.length; i++)\n\t\t\t{\n\t\t\t\tselectedResources.push($scope.resourceOptionHash[providerNos[i]]);\n\t\t\t}\n\n\t\t\treturn selectedResources;\n\t\t};\n\n\t\t$scope.setCalendarResources = function setCalendarResources()\n\t\t{\n\t\t\tif($scope.viewName() === 'resourceDay')\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t}\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.setEventSources = function setEventSources()\n\t\t{\n\t\t\t$scope.eventSources.push($scope.calendarEvents);\n\t\t};\n\n\t\t$scope.updateEvent = function updateEvent(calEvent)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('updateEvent', calEvent);\n\t\t};\n\n\t\t$scope.timeIntervalMinutes = function timeIntervalMinutes()\n\t\t{\n\t\t\treturn parseInt($scope.selectedTimeInterval.split(\":\")[1]);\n\t\t};\n\n\t\t$scope.loadAvailabilityTypes = function loadAvailabilityTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar availabilityTypes = {};\n\n\t\t\tscheduleService.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\t\tavailabilityTypes[result.code] = angular.copy(result);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.availabilityTypes = availabilityTypes;\n\t\t\t\t\tdeferred.resolve(availabilityTypes);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadDefaultSelections = function loadDefaultSelections()\n\t\t{\n\t\t\t$scope.selectedSchedule = $scope.getSelectedSchedule($scope.scheduleOptions);\n\n\t\t\t//$scope.selectedResources = $scope.getSelectedResources($scope.resourceOptions);\n\n\t\t\t$scope.selectedTimeInterval = $scope.getSelectedTimeInterval(\n\t\t\t\t$scope.timeIntervalOptions, $scope.defaultTimeInterval);\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.uiConfig.calendar.minTime = $scope.getScheduleMinTime();\n\t\t\t$scope.uiConfig.calendar.maxTime = $scope.getScheduleMaxTime();\n\n\t\t\t// scroll so that one hour ago is the top of the calendar\n\t\t\t$scope.uiConfig.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t\t};\n\n\t\t$scope.getSelectedTimeInterval = function getSelectedTimeInterval(\n\t\t\ttimeIntervalOptions, defaultTimeInterval)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default\n\n\t\t\tvar selectedTimeInterval = null;\n\n\t\t\tvar timeInterval = $scope.scheduleTimeInterval;\n\t\t\tif(timeInterval === null)\n\t\t\t{\n\t\t\t\ttimeInterval = $scope.scheduleTimeInterval;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(timeInterval))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor(var i = 0; i < timeIntervalOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(timeInterval === timeIntervalOptions[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedTimeInterval = timeIntervalOptions[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(selectedTimeInterval === null)\n\t\t\t{\n\t\t\t\treturn defaultTimeInterval;\n\t\t\t}\n\n\t\t\treturn selectedTimeInterval;\n\t\t};\n\n\t\t$scope.getScheduleMinTime = function getScheduleMinTime()\n\t\t{\n\t\t\t// restrict day view if user preferences are set\n\n\t\t\t/*\t\t\t\tvar min_time = service.get_global_preference_setting('schedule_min_time');\n\t\t\t\t\t\tif (util.exists(min_time)) {\n\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\treturn min_time + \":00\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;*/\n\n\t\t\treturn \"08:00\";\n\t\t};\n\n\t\t$scope.getScheduleMaxTime = function getScheduleMaxTime()\n\t\t{\n\t\t\t/*\t\t\t\tvar max_time = service.get_global_preference_setting('schedule_max_time');\n\t\t\t\t\t\t\tif(util.exists(max_time))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// format: HH24:MM:SS - expect HH24:MM in preference\n\t\t\t\t\t\t\t\treturn max_time + \":00\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;*/\n\t\t\treturn \"20:00\";\n\t\t};\n\n\t\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t\t// $scope.event_statuses - a table to look up a status by uuid.\n\t\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t\t$scope.loadEventStatuses = function loadEventStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.eventStatuses = {};\n\t\t\t$scope.rotateStatuses = [];\n\n\t\t\t$scope.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t\t$scope.eventStatuses[result.displayLetter] = result;\n\t\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.rotateStatuses.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadScheduleEvents = function loadScheduleEvents(providerId, siteName, start, end)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t\t// the end time to convert to the correct date.\n\t\t\tvar startDateString = start.format(Juno.Common.Util.settings.date_format);\n\t\t\tvar endDateString = end.subtract(1, 'seconds').format(Juno.Common.Util.settings.date_format);\n\n\t\t\t$scope.scheduleApi.getCalendarEvents(\n\t\t\t\tproviderId,\n\t\t\t\tstartDateString,\n\t\t\t\tendDateString,\n\t\t\t\tsiteName\n\t\t\t).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t},\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.saveEvent = function saveEvent(editMode, calendarAppointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif(editMode)\n\t\t\t{\n\t\t\t\tthis.appointmentApi.updateAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.appointmentApi.addAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.moveEvent = function moveEvent(appointment, delta, adjustStartTime)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.startTime);\n\t\t\tvar endMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.endTime);\n\n\t\t\tvar movedAppointment = angular.copy(appointment);\n\n\t\t\tif(adjustStartTime)\n\t\t\t{\n\t\t\t\tmovedAppointment.startTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(startMoment.add(delta.asMinutes(), 'minutes'));\n\t\t\t}\n\t\t\tmovedAppointment.endTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(endMoment.add(delta.asMinutes(), 'minutes'));\n\n\t\t\t$scope.saveEvent(true, movedAppointment).then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(data.body);\n\t\t\t\t},\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(data.body);\n\t\t\t\t}\n\t\t\t);\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Read the implementation-specific results and return a calendar-compatible object.\n\t\t$scope.processSaveResults = function processSaveResults(results, displayErrors)\n\t\t{\n\t\t\tvar status = (results || {}).status;\n\n\t\t\tif(status == 'SUCCESS')\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar errorMessage = ((results || {}).error || {}).message;\n\t\t\tvar validationErrorArray = ((results || {}).error || {}).validationErrors;\n\n\t\t\tif(Array.isArray(validationErrorArray))\n\t\t\t{\n\t\t\t\tdisplayErrors.add_standard_error(errorMessage);\n\t\t\t\t//for(var error in validationErrorArray)\n\t\t\t\tfor(var i = 0; i < validationErrorArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar error = validationErrorArray[i];\n\t\t\t\t\tdisplayErrors.add_field_error(error.path, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.deleteEvent = function deleteEvent(appointmentNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.appointmentApi.deleteAppointment(appointmentNo).then(\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\n\t\t\t\t},\n\t\t\t\tfunction(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.openCreateInvoice = function openCreateInvoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t\t{\n\t\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\n\t\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\t\twindow.window_scope = $scope;\n\t\t\t$window.open(url, '_blank');\n\t\t};\n\n\t\t$scope.getIconPath = function getIconPath(icon, statusModifier)\n\t\t{\n\t\t\tif(!Juno.Common.Util.exists(icon))\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tvar modifierString = \"\";\n\n\t\t\tif(Juno.Common.Util.exists(statusModifier))\n\t\t\t{\n\t\t\t\tmodifierString = statusModifier;\n\t\t\t}\n\n\t\t\treturn \"../images/\" + modifierString + icon;\n\t\t};\n\n\t\t$scope.rotateEventStatus = function rotateEventStatus(calEvent)\n\t\t{\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointmentNo = calEvent.data.appointmentNo;\n\n\t\t\t$scope.appointmentApi.setNextStatus(appointmentNo).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar newStatus = response.data.body;\n\n\t\t\t\t\tcalEvent.color = $scope.eventStatuses[newStatus].color;\n\t\t\t\t\tcalEvent.data.eventStatusCode = newStatus;\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t},\n\t\t\t\tfunction failure(response)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.getBillingLink = function getBillingLink(calEvent)\n\t\t{\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar referralNoParameter = \"\";\n\t\t\tif(calEvent.data.billingRdohip)\n\t\t\t{\n\t\t\t\treferralNoParameter = \"&referral_no_1=\" + encodeURIComponent(calEvent.data.billingRdohip);\n\t\t\t}\n\n\t\t\treturn \"../billing.do\" +\n\t\t\t\t\"?billRegion=\" + encodeURIComponent(calEvent.data.billingRegion) +\n\t\t\t\t\"&billForm=\" + encodeURIComponent(calEvent.data.billingForm) +\n\t\t\t\t\"&hotclick=\" +\n\t\t\t\t\"&appointment_no=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographic_name=\" + encodeURIComponent(calEvent.data.demographicName) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&demographic_no=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&user_no=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointment_date=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&start_time=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&bNewForm=1\" + referralNoParameter;\n\t\t};\n\n\t\t$scope.getEncounterLink = function getEncounterLink(calEvent)\n\t\t{\n\t\t\t// XXX: Perhaps link to the new encounter page?  Put in an option to choose new or old.\n\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\tvar appointmentDate = Juno.Common.Util.formatMomentDate(startMoment);\n\t\t\tvar startTime = Juno.Common.Util.formatMomentTime(startMoment);\n\n\t\t\treturn \"../oscarEncounter/IncomingEncounter.do\" +\n\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&appointmentNo=\" + encodeURIComponent(calEvent.data.appointmentNo) +\n\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo) +\n\t\t\t\t\"&curProviderNo=\" + encodeURIComponent(calEvent.data.userProviderNo) +\n\t\t\t\t\"&reason=\" + encodeURIComponent(calEvent.data.reason) +\n\t\t\t\t\"&encType=\" + encodeURIComponent(\"face to face encounter with client\") +\n\n\t\t\t\t\"&userName=\" + encodeURIComponent(calEvent.data.userFirstName + \" \" + calEvent.data.userLastName) +\n\t\t\t\t\"&curDate=\" + encodeURIComponent(Juno.Common.Util.formatMomentDate(moment())) +\n\n\t\t\t\t\"&appointmentDate=\" + encodeURIComponent(appointmentDate) +\n\t\t\t\t\"&startTime=\" + encodeURIComponent(startTime) +\n\t\t\t\t\"&status=\" + encodeURIComponent(calEvent.data.eventStatusCode) +\n\t\t\t\t\"&apptProvider_no=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\"&providerview=\" + encodeURIComponent(providerNo);\n\t\t};\n\n\t\t$scope.getRxLink = function getRxLink(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar providerNo = calEvent.resourceId;\n\n\t\t\t\treturn \"../oscarRx/choosePatient.do\" +\n\t\t\t\t\t\"?providerNo=\" + encodeURIComponent(providerNo) +\n\t\t\t\t\t\"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo);\n\t\t\t}\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Event Handlers\n\t\t//=========================================================================/\n\n\t\t$scope.onEventRender = function onEventRender(event, element, view)\n\t\t{\n\t\t\tif(event.rendering !== 'background')\n\t\t\t{\n\t\t\t\tvar eventSiteHtml = '';\n\t\t\t\tvar eventSite = $scope.sites[event.data.site];\n\n\t\t\t\tif(Juno.Common.Util.exists(eventSite))\n\t\t\t\t{\n\t\t\t\t\teventSiteHtml += \"<span style='background-color: \" + eventSite.color + \"'>&nbsp;</span>\"\n\t\t\t\t}\n\n\n\t\t\t\tvar eventStatusHtml = '';\n\t\t\t\tvar eventStatus =\n\t\t\t\t\t$scope.eventStatuses[event.data.eventStatusCode];\n\t\t\t\tvar eventStatusRotate = Juno.Common.Util.exists(eventStatus.sortOrder);\n\n\t\t\t\tif(Juno.Common.Util.exists(eventStatus) && Juno.Common.Util.exists(eventStatus.icon) &&\n\t\t\t\t\tJuno.Common.Util.exists(event) && Juno.Common.Util.exists(event.data))\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml += \"<img class='event-status\";\n\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += ' rotate';\n\t\t\t\t\t}\n\t\t\t\t\teventStatusHtml += \"' src='\" + $scope.getIconPath(eventStatus.icon, event.data.eventStatusModifier) + \"' />\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\teventStatusHtml = '<span class=\"event-status';\n\t\t\t\t\tif(Juno.Common.Util.exists(eventStatus))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(eventStatusRotate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teventStatusHtml += ' rotate ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\teventStatusHtml += '\"' + ' title=\"' + Juno.Common.Util.escapeHtml(eventStatus.name) + '\">' +\n\t\t\t\t\t\t\tJuno.Common.Util.escapeHtml(eventStatus.displayLetter) + '</span>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\teventStatusHtml += '\" title=\"Unknown\">?</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar eventEncounterHtml = '<span class=\"event-encounter\" title=\"Open Encounter\">E</span>';\n\n\t\t\t\tvar eventInvoiceHtml = '<span class=\"event-invoice\" title=\"Create Invoice\">B</span>';\n\n\t\t\t\tvar eventDemographicHtml = '<span class=\"event-demographic\" title=\"View Patient\">M</span>';\n\n\t\t\t\tvar eventRxHtml = '<span class=\"event-rx\" title=\"View Prescription\">Rx</span>';\n\n\t\t\t\tvar eventDetails = \"\";\n\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.demographicName))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.demographicName);\n\t\t\t\t\tif(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t\t{\n\t\t\t\t\t\teventDetails += \" (\" + Juno.Common.Util.escapeHtml(event.data.reason) + \")\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\teventDetails = Juno.Common.Util.escapeHtml(event.data.reason);\n\t\t\t\t}\n\n\t\t\t\t$(element).find('.fc-content').html(eventSiteHtml + eventStatusHtml + eventEncounterHtml +\n\t\t\t\t\teventInvoiceHtml + eventDemographicHtml + eventRxHtml + eventDetails);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onViewRender = function onViewRender()\n\t\t{\n\t\t\tif($scope.isInitialized() && $scope.calendar())\n\t\t\t{\n\t\t\t\t$scope.selectedDate = moment(Juno.Common.Util.formatMomentDate(\n\t\t\t\t\tmoment($scope.calendar().fullCalendar('getDate'))));\n\t\t\t}\n\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$(\"#ca-calendar\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t};\n\n\t\t$scope.afterRender = function afterRender()\n\t\t{\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$('.fc-agendaDay-button').click(function()\n\t\t\t{\n\t\t\t\t$(\"#schedule_container\").css('min-width',$('.fc-resource-cell').length*200);\n\t\t\t});\n\t\t};\n\n\t\t$scope.openCreateEventDialog = function openCreateEventDialog(\n\t\t\tstart, end, jsEvent, view, resource)\n\t\t{\n\t\t\t// XXX: share as much code as possible with edit event\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = null;\n\t\t\tvar displayName = \"\";\n\t\t\tif(Juno.Common.Util.exists(resource))\n\t\t\t{\n\t\t\t\tscheduleUuid = resource.id;\n\t\t\t\tdisplayName = resource.display_name;\n\t\t\t}\n\t\t\telse if($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\tscheduleUuid = $scope.selectedSchedule.uuid;\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: start,\n\t\t\t\t\tendTime: end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tscheduleTemplates: $scope.scheduleTemplates,\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: {}\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return false }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t// XXX: make this work\n\t\t$scope.openPatientDialog = function openPatientDialog(editModeCallback, onSaveCallback,\n\t\t\tloadErrorLinkPatientFn)\n\t\t{\n\t\t\t//global_state.enable_keyboard_shortcuts = false;\n\n\t\t\treturn this.$uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tcontroller: 'Invoice.Common.Patient.FormController',\n\t\t\t\ttemplateUrl: 'code/invoice/common/patient/quick_form.html',\n\t\t\t\tresolve: {\n\t\t\t\t\tedit_mode: editModeCallback,\n\t\t\t\t\ton_save_callback: onSaveCallback,\n\t\t\t\t\tload_error_link_patient_fn: loadErrorLinkPatientFn\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$scope.openPatientDemographic = function openPatientDemographic(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: calEvent.data.demographicNo\n\t\t\t\t};\n\n\t\t\t\tif (angular.isDefined(calEvent.data.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = calEvent.data.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\t\t\t\t}\n\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t$scope.openEditEventDialog = function openEditEventDialog(calEvent)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_edit') )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar scheduleUuid = calEvent.resourceId;\n\t\t\tvar displayName = calEvent.data.demographicName;\n\n\t\t\tif(displayName == null)\n\t\t\t{\n\t\t\t\tdisplayName = '';\n\t\t\t}\n\n\t\t\tvar schedule = $scope.getLoadedSchedule(scheduleUuid);\n\n\t\t\tif(schedule !== null)\n\t\t\t{\n\t\t\t\t//var defaultEventStatus = schedule.new_event_status_uuid;\n\n\t\t\t\tvar modalSchedule = angular.copy(schedule);\n\t\t\t\tmodalSchedule.display_name = displayName;\n\n\t\t\t\tvar data = {\n\t\t\t\t\tschedule: modalSchedule,\n\t\t\t\t\tdefaultEventStatus: null, //defaultEventStatus,\n\t\t\t\t\tstartTime: calEvent.start,\n\t\t\t\t\tendTime: calEvent.end,\n\t\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\t\tavailabilityTypes: $scope.availabilityTypes,\n\t\t\t\t\tsites: $scope.sites,\n\t\t\t\t\tevents: $scope.events,\n\t\t\t\t\teventData: calEvent.data\n\t\t\t\t};\n\n\t\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcontroller: 'Schedule.EventController',\n\t\t\t\t\ttemplateUrl: 'src/schedule/event.jsp',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\ttype: [function() { return 'create_edit_event' }],\n\t\t\t\t\t\tlabel: [function() { return 'Appointment' }],\n\t\t\t\t\t\tparentScope: [function() { return $scope }],\n\t\t\t\t\t\tdata: [function() { return data }],\n\t\t\t\t\t\teditMode: [function() { return true }],\n\t\t\t\t\t\tkeyBinding: [function() {return {bindKeyGlobal: function(){}}}],\n\t\t\t\t\t\tfocus: [function() {return focusService}],\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.dialog.result.catch(function(res) {\n\t\t\t\t\tif(!(res === 'cancel' || res === 'escape key press'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow res;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// when the dialog closes clear the variable\n\t\t\t\t$scope.dialog.closed.then(function() {\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.onEventClicked = function onEventClicked(calEvent, jsEvent, view)\n\t\t{\n\t\t\tif($(jsEvent.target).is(\".event-status.rotate\"))\n\t\t\t{\n\t\t\t\t$scope.rotateEventStatus(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-encounter\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getEncounterLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-invoice\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getBillingLink(calEvent));\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-demographic\"))\n\t\t\t{\n\t\t\t\t$scope.openPatientDemographic(calEvent);\n\t\t\t}\n\t\t\telse if($(jsEvent.target).is(\".event-rx\"))\n\t\t\t{\n\t\t\t\twindow.open($scope.getRxLink(calEvent));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.openEditEventDialog(calEvent);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventDrop = function onEventDrop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was dragged and dropped on the calendar:\n\t\t\t// load then update the start and end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, true).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.onEventResize = function onEventResize(calEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif(!securityService.hasPermission('scheduling_create') )\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t\t// load then update the end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId\n\n\t\t\t$scope.moveEvent(appointment, delta, false).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\t\t\tcalEvent.data.startTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\t\t\tcalEvent.data.endTime = Juno.Common.Util.formatMomentTime(\n\t\t\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\n\t\t\t\t\t//$scope.update_event(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t}, function error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\treturn $scope.onScheduleChanged();\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\tvar selectedSchedule = $scope.selectedSchedule;\n\t\t\tvar selectedSiteName = $scope.selectedSiteName;\n\n\t\t\tif(!Juno.Common.Util.exists(selectedSchedule))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(Juno.Common.Util.exists(selectedSiteName))\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = selectedSiteName;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = null;\n\t\t\t}\n\n\t\t\t// reload the schedule and then events data, triggering a rerender\n\t\t\t$scope.loadSelectedSchedules().then($scope.refetchEvents);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.scheduleTimeInterval = $scope.selectedTimeInterval;\n\n\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedTimeInterval;\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Init methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t\t// $scope.resourceOptionHash - table to look up schedule information by providerNo.  This is\n\t\t//                               used to create the resource view headers.\n\t\t$scope.loadScheduleOptions = function loadScheduleOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getScheduleGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\n\t\t\t\t\t\t$scope.scheduleOptions.push(scheduleData);\n\n\t\t\t\t\t\t// Get the possible resources by inferring that the group is a provider\n\t\t\t\t\t\t// by checking if the array has one entry and matches the identifier\n\t\t\t\t\t\t// Also uses fields specific to Juno.\n\t\t\t\t\t\t// TODO: CHANGE THIS!!\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\tangular.isArray(scheduleData.providerNos) &&\n\t\t\t\t\t\t\tscheduleData.providerNos.length == 1 &&\n\t\t\t\t\t\t\tscheduleData.providerNos[0].toString() == scheduleData.identifier\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar providerNo = scheduleData.providerNos[0];\n\n\t\t\t\t\t\t\t$scope.resourceOptionHash[providerNo] = {\n\t\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t\t'uuid': providerNo,\n\t\t\t\t\t\t\t\t'name': providerNo,\n\t\t\t\t\t\t\t\t'title': scheduleData.name,\n\t\t\t\t\t\t\t\t'display_name': scheduleData.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Load the list of available sites from the API.  Sets the following:\n\t\t// $scope.sites - a table to lookup a site's info by name\n\t\t// $scope.site_options - the options for the site selection dropdown\n\t\t$scope.loadSiteOptions = function loadSiteOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.loadSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.sites = {};\n\t\t\t\t\t$scope.siteOptions = [];\n\t\t\t\t\tif(angular.isArray(results) && results.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t\t$scope.siteOptions = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\t\tdisplay_name: \"All\",\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\t$scope.siteOptions = $scope.siteOptions.concat(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadSites = function loadSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tscheduleService.getSites().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif(angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\t\tdisplay_name: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(out);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.$watch('scheduleService.selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\t// avoid running first time this fires during initialization\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\t$scope.changeDate(newValue);\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Config Array\n\t\t//=========================================================================/\n\n\t\t$scope.applyUiConfig = function applyUiConfig(uiConfig)\n\t\t{\n\t\t\t$scope.uiConfigApplied = angular.copy(uiConfig);\n\t\t};\n\n\t\t$scope.initEventsAutoRefresh = function initEventsAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = $scope.scheduleAutoRefresh;\n\t\t\tif(refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = $scope.scheduleAutoRefreshMinutes;\n\t\t\tif(!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = $scope.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif(minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\t$scope.scheduleAutoRefresh = setInterval($scope.refetchEvents, minutes * 60 * 1000);\n\t\t\t}\n\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Any changes to this array need to be applied by calling applyUiConfig()\n\t\t$scope.uiConfig = {\n\t\t\tcalendar: {\n\t\t\t\theight: 'auto', //$scope.get_schedule_height(),\n\t\t\t\tnowIndicator: true,\n\t\t\t\theader: {\n\t\t\t\t\tleft: 'prev,next today title',\n\t\t\t\t\tcenter: '',\n\t\t\t\t\tright: ''\n\t\t\t\t},\n\n\t\t\t\tallDaySlot: false,\n\n\t\t\t\tdefaultView: null,\n\t\t\t\tdefaultDate: $scope.defaultDate,\n\t\t\t\tslotDuration: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelInterval: $scope.selectedTimeInterval,\n\t\t\t\tslotLabelFormat: 'h:mma',\n\n\t\t\t\tloading: $scope.setCalendarLoading,\n\n\t\t\t\tselectable: true,\n\t\t\t\tselect: $scope.openCreateEventDialog,\n\t\t\t\teventClick: $scope.onEventClicked,\n\t\t\t\teventRender: $scope.onEventRender,\n\t\t\t\tviewRender: $scope.onViewRender,\n\t\t\t\teventAfterAllRender: $scope.afterRender,\n\n\t\t\t\teditable: true,\n\t\t\t\teventDrop: $scope.onEventDrop,\n\t\t\t\teventResize: $scope.onEventResize,\n\t\t\t\tschedulerLicenseKey: \"GPL-My-Project-Is-Open-Source\"\n\t\t\t}\n\t\t};\n\n\t\t$scope.init();\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services', 'PatientList']);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: 'Name',\n\t\t\t\t'term': term,\n\t\t\t\tstatus: 'active',\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.content[x].demographicNo,\n\t\t\t\t\t\t\tname: results.content[x].lastName + ',' + results.content[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A'\n\t\t\t\t\t};\n\n\n\t\t\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n                                        ticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'demographicService',\n\t'demographicsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.setSwipeReady(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// controller.page.demo = demo;\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tcontroller.setSwipeReady();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\n\t\t// //calculate age\n\t\t// var now = new Date();\n\t\t// controller.calculateAge = function calculateAge()\n\t\t// {\n\t\t// \tcontroller.page.demo.age = now.getFullYear() - controller.page.demo.dobYear;\n\t\t// \tif (now.getMonth() < controller.page.demo.dobMonth - 1) controller.page.demo.age--;\n\t\t// \telse if (now.getMonth() == controller.page.demo.dobMonth - 1 && now.getDate() < controller.page.demo.dobDay) controller.page.demo.age--;\n\t\t// };\n\t\t//\n\t\t// controller.calculateAge(); //done on page load\n\n\t\t//set ready for swipe card\n\t\tcontroller.setSwipeReady = function setSwipeReady(status)\n\t\t{\n\t\t\tif (status == \"off\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Click for Card Swipe\";\n\t\t\t}\n\t\t\telse if (status == \"done\")\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-primary\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.readyForSwipe = \"btn-success\";\n\t\t\t\tcontroller.page.swipecardMsg = \"Ready for Card Swipe\";\n\t\t\t\tcontroller.page.swipecard = \"\";\n\t\t\t}\n\t\t};\n\n\t\t//Health card verification\n\t\tcontroller.healthCardHandler = function healthCardHandler(keycode)\n\t\t{\n\t\t\tif (keycode == 13)\n\t\t\t{ //carriage-return\n\t\t\t\tvar swipeCardData = controller.page.swipecard;\n\t\t\t\tcontroller.page.swipecard = \"\";\n\n\t\t\t\tif (swipeCardData.substring(0, 3) == \"%E?\")\n\t\t\t\t{ //swipe card error\n\t\t\t\t\talert(\"Error reading card\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (swipeCardData.substring(2, 8) == \"610054\")\n\t\t\t\t\t{ //Ontario\n\t\t\t\t\t\thcParts[\"issuer\"] = \"ON\";\n\t\t\t\t\t\thcParts[\"hin\"] = swipeCardData.substring(8, 18);\n\n\t\t\t\t\t\tvar namePos = swipeCardData.indexOf(\"^\") + 1;\n\t\t\t\t\t\tvar endNamePos = swipeCardData.indexOf(\"^\", namePos);\n\t\t\t\t\t\thcParts[\"fullName\"] = swipeCardData.substring(namePos, endNamePos);\n\t\t\t\t\t\thcParts[\"lastName\"] = hcParts[\"fullName\"].split(\"/\")[0];\n\t\t\t\t\t\thcParts[\"firstName\"] = hcParts[\"fullName\"].split(\"/\")[1].trim();\n\n\t\t\t\t\t\thcParts[\"sex\"] = swipeCardData.substring(endNamePos + 8, endNamePos + 9);\n\t\t\t\t\t\thcParts[\"dob\"] = swipeCardData.substring(endNamePos + 9, endNamePos + 17);\n\t\t\t\t\t\thcParts[\"hinExp\"] = swipeCardData.substring(endNamePos + 1, endNamePos + 5) + hcParts[\"dob\"].substring(6, 8);\n\t\t\t\t\t\thcParts[\"hinVer\"] = swipeCardData.substring(endNamePos + 17, endNamePos + 19);\n\t\t\t\t\t\thcParts[\"firstNameShort\"] = swipeCardData.substring(endNamePos + 19, endNamePos + 24);\n\t\t\t\t\t\thcParts[\"issueDate\"] = swipeCardData.substring(endNamePos + 24, endNamePos + 30);\n\t\t\t\t\t\thcParts[\"lang\"] = swipeCardData.substring(endNamePos + 30, endNamePos + 32);\n\n\t\t\t\t\t\tif (!isNumber(hcParts[\"dob\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"dob\"] = null;\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"hinExp\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"hinExp\"] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isNumber(hcParts[\"issueDate\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thcParts[\"issueDate\"] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.setSwipeReady(\"done\");\n\t\t\t\t\t\tcontroller.healthCardUpdateDemographics();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\talert(\"Not Ontario Health Card\");\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.validateHC(); //Run HCValidation\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.healthCardUpdateDemographics = function healthCardUpdateDemographics()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.hcType != hcParts[\"issuer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcType = hcParts[\"issuer\"];\n\t\t\t\tcontroller.page.hcTypeColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.lastName != hcParts[\"lastName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = hcParts[\"lastName\"];\n\t\t\t\tcontroller.page.lastNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.firstName != hcParts[\"firstName\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = hcParts[\"firstName\"];\n\t\t\t\tcontroller.page.firstNameColor = colorAttn;\n\t\t\t}\n\t\t\tif (isNumber(hcParts[\"hin\"]) && controller.page.demo.hin != hcParts[\"hin\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = hcParts[\"hin\"];\n\t\t\t\tcontroller.page.hinColor = colorAttn;\n\t\t\t}\n\t\t\tif (controller.page.demo.ver != hcParts[\"hinVer\"])\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = hcParts[\"hinVer\"];\n\t\t\t\tcontroller.page.verColor = colorAttn;\n\t\t\t}\n\t\t\tvar hcSex = hcParts[\"sex\"] == 1 ? \"M\" : (hcParts[\"sex\"] == 2 ? \"F\" : null);\n\t\t\tif (hcSex != null && controller.page.demo.sex != hcSex)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = hcSex;\n\t\t\t\tcontroller.page.sexColor = colorAttn;\n\t\t\t}\n\t\t\tvar dateParts = {};\n\t\t\tif (hcParts[\"dob\"] != null)\n\t\t\t{\n\t\t\t\tdateParts[\"year\"] = hcParts[\"dob\"].substring(0, 4);\n\t\t\t\tdateParts[\"month\"] = hcParts[\"dob\"].substring(4, 6);\n\t\t\t\tdateParts[\"day\"] = hcParts[\"dob\"].substring(6);\n\t\t\t\tif (controller.page.demo.dobYear != dateParts[\"year\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobYear = dateParts[\"year\"];\n\t\t\t\t\tcontroller.page.dobYearColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobMonth != dateParts[\"month\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobMonth = dateParts[\"month\"];\n\t\t\t\t\tcontroller.page.dobMonthColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tif (controller.page.demo.dobDay != dateParts[\"day\"])\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.dobDay = dateParts[\"day\"];\n\t\t\t\t\tcontroller.page.dobDayColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"issueDate\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"issueDate\"].substring(0, 2) + \"-\" + hcParts[\"issueDate\"].substring(2, 4) + \"-\" + hcParts[\"issueDate\"].substring(4);\n\t\t\t\tif (controller.page.demo.effDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.effDate = swipeDate;\n\t\t\t\t\tcontroller.page.effDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hcParts[\"hinExp\"] != null)\n\t\t\t{\n\t\t\t\tvar swipeDate = \"20\" + hcParts[\"hinExp\"].substring(0, 2) + \"-\" + hcParts[\"hinExp\"].substring(2, 4) + \"-\" + hcParts[\"hinExp\"].substring(4);\n\t\t\t\tif (controller.page.demo.hcRenewDate != swipeDate)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.hcRenewDate = swipeDate;\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t\tvar hinExpDate = buildDate(\"20\" + hcParts[\"hinExp\"].substring(0, 2), hcParts[\"hinExp\"].substring(2, 4), hcParts[\"hinExp\"].substring(4));\n\t\t\t\tif (hinExpDate != null && now > hinExpDate)\n\t\t\t\t{\n\t\t\t\t\talert(\"This health card has expired!\");\n\t\t\t\t\tcontroller.page.hcRenewDateColor = colorAttn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t}\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t}\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t}\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t}\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t}\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t}\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t}\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t}\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t}\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t}\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t}\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t}\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t}\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t}\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t}\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t}\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t}\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t}\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t}\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t}\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t}\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label == \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label == \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t}\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t}\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t}\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t}\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func == \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion == \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion == \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func == \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func == \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func == \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func == \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t}\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t}\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"form ctrl \", $stateParams, $state);\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = $stateParams.formListId;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length == 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Library'\n\t\t}]; //Need to get this from the server.\n\n\t\tcontroller.page.formlists.forEach(function(item, index)\n\t\t{\n\t\t\tconsole.log('What is the item ', item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, item.label).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentFormList[index] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t});\n\n\n\t\tcontroller.page.encounterFormlist = [];\n\t\tcontroller.page.formGroups = [];\n\t\tcontroller.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tformService.getFormGroups().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups = results;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.formGroups.push(results);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < controller.page.formGroups.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!(controller.page.formGroups[i].summaryItem instanceof Array))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.formGroups[i].summaryItem = [controller.page.formGroups[i].summaryItem];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getFormGroups();\n\t\tcontroller.page.formOptions = [];\n\t\tcontroller.favouriteGroup = null;\n\n\t\tgetFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tformService.getFavouriteFormGroup().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.favouriteGroup = results;\n\n\t\t\t\t\tif (!(controller.favouriteGroup.summaryItem instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.favouriteGroup.summaryItem = [controller.favouriteGroup.summaryItem];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tgetFavouriteFormGroup();\n\n\t\tformService.getFormOptions(controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(\"data\", results);\n\n\t\t\t\tif (results.items instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions = results.items;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.formOptions.push(results.items);\n\t\t\t\t}\n\n\n\t\t\t\tconsole.log(\"form options\", controller.page.formOptions);\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[0] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tformService.getSelectedEncounterForms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterFormlist[1] = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item, view)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar queryName = $location.search().name;\n\t\t\tvar params = {\n\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\ttype: item.type === 'eform' ? 'eform' : 'form',\n\t\t\t\tid: item.id || item.formId\n\t\t\t};\n\n\t\t\t// The items sent from the server are such that\n\t\t\t// 1. Existing eforms have a formId and an id\n\t\t\t// 2. Existing forms have a formId only\n\t\t\t// 3. Library/available eforms have a formId only\n\t\t\t// 4. Library/available forms have neither\n\t\t\tif ((item.type === 'eform' && item.id) || (item.type === 'form' && item.formId))\n\t\t\t{\n\t\t\t\tparams.name = item.type === 'form' ? item.name || queryName : '';\n\t\t\t\t$state.go('record.forms.view', params);\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\t$state.go('record.forms.add', params);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.go('record.forms');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* 1=frame\n\t\t\t* 2=newwindow\n\t\t\t*/\n\t\t\tif (view === undefined)\n\t\t\t{\n\t\t\t\tview = 1;\n\t\t\t}\n\n\t\t\tvar url = '';\n\t\t\tif (item.type === 'eform')\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmshowform_data.jsp?fdid=' + item.id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../eform/efmformadd_data.jsp?fid=' + item.formId + '&demographic_no=' + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //form\n\t\t\t\tif (angular.isDefined(item.formId))\n\t\t\t\t{\n\t\t\t\t\tvar name = item.name || queryName;\n\t\t\t\t\turl = '../form/forwardshortcutname.jsp?formname=' + name + '&demographic_no=' + $stateParams.demographicNo + '&formId=' + item.formId;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = item.formValue + $stateParams.demographicNo + \"&formId=0&provNo=\" + user.providerNo + \"&parentAjaxId=forms\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view === 1)\n\t\t\t{\n\t\t\t\t$(\"html, body\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, \"slow\");\n\t\t\t}\n\t\t\telse if (view === 2)\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.page.currentForm = item;\n\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t{});\n\t\t\tcontroller.pymParent = pymParent;\n\n\t\t\t/*if(item.type != 'eform' && view==1){\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = \"1600px\"; //temp hack for the forms\n\t\t\t}*/\n\n\t\t\t//resize iframe for both form and eforms\n\t\t\t$('iframe').load(function()\n\t\t\t{\n\t\t\t\tvar maxheight = Math.max(document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.scrollHeight, document.getElementById('formInViewFrame').firstChild.contentWindow.document.body.offsetHeight) + 30 + 'px';\n\t\t\t\tdocument.getElementById('formInViewFrame').firstChild.style.height = maxheight;\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.isEmpty = function isEmpty(obj)\n\t\t{\n\t\t\tfor (var i in obj)\n\t\t\t\tif (obj.hasOwnProperty(i)) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.currentEformGroup = {};\n\n\t\tcontroller.setCurrentEFormGroup = function setCurrentEFormGroup(mod)\n\t\t{\n\t\t\tcontroller.currentEformGroup = mod;\n\t\t};\n\n\t\tcontroller.openFormFromGroups = function openFormFromGroups(item)\n\t\t{\n\t\t\tconsole.log(\"group item\", item);\n\t\t\titem.formId = item.id;\n\t\t\tdelete item.id;\n\t\t\tcontroller.viewFormState(item, 2);\n\t\t};\n\n\t\tcontroller.formOption = function formOption(opt)\n\t\t{\n\t\t\tvar atleastOneItemSelected = false;\n\t\t\tif (opt.extra == \"send2PHR\")\n\t\t\t{\n\t\t\t\tvar docIds = \"\";\n\t\t\t\tfor (var i = 0; i < controller.page.currentFormList[controller.page.currentlistId].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.page.currentFormList[controller.page.currentlistId][i].isChecked)\n\t\t\t\t\t{\n\t\t\t\t\t\tdocIds = docIds + '&sendToPhr=' + controller.page.currentFormList[controller.page.currentlistId][i].id;\n\t\t\t\t\t\tatleastOneItemSelected = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (atleastOneItemSelected)\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t\tvar url = '../eform/efmpatientformlistSendPhrAction.jsp?clientId=' + controller.demographicNo + docIds;\n\t\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atleastOneItemSelected)\n\t\t\t{\n\t\t\t\talert(\"No Documents Selected\");\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to make group setting active\n\t\t */\n\t\tcontroller.getGroupListClass = function getGroupListClass(grp)\n\t\t{\n\t\t\tif (grp === controller.currentEformGroup)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type === controller.page.currentForm.type && item.id === controller.page.currentForm.id && !Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type === controller.page.currentForm.type && item.formId === controller.page.currentForm.formId && Juno.Common.Util.isUndefinedOrNull(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t}\n\n\t\tvar currentState = $state.current.name;\n\t\tif (currentState === 'record.forms.view' || currentState === 'record.forms.add')\n\t\t{\n\t\t\tvar item = {};\n\t\t\titem.type = $state.params.type;\n\n\t\t\t// set item properties in a way that matches the content that the server returns\n\t\t\tif (currentState === 'record.forms.view' && item.type === 'eform')\n\t\t\t{\n\t\t\t\titem.id = $state.params.id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\titem.formId = $state.params.id;\n\t\t\t}\n\n\t\t\tcontroller.viewFormState(item);\n\t\t\tcontroller.changeTo(currentState === 'record.forms.view' ? 0 : 1);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.keyCode == 38)\n\t\t\t{ //up\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.keyCode == 40)\n\t\t\t{ //Down\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tconsole.log(results);\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\tcontroller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code; //'ongoingconcerns';\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: true,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\n\t\t\tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t\teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\n\t\t\titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t\titvCheck = $interval(function()\n\t\t\t{\n\t\t\t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\n\t\t\t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}, 10000); //check for new edit every 10 sec\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\titvSet = null;\n\t\t\t\titvCheck = null;\n\t\t\t\teditingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$filter',\n\t'mod',\n\t'action',\n\t'$stateParams',\n\t'summaryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\tmod,\n\t\taction,\n\t\t$stateParams,\n\t\tsummaryService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.pageOptions = {};\n\t\tcontroller.pageOptions.printType = {};\n\t\tcontroller.pageOptions.dates = {};\n\t\tcontroller.page = {};\n\t\tcontroller.page.selectedWarning = false;\n\n\t\t/*\n\t\t *If mod length > 0 than the user has selected a note. = Default to Note\n\t\t *Other wise default to All\n\t\t */\n\t\tvar atleastOneSelected = false;\n\t\tfor (var i = 0; i < mod.length; i++)\n\t\t{\n\t\t\tif (mod[i].isSelected)\n\t\t\t{\n\t\t\t\tatleastOneSelected = true;\n\t\t\t\ti = mod.length;\n\t\t\t}\n\t\t}\n\n\t\tif (atleastOneSelected)\n\t\t{\n\t\t\tconsole.log(\"mod len \", mod.length);\n\t\t\tcontroller.pageOptions.printType = 'selected';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"printType = all\");\n\t\t\tcontroller.pageOptions.printType = 'all';\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = 'dates';\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType == 'all')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'selected')\n\t\t\t{\n\t\t\t\t//get array\n\t\t\t\tvar selectedList = [];\n\t\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueryString = queryString + '&notes2print=' + selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType == 'dates')\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tvar selectedList = [];\n\t\t\tfor (var i = 0; i < mod.length; i++)\n\t\t\t{\n\t\t\t\tif (mod[i].isSelected)\n\t\t\t\t{\n\t\t\t\t\tselectedList.push(mod[i].noteId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.printType === 'selected' && selectedList.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tcontroller.pageOptions.selectedList = selectedList;\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"in summary Ctrl \", $stateParams);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNotes = [];\n\n\t\tcontroller.page.notes = {};\n\t\tcontroller.index = 0;\n\t\tcontroller.page.notes = {};\n\t\tcontroller.page.notes.notelist = [];\n\t\tcontroller.busy = false;\n\t\tcontroller.page.noteFilter = {};\n\t\tcontroller.page.currentFilter = 'none';\n\t\tcontroller.page.onlyNotes = false; // Filter for only showing encounter notes\n\t\tcontroller.page.onlyMine = false; // Filter for only showing notes the current user has created/edited\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(note)\n\t\t{\n\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAssessments = function openAssessments()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms', {formListId: 1});\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tconsole.log(controller.busy);\n\t\t\tif (controller.busy) return;\n\n\t\t\tcontroller.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, controller.index, 20, controller.page.noteFilter).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('whats the data', angular.isUndefined(results.notelist), results.notelist);\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.page.notes = data;\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"ok its in an array\", controller.busy);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.notes.notelist.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t\tcontroller.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.addMoreItems();\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\t// Call the findGroupNote function and search for the given note, if found, open the groupNote editor\n\t\tcontroller.editGroupNote = function editGroupNote(note)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\n\t\t\tif (obj !== null)\n\t\t\t{\n\t\t\t\tobj.module.editorNames = note.editorNames;\n\t\t\t\tcontroller.gotoState(obj.note, obj.module, obj.note.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.page.currentEditNote = {};\n\n\t\tcontroller.isNoteBeingEdited = function isNoteBeingEdited(note)\n\t\t{\n\n\t\t\tif (note.uuid === controller.page.currentEditNote.uuid && note.uuid !== null)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$rootScope.$on('currentlyEditingNote', function(event, data)\n\t\t{\n\t\t\tcontroller.page.currentEditNote = data;\n\t\t});\n\n\t\t// TODO\n\t\t$rootScope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tcontroller.page.currentEditNote = {};\n\t\t});\n\n\t\t$rootScope.$on('noteSaved', function(event, data)\n\t\t{\n\t\t\tconsole.log('new data coming in', data);\n\t\t\tvar noteFound = false;\n\t\t\tfor (var notecount = 0; notecount < controller.page.notes.notelist.length; notecount++)\n\t\t\t{\n\t\t\t\tif (data.uuid == controller.page.notes.notelist[notecount].uuid)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('uuid ' + data.uuid + ' notecount ' + notecount, data, controller.page.notes.notelist[notecount]);\n\t\t\t\t\tcontroller.page.notes.notelist[notecount] = data;\n\t\t\t\t\tnoteFound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (noteFound == false)\n\t\t\t{\n\t\t\t\tcontroller.page.notes.notelist.unshift(data);\n\t\t\t}\n\t\t\tcontroller.index = controller.page.notes.notelist.length;\n\t\t});\n\n\t\t// Check if note regular note, if not, we must either display the group note edit window or have no edit option\n\t\tcontroller.isRegularNote = function isRegularNote(note)\n\t\t{\n\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t//Note display functions\n\t\tcontroller.setColor = function setColor(note)\n\t\t{\n\t\t\tif (note.eformData)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#DFF0D8',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.document)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#617CB2',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.rxAnnotation)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#D3D3D3',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.encounterForm)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#BCAD75',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.invoice)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '##FF7272',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.ticklerNote)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#FFA96F',\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (note.cpp)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t'border-left-color': '#9B8166',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showNoteHeader = function showNoteHeader(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.showNote = function showNote(note)\n\t\t{\n\t\t\tif (controller.page.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(controller.page.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (user.providerNo !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tcontroller.getNoteHeader = function firstLine(noteObj)\n\t\t{\n\t\t\treturn  noteObj.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tcontroller.toggleList = function toggleList(mod)\n\t\t{\n\n\t\t\t// If all the items are displayed, reset displaySize to 5 (min), else, show all the items\n\t\t\tif (mod.displaySize >= mod.summaryItem.length)\n\t\t\t{\n\t\t\t\tmod.displaySize = 5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmod.displaySize = mod.summaryItem.length;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.showMoreItems = function showMoreItems(mod)\n\t\t{\n\n\t\t\tif (!angular.isDefined(mod.summaryItem))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mod.summaryItem.length == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Return true if a given section is expanded, otherwise return false\n\t\tcontroller.isSectionExpanded = function isSectionExpanded(mod)\n\t\t{\n\t\t\tif (mod.displaySize > 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Return true if a given section is empty, otherwise return false\n\t\tcontroller.isSectionEmpty = function isSectionEmpty(mod)\n\t\t{\n\t\t\tif (mod.summaryItem.length <= 5)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tcontroller.isUnsignedEncounterNote = function isUnsignedEncounterNote(note)\n\t\t{\n\t\t\treturn (!note.isSigned && !note.cpp && !note.document && !note.ticklerNote && !note.eformData);\n\t\t};\n\n\t\t// controller.showMoreItemsSymbol = function(mod)\n\t\t// {\n\t\t// \tif (!angular.isDefined(mod.summaryItem))\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif ((mod.displaySize < mod.summaryItem.length) && mod.displaySize == initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if ((mod.displaySize == mod.summaryItem.length) && mod.displaySize != initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\t\t// \telse if (mod.summaryItem.length <= initialDisplayLimit)\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-down glyphicon-chevron-down-disabled pull-right\";\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\treturn \"\";\n\t\t// \t}\n\n\t\t// \tif (controller.isSectionExpanded(mod))\n\t\t// \t{\n\t\t// \t\treturn \"glyphicon glyphicon-chevron-up hand-hover pull-right\";\n\t\t// \t}\n\n\t\t// \treturn \"glyphicon glyphicon-chevron-down hand-hover pull-right\";\n\n\t\t// };\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"left\", results);\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"right\", results);\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tif (editingNoteId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t\t\t\t\t$interval.cancel(itvSet);\n\t\t\t\t\t\titvSet = null;\n\t\t\t\t\t\t$interval.cancel(itvCheck);\n\t\t\t\t\t\titvCheck = null;\n\t\t\t\t\t\teditingNoteId = null;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\n\t\tcontroller.gotoState = function gotoState(item, mod, itemId)\n\t\t{\n\t\t\tconsole.log('ITEM: ', item);\n\t\t\tconsole.log('MOD: ', mod);\n\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, itemId);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal(mod, action)\n\t\t{\n\t\t\tvar size = 'lg';\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// Toggle whether the note is selected for printing\n\t\tcontroller.toggleIsSelectedForPrint = function toggleIsSelectedForPrint(note)\n\t\t{\n\t\t\tnote.isSelected = !note.isSelected;\n\t\t};\n\n\t}\n]);\n\n\nvar itvSet = null;\nvar itvCheck = null;\nvar editingNoteId = null;","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'scheduleService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\t/*\n\t\tcontroller.recordtabs2 = [ \n\t\t {id : 0,name : 'Master',url : 'partials/master.html'},\n\t\t {id : 1,name : 'Summary',url : 'partials/summary.html'},\n\t\t {id : 2,name : 'Rx',url : 'partials/rx.jsp'},\n\t\t {id : 3,name : 'Msg',url : 'partials/summary.html'},\n\t\t {id : 4,name : 'Trackers',url : 'partials/tracker.jsp'},\n\t\t {id : 5,name : 'Consults',url : 'partials/summary.html'},\n\t\t {id : 6,name : 'Forms',url : 'partials/formview.html'},\n\t\t {id : 7,name : 'Prevs/Measurements',url : 'partials/summary.html'},\n\t\t {id : 8,name : 'Ticklers',url : 'partials/summary.html'},\n\t\t {id : 9,name : 'MyOscar',url : 'partials/blank.jsp'},\n\t\t {id : 10,name : 'Allergies',url : 'partials/summary.html'},\n\t\t {id : 11,name : 'CPP',url : 'partials/cpp.html'},\n\t\t {id : 12,name : 'Labs/Docs',url : 'partials/labview.html'},\n\t\t {id : 13,name : 'Billing',url : 'partials/billing.jsp'}\t\n\t\t*/\n\t\tcontroller.recordtabs2 = [];\n\t\t/*\n\t\t                 \t {id : 0,displayName : 'Details'  ,path : 'record.details'},\n\t\t                 \t {id : 1,displayName : 'Summary'  ,path : 'record.summary'},\n\t\t                 \t {id : 2,displayName : 'Forms'    ,path : 'record.forms'},\n\t\t                 \t {id : 3,displayName : 'Labs/Docs',path : 'partials/eform.jsp'},\n\t\t                 \t {id : 4,displayName : 'Rx'       ,path : 'partials/eform.jsp'}];\n\t\t*/\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//var transitionP = $state.transitionTo(controller.recordtabs2[0].path,$stateParams,{location:'replace',notify:true});\n\t\t//console.log(\"transition \",transitionP);\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t\t//console.log(controller.recordtabs2[temp].path);\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn ($state.current.name === tab.state);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tconsole.log(\"whats the val \", (newVal != oldVal));\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$rootScope.$emit('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\t// if (controller.page.encounterNote.issueDescriptions == null)\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions = controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\t// else\n\t\t\t\t// {\n\t\t\t\t// \tcontroller.page.encounterNote.issueDescriptions += \",\" + controller.page.assignedCMIssues[i].issue.description;\n\t\t\t\t// }\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$rootScope.$emit('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tscheduleService.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\n\t\tconsole.log('RecordCtrlEnd', $state);\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t// controller.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t// controller.$storage.hideNote = showNoteAfterLoadingFlag;\n\t\t\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$rootScope.$emit('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$rootScope.$emit('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","angular.module('PatientList').controller('PatientList.PatientListProgramController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\t$scope.$on('updatePatientList', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientList=' + JSON.stringify(data));\n\t\t\tcontroller.updateData(data.currentPage, data.pageSize);\n\t\t});\n\n\n\t\t//the currentPage is 0 based\n\t\tcontroller.updateData = function updateData(currentPage, pageSize)\n\t\t{\n\t\t\tvar startIndex = currentPage * pageSize;\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/program/patientList?startIndex=' + startIndex + '&numToReturn=' + pageSize,\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders:\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.admissions = results.data.content;\n\t\t\t\t\t$scope.$emit('updatePatientListPagination', results.data.total);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//initialize..\n\t\tcontroller.updateData(0, controller.pageSize);\n\t\t$scope.$emit('togglePatientListFilter', false);\n\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListDemographicSetController', [\n\t'$scope',\n\t'$http',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\treportingService.getDemographicSetList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.sets = results.content;\n\t\t\t},\n\t\t\tfunction error(error)\n\t\t\t{\n\t\t\t\talert('Failed to get sets lists.');\n\t\t\t});\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListConfigController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'config',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tconfig)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.patientListConfig = config;\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\tcontroller.saveConfiguration = function saveConfiguration()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.patientListConfig);\n\t\t};\n\t}\n]);","angular.module('PatientList').controller('PatientList.PatientListAppointmentListController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$filter',\n\t'$uibModal',\n\t'$state',\n\t'Navigation',\n\t'scheduleService',\n\t'providerService',\n\t'patientListState',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$state,\n\t\tNavigation,\n\t\tscheduleService,\n\t\tproviderService,\n\t\tpatientListState)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.statusCodeMap = new Map();\n\t\tcontroller.statuses = null;\n\n\t\tcontroller.dateOptions = {\n\t\t\tshowWeeks: false\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\t$scope.selectedDate = null;\n\n\t\t$scope.$watch('selectedDate', function(newValue, oldValue)\n\t\t{\n\t\t\tif(newValue !== oldValue)\n\t\t\t{\n\t\t\t\tscheduleService.selectedDate = newValue;\n\t\t\t}\n\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Load Remote Data\n\t\t//=========================================================================/\n\n\t\tscheduleService.getStatuses().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.statuses = results.content;\n\t\t\t\tcontroller.statusCodeMap = new Map(controller.statuses.map(i => [i.status, i]));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\tcontroller.getAppointmentStatusDescriptionByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet description = \"\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tdescription = status.description;\n\t\t\t}\n\t\t\treturn description;\n\t\t};\n\n\t\tcontroller.getAppointmentStatusColourByStatusCode = function (statusCode)\n\t\t{\n\t\t\tlet status = controller.statusCodeMap.get(statusCode);\n\t\t\tlet colour = \"#000000\";\n\t\t\tif(status)\n\t\t\t{\n\t\t\t\tcolour = status.color;\n\t\t\t}\n\t\t\treturn colour;\n\t\t};\n\n\t\tcontroller.today = function today()\n\t\t{\n\t\t\tcontroller.appointmentDate = new Date();\n\t\t};\n\n\t\tcontroller.today();\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.appointmentDate = null;\n\t\t};\n\n\t\tcontroller.open = function open($event)\n\t\t{\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t\tcontroller.opened = true;\n\t\t};\n\n\t\tDate.prototype.AddDays = function AddDays(noOfDays)\n\t\t{\n\t\t\tthis.setTime(this.getTime() + (noOfDays * (1000 * 60 * 60 * 24)));\n\t\t\treturn this;\n\t\t};\n\n\t\tcontroller.switchDay = function switchDay(n)\n\t\t{\n\t\t\tvar dateNew = controller.appointmentDate;\n\t\t\tdateNew.AddDays(n);\n\n\t\t\tcontroller.appointmentDate = dateNew;\n\n\t\t\tvar formattedDate = $filter('date')(dateNew, 'yyyy-MM-dd');\n\n\t\t\tcontroller.changeApptList(formattedDate);\n\n\n\t\t};\n\n\t\tcontroller.changeApptDate = function changeApptDate()\n\t\t{\n\t\t\tif (controller.appointmentDate == undefined)\n\t\t\t{\n\t\t\t\tcontroller.today();\n\t\t\t}\n\t\t\tvar formattedDate = $filter('date')(controller.appointmentDate, 'yyyy-MM-dd');\n\t\t\tcontroller.changeApptList(formattedDate);\n\t\t};\n\n\t\tcontroller.changeApptList = function changeApptList(day)\n\t\t{\n\t\t\tcontroller.currenttab = patientListState.tabItems[0];\n\t\t\tcontroller.currenttab.serviceMethod = function ()\n\t\t\t{\n\t\t\t\treturn scheduleService.getAppointments(day).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\t\t\tcontroller.showFilter = true;\n\t\t\t$scope.$emit('juno:patientListRefresh');\n\t\t};\n\n\t\tcontroller.addNewAppointment = function addNewAppointment()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentAdd.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentAddController as appointmentAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tapptDate: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.appointmentDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.viewAppointment = function viewAppointment(apptNo)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/schedule/appointmentView.jsp',\n\t\t\t\tcontroller: 'Schedule.AppointmentViewController as appointmentViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t},\n\t\t\t\t\tappointment: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getAppointment(apptNo);\n\t\t\t\t\t},\n\t\t\t\t\tstatusList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleService.getStatuses();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.switchDay(0);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isScheduleActive = function isScheduleActive()\n\t\t{\n\t\t\treturn $state.current.name == 'schedule';\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('PatientList').controller('PatientList.PatientListController', [\n\n\t'$scope',\n\t'$http',\n\t'$state',\n\t'$uibModal',\n\t'angularUtil',\n\t'Navigation',\n\t'personaService',\n\t'providerService',\n\t'patientListState',\n\t'scheduleService',\n\t'reportingService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$state,\n\t\t$uibModal,\n\t\tangularUtil,\n\t\tNavigation,\n\t\tpersonaService,\n\t\tproviderService,\n\t\tpatientListState,\n\t\tscheduleService,\n\t\treportingService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.sidebar = Navigation;\n\t\tcontroller.showFilter = true;\n\t\tcontroller.patientListConfig = {};\n\n\n\t\tcontroller.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo != 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t};\n\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t{\n\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hidePatientList();\n\t\t\t\t\t\tconsole.log('hiding patientlist');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"params\", params);\n\t\t\t\t$state.go('record.summary', params);\n\t\t\t}\n\t\t};\n\n\t\t//for filter box\n\t\tcontroller.query = '';\n\n\n\t\tcontroller.isActive = function isActive(temp)\n\t\t{\n\t\t\tif (controller.currenttab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currenttab.id;\n\t\t};\n\n\t\tcontroller.isMoreActive = function isMoreActive(temp)\n\t\t{\n\t\t\tif (controller.currentmoretab === null)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn temp === controller.currentmoretab.id;\n\t\t};\n\n\t\tcontroller.showPatientList = function showPatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', true);\n\t\t};\n\n\t\tcontroller.hidePatientList = function hidePatientList()\n\t\t{\n\t\t\t$scope.$emit('configureShowPatientList', false);\n\t\t};\n\n\t\tcontroller.changeMoreTab = function changeMoreTab(moreTabItemsIndex, filter)\n\t\t{\n\t\t\tvar beforeChangeTab = controller.currentmoretab;\n\t\t\tcontroller.currentmoretab = controller.moreTabItems[moreTabItemsIndex];\n\n\t\t\tcontroller.showFilter = true;\n\t\t\tcontroller.currenttab = null;\n\t\t\tcontroller.refresh(filter);\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(tabItemIndex, filter)\n\t\t{\n\t\t\tif(controller.currenttab !== patientListState.tabItems[tabItemIndex])\n\t\t\t{\n\t\t\t\tcontroller.currenttab = patientListState.tabItems[tabItemIndex];\n\t\t\t\tcontroller.showFilter = true;\n\t\t\t\tcontroller.currentmoretab = null;\n\t\t\t\tcontroller.refresh(filter);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getMoreTabClass = function getMoreTabClass(id)\n\t\t{\n\t\t\tif (controller.currentmoretab != null && id == controller.currentmoretab.id)\n\t\t\t{\n\t\t\t\treturn \"more-tab-highlight\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\tcontroller.currentPage = 0;\n\t\tcontroller.pageSize = 8;\n\t\tcontroller.patients = null;\n\n\t\tcontroller.numberOfPages = function numberOfPages()\n\t\t{\n\t\t\tif (controller.nPages == null || controller.nPages == 0)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn controller.nPages;\n\t\t};\n\n\n\t\t$scope.$on('updatePatientListPagination', function(event, data)\n\t\t{\n\t\t\tconsole.log('updatePatientListPagination=' + data);\n\t\t\tcontroller.nPages = Math.ceil(data / controller.pageSize);\n\t\t\tconsole.log('nPages=' + controller.nPages);\n\t\t});\n\n\n\t\tcontroller.changePage = function changePage(pageNum)\n\t\t{\n\t\t\tcontroller.currentPage = pageNum;\n\t\t\t//broadcast the change page\n\t\t\t$scope.$broadcast('updatePatientList',\n\t\t\t{\n\t\t\t\tcurrentPage: controller.currentPage,\n\t\t\t\tpageSize: controller.pageSize\n\t\t\t});\n\t\t};\n\n\t\t$scope.$on('togglePatientListFilter', function(event, data)\n\t\t{\n\t\t\tconsole.log(\"received a togglePatientListFilter event:\" + data);\n\t\t\tcontroller.showFilter = data;\n\t\t});\n\n\n\t\tcontroller.process = function process(tab, filter)\n\t\t{\n\t\t\ttab.serviceMethod().then(\n\t\t\t\tfunction success(resultList)\n\t\t\t\t{\n\t\t\t\t\tcontroller.patients = resultList;\n\n\t\t\t\t\tcontroller.nPages = 1;\n\t\t\t\t\tif (controller.patients != null && controller.patients.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.nPages = Math.ceil(controller.patients.length / controller.pageSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.template = tab.template;\n\t\t\t\t\tNavigation.load(controller.template);\n\t\t\t\t\tcontroller.changePage(0);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\talert('error loading data for patient list:' + error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.refresh = function refresh(filter)\n\t\t{\n\n\t\t\tif (controller.currenttab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currenttab, filter);\n\t\t\t}\n\t\t\tif (controller.currentmoretab != null)\n\t\t\t{\n\t\t\t\tcontroller.process(controller.currentmoretab, filter);\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function()\n\t\t{\n\t\t\tcontroller.refresh();\n\t\t});\n\n\t\tproviderService.getRecentPatientList().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tpersonaService.getPatientListConfig().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\n\t\tcontroller.getTabItems = function getTabItems()\n\t\t{\n\t\t\treturn patientListState.tabItems;\n\t\t};\n\n\t\tcontroller.manageConfiguration = function manageConfiguration()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientlist/patientListConfiguration.jsp',\n\t\t\t\tcontroller: 'PatientList.PatientListConfigController as patientListConfigCtrl',\n\t\t\t\tbackdrop: false,\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconfig: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.patientListConfig;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tpersonaService.setPatientListConfig(results).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.patientListConfig = results;\n\t\t\t\t\t\t\tcontroller.pageSize = controller.patientListConfig.numberOfApptstoShow;\n\t\t\t\t\t\t\t$scope.$emit('updatePatientListPagination', controller.patients.length);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tpatientListState.tabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Appts.\",\n\t\t\t\ttemplate: \"src/patientlist/patientList1.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\t// this gets overwritten by the appointmentListController, when it sets specific dates\n\t\t\t\t\treturn scheduleService.getAppointments('today').then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.patients;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Recent\",\n\t\t\t\ttemplate: \"src/patientlist/recent.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getRecentPatientList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.recentPatientList = results;\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.moreTabItems = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: \"Patient Sets\",\n\t\t\t\ttemplate: \"src/patientlist/demographicSets.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn reportingService.getDemographicSetList().then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn results.content;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Caseload\",\n\t\t\t\ttemplate: \"src/patientlist/program.jsp\",\n\t\t\t\tserviceMethod: function ()\n\t\t\t\t{\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tcontroller.changeTab(0);\n\t}\n]);\n","angular.module(\"PatientList\").service(\"patientListState\", [\n\t// Store variables here that must be accessible across controllers in patientlist\n\tfunction()\n\t{\n\t\tvar service = this;\n\n\t\tservice.tabItems = [];\n\n\t}\n]);","'use strict';\n\nangular.module('PatientList', ['Common', 'Common.Services']);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        console.log('TABLE PARAMS', NgTableParams);\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n                \tconsole.log(\"k2a feed response\", response);\n\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateMessages();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n            }\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n    }\n]);","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Patient').controller('Patient.NewPatientController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'demographicService',\n\t'securityService',\n\t'programService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tprogramService,\n\t\tstaticDataService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.demographic = {};\n\n\t\tcontroller.submitDisabled = false;\n\n\t\t//get access right for creating new patient\n\t\tsecurityService.hasRight(\"_demographic\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.hasRight = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.programs = results;\n\t\t\t\tif (controller.programs.length == 1)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographic.admissionProgramId = controller.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//get genders to be selected\n\t\tcontroller.genders = staticDataService.getGenders();\n\n\t\tcontroller.save = function save(ngModelContoller)\n\t\t{\n\t\t\tconsole.log(controller.demographic.lastName);\n\t\t\tconsole.log(controller.demographic.firstName);\n\t\t\tconsole.log(controller.demographic.dobYear);\n\t\t\tconsole.log(controller.demographic.dobMonth);\n\t\t\tconsole.log(controller.demographic.dobDay);\n\t\t\tconsole.log(controller.demographic.sex);\n\t\t\tconsole.log(controller.demographic);\n\t\t\tconsole.log(ngModelContoller.$valid);\n\t\t\tconsole.log($scope);\n\n\t\t\tcontroller.submitDisabled = true;\n\n\t\t\tif (ngModelContoller.$valid)\n\t\t\t{\n\t\t\t\tconsole.log(\"Saving...\");\n\n\t\t\t\tif (!controller.isCorrectDate(controller.demographic.dobYear,\n\t\t\t\t\t\tcontroller.demographic.dobMonth, controller.demographic.dobDay))\n\t\t\t\t{\n\t\t\t\t\talert(\"Incorrect Date of Birth!\");\n\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.demographic.dateOfBirth =\n\t\t\t\t\tcontroller.demographic.dobYear + '-' +\n\t\t\t\t\tcontroller.demographic.dobMonth + \"-\" +\n\t\t\t\t\tcontroller.demographic.dobDay;\n\n\t\t\t\tcontroller.demographic.patientStatusDate = new Date();\n\t\t\t\tcontroller.demographic.dateJoined = new Date();\n\t\t\t\tcontroller.demoRetVal = {};\n\n\t\t\t\tdemographicService.saveDemographic(controller.demographic).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tcontroller.demoRetVal = results;\n\t\t\t\t\t\t$uibModalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"ERR!!\");\n\t\t\t\tcontroller.submitDisabled = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.ok = function ok()\n\t\t{\n\t\t\t$uibModalInstance.close(controller.selected.item);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.capName = function capName()\n\t\t{\n\t\t\tif (controller.demographic.lastName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.lastName = controller.demographic.lastName.toUpperCase();\n\t\t\t}\n\n\t\t\tif (controller.demographic.firstName != null)\n\t\t\t{\n\t\t\t\tcontroller.demographic.firstName = controller.demographic.firstName.toUpperCase();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isCorrectDate = function isCorrectDate(year, month, day)\n\t\t{\n\t\t\tvar d = new Date(year, month - 1, day);\n\n\t\t\tif (d == \"Invalid Date\") return false;\n\t\t\tif (d.getFullYear() != year) return false;\n\t\t\tif (d.getMonth() != month - 1) return false;\n\t\t\tif (d.getDate() != day) return false;\n\n\t\t\treturn true;\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","'use strict';\n\n/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Layout').controller('Layout.NavBarController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$q',\n\t'$timeout',\n\t'$location',\n\t'$state',\n\t'$uibModal',\n\t'securityService',\n\t'personaService',\n\t'billingService',\n\t'inboxService',\n\t'messageService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$q,\n\t\t$timeout,\n\t\t$location,\n\t\t$state,\n\t\t$uibModal,\n\t\tsecurityService,\n\t\tpersonaService,\n\t\tbillingService,\n\t\tinboxService,\n\t\tmessageService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.unAckLabDocTotal = 0;\n\t\t\tcontroller.unreadMessageTotal = 0;\n\t\t\tcontroller.demographicSearch = null;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'w'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.searchRights = results.content[0];\n\t\t\t\t\t\tcontroller.newDemographicRights = results.content[1];\n\t\t\t\t\t\tcontroller.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.getUnAckLabDocCount();\n\t\t\t\t\tcontroller.getUnreadMessageCount();\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tcontroller.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tcontroller.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tcontroller.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tcontroller.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tcontroller.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tcontroller.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tcontroller.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tcontroller.menuItems = results.menus.menu.items;\n\t\t\t\t\tcontroller.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tcontroller.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tcontroller.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tcontroller.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tcontroller.demographicSearch = null;\n\t\t};\n\n\t\tcontroller.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t{\n\t\t\t\tterm: search\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'search'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t},\n\t\t\t{\n\t\t\t\treload: 'record.details'\n\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tcontroller.transition = function transition(item)\n\t\t{\n\t\t\tconsole.log('transition', item);\n\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Admin\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../administration/\";\n\t\t\t\t\twname = \"admin\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openMessenger = function(item)\n\t\t{\n\t\t\tif (controller.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(controller.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patient/newPatient.jsp',\n\t\t\t\tcontroller: 'Patient.NewPatientController as newPatientCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: size\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\t\t\t\t\tconsole.log($location.path());\n\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\n\t\t\t\t\tconsole.log($location.path());\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tconsole.log($('#myModal'));\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn ($state.current.name === tab.state);\n\t\t};\n\n\t\tcontroller.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\n\t\t\t\tvar labelsToShow = ['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tcontroller.smallNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Dashboard'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = true;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tconsole.log(\"Layout.BodyController updating showPatientList\", value);\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplayFieldErrors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.displayFieldErrors) ||\n\t\t\t$scope.displayFieldErrors !== false)\n\t\t{\n\t\t\t$scope.displayFieldErrors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.displayFieldErrors &&\n\t\t\t\t$scope.errors.displayFieldErrors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.rows = '@caRows';\n\tscope.max_characters = '@caMaxCharacters';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.model)\n\t\t{\n\t\t\t$scope.model = '';\n\t\t}\n\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t{\n\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t}\n\t\t});\n\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.options = '=caOptions';\n\tscope.include_empty_option = '@caEmptyOption';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t};\n\n  return {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function(e) {\n\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","'use strict';\n\n/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Common.Directives').directive('selectOptionTooltip', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\tconsole.log(\"CUSTOM SELECT TOOLTIP LOADED\");\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.addCustomAttr = function (attr, element, data, fnDisableIfTrue)\n\t\t\t{\n\t\t\t\t$(\"option\", element).each(function (i, e)\n\t\t\t\t{\n\t\t\t\t\tvar locals = {};\n\t\t\t\t\tlocals[attr] = data[i];\n\t\t\t\t\t$(e).attr('title', fnDisableIfTrue($scope, locals));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar expElements = attribute['selectOptionTooltip'].match(/(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)/);\n\t\t\tvar attrToWatch = expElements[3];\n\t\t\tvar fnDisableIfTrue = $parse(expElements[1]);\n\n\t\t\t$scope.$watchCollection(attrToWatch, function (newValue)\n\t\t\t{\n\t\t\t\tif (newValue)\n\t\t\t\t\t$scope.addCustomAttr(expElements[2], element, newValue, fnDisableIfTrue);\n\t\t\t});\n\t\t};\n\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\trequire: 'ngModel',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","/*\r\n*  AngularJs Fullcalendar Wrapper for the JQuery FullCalendar\r\n*  API @ http://arshaw.com/fullcalendar/\r\n*\r\n*  Angular Calendar Directive that takes in the [eventSources] nested array object as the ng-model and watches it deeply changes.\r\n*       Can also take in multiple event urls as a source object(s) and feed the events per view.\r\n*       The calendar will watch any eventSource array and update itself when a change is made.\r\n*\r\n*/\r\n\r\n/*\r\n * Copied and modified for use at Cloudpractice because I couldn't figure out how to keep it from\r\n * loading before our initialization was done.  I've marked the changes with a CP below.\r\n */\r\n\r\nangular.module('ui.calendar', [])\r\n  .constant('uiCalendarConfig', {calendars: {}})\r\n  .controller('uiCalendarCtrl', ['$scope', \r\n                                 '$locale', function(\r\n                                  $scope, \r\n                                  $locale){\r\n\r\n      var sources = $scope.eventSources,\r\n          extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop,\r\n\r\n          wrapFunctionWithScopeApply = function(functionToWrap){\r\n              return function(){\r\n                  // This may happen outside of angular context, so create one if outside.\r\n\r\n                  if ($scope.$root.$$phase) {\r\n                      return functionToWrap.apply(this, arguments);\r\n                  } else {\r\n                      var args = arguments;\r\n                      var self = this;\r\n                      return $scope.$root.$apply(function(){\r\n                          return functionToWrap.apply(self, args);\r\n                      });\r\n                  }\r\n              };\r\n          };\r\n\r\n      var eventSerialId = 1;\r\n      // @return {String} fingerprint of the event object and its properties\r\n      this.eventFingerprint = function(e) {\r\n        if (!e._id) {\r\n          e._id = eventSerialId++;\r\n        }\r\n        \r\n        var extraSignature = extraEventSignature({event: e}) || '';\r\n        var start = moment.isMoment(e.start) ? e.start.unix() : (e.start ? moment(e.start).unix() : '');\r\n        var end =   moment.isMoment(e.end)   ? e.end.unix()   : (e.end   ? moment(e.end).unix()   : '');\r\n        \r\n        // This extracts all the information we need from the event. http://jsperf.com/angular-calendar-events-fingerprint/3\r\n        return \"\" + e._id + (e.id || '') + (e.title || '') + (e.url || '') + start + end +\r\n          (e.allDay || '') + (e.className || '') + extraSignature;\r\n      };\r\n\r\n      var sourceSerialId = 1, sourceEventsSerialId = 1;\r\n      // @return {String} fingerprint of the source object and its events array\r\n      this.sourceFingerprint = function(source) {\r\n          var fp = '' + (source.__id || (source.__id = sourceSerialId++)),\r\n              events = angular.isObject(source) && source.events;\r\n          if (events) {\r\n              fp = fp + '-' + (events.__id || (events.__id = sourceEventsSerialId++));\r\n          }\r\n          return fp;\r\n      };\r\n\r\n      // @return {Array} all events from all sources\r\n      this.allEvents = function() {\r\n        // do sources.map(&:events).flatten(), but we don't have flatten\r\n        var arraySources = [];\r\n        for (var i = 0, srcLen = sources.length; i < srcLen; i++) {\r\n          var source = sources[i];\r\n          if (angular.isArray(source)) {\r\n            // event source as array\r\n            arraySources.push(source);\r\n          } else if(angular.isObject(source) && angular.isArray(source.events)){\r\n            // event source as object, ie extended form\r\n            var extEvent = {};\r\n            for(var key in source){\r\n              if(key !== '_id' && key !== 'events'){\r\n                 extEvent[key] = source[key];\r\n              }\r\n            }\r\n            for(var eI = 0;eI < source.events.length;eI++){\r\n              angular.extend(source.events[eI],extEvent);\r\n            }\r\n            arraySources.push(source.events);\r\n          }\r\n        }\r\n        return Array.prototype.concat.apply([], arraySources);\r\n      };\r\n\r\n      // Track changes in array of objects by assigning id tokens to each element and watching the scope for changes in the tokens\r\n      // @param {Array|Function} arraySource array of objects to watch\r\n      // @param tokenFn {Function} that returns the token for a given object\r\n      // @return {Object}\r\n      //  subscribe: function(scope, function(newTokens, oldTokens))\r\n      //    called when source has changed. return false to prevent individual callbacks from firing\r\n      //  onAdded/Removed/Changed:\r\n      //    when set to a callback, called each item where a respective change is detected\r\n      this.changeWatcher = function(arraySource, tokenFn) {\r\n        var self;\r\n        var getTokens = function() {\r\n          var array = angular.isFunction(arraySource) ? arraySource() : arraySource;\r\n          var result = [], token, el;\r\n          for (var i = 0, n = array.length; i < n; i++) {\r\n            el = array[i];\r\n            token = tokenFn(el);\r\n            map[token] = el;\r\n            result.push(token);\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // @param {Array} a\r\n        // @param {Array} b\r\n        // @return {Array} elements in that are in a but not in b\r\n        // @example\r\n        //  subtractAsSets([6, 100, 4, 5], [4, 5, 7]) // [6, 100]\r\n        var subtractAsSets = function(a, b) {\r\n          var result = [], inB = {}, i, n;\r\n          for (i = 0, n = b.length; i < n; i++) {\r\n            inB[b[i]] = true;\r\n          }\r\n          for (i = 0, n = a.length; i < n; i++) {\r\n            if (!inB[a[i]]) {\r\n              result.push(a[i]);\r\n            }\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // Map objects to tokens and vice-versa\r\n        var map = {};\r\n\r\n        // Compare newTokens to oldTokens and call onAdded, onRemoved, and onChanged handlers for each affected event respectively.\r\n        var applyChanges = function(newTokens, oldTokens) {\r\n          var i, n, el, token;\r\n          var replacedTokens = {};\r\n          var removedTokens = subtractAsSets(oldTokens, newTokens);\r\n          for (i = 0, n = removedTokens.length; i < n; i++) {\r\n            var removedToken = removedTokens[i];\r\n            el = map[removedToken];\r\n            delete map[removedToken];\r\n            var newToken = tokenFn(el);\r\n            // if the element wasn't removed but simply got a new token, its old token will be different from the current one\r\n            if (newToken === removedToken) {\r\n              self.onRemoved(el);\r\n            } else {\r\n              replacedTokens[newToken] = removedToken;\r\n              self.onChanged(el);\r\n            }\r\n          }\r\n\r\n          var addedTokens = subtractAsSets(newTokens, oldTokens);\r\n          for (i = 0, n = addedTokens.length; i < n; i++) {\r\n            token = addedTokens[i];\r\n            el = map[token];\r\n            if (!replacedTokens[token]) {\r\n              self.onAdded(el);\r\n            }\r\n          }\r\n        };\r\n        return self = {\r\n          subscribe: function(scope, onArrayChanged) {\r\n            scope.$watch(getTokens, function(newTokens, oldTokens) {\r\n              var notify = !(onArrayChanged && onArrayChanged(newTokens, oldTokens) === false);\r\n              if (notify) {\r\n                applyChanges(newTokens, oldTokens);\r\n              }\r\n            }, true);\r\n          },\r\n          onAdded: angular.noop,\r\n          onChanged: angular.noop,\r\n          onRemoved: angular.noop\r\n        };\r\n      };\r\n\r\n      this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig){\r\n          var config = {};\r\n\r\n          angular.extend(config, uiCalendarConfig);\r\n          angular.extend(config, calendarSettings);\r\n\r\n          angular.forEach(config, function(value,key){\r\n            if (typeof value === 'function'){\r\n              config[key] = wrapFunctionWithScopeApply(config[key]);\r\n            }\r\n          });\r\n\r\n          return config;\r\n      };\r\n\r\n    this.getLocaleConfig = function(fullCalendarConfig) {\r\n      if (!fullCalendarConfig.lang || fullCalendarConfig.useNgLocale) {\r\n        // Configure to use locale names by default\r\n        var tValues = function(data) {\r\n          // convert {0: \"Jan\", 1: \"Feb\", ...} to [\"Jan\", \"Feb\", ...]\r\n          var r, k;\r\n          r = [];\r\n          for (k in data) {\r\n            r[k] = data[k];\r\n          }\r\n          return r;\r\n        };\r\n        var dtf = $locale.DATETIME_FORMATS;\r\n        return {\r\n          monthNames: tValues(dtf.MONTH),\r\n          monthNamesShort: tValues(dtf.SHORTMONTH),\r\n          dayNames: tValues(dtf.DAY),\r\n          dayNamesShort: tValues(dtf.SHORTDAY)\r\n        };\r\n      }\r\n      return {};\r\n    };\r\n  }])\r\n  .directive('uiCalendar', ['uiCalendarConfig', function(uiCalendarConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        eventSources:'=ngModel',\r\n        calendarWatchEvent: '&',\r\n        enabled: '=ngEnabled'     // CP: Added an option to enable the calendar\r\n      },\r\n      controller: 'uiCalendarCtrl',\r\n      link: function(scope, elm, attrs, controller) {\r\n\r\n        var sources = scope.eventSources,\r\n            sourcesChanged = false,\r\n            calendar,\r\n            eventSourcesWatcher = controller.changeWatcher(sources, controller.sourceFingerprint),\r\n            eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventFingerprint),\r\n            options = null;\r\n\r\n        function getOptions(){\r\n          var calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {},\r\n              fullCalendarConfig;\r\n\r\n          fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig);\r\n\r\n          var localeFullCalendarConfig = controller.getLocaleConfig(fullCalendarConfig);\r\n          angular.extend(localeFullCalendarConfig, fullCalendarConfig);\r\n          options = { eventSources: sources };\r\n          angular.extend(options, localeFullCalendarConfig);\r\n          //remove calendars from options\r\n          options.calendars = null;\r\n\r\n          var options2 = {};\r\n          for(var o in options){\r\n            if(o !== 'eventSources'){\r\n              options2[o] = options[o];\r\n            }\r\n          }\r\n          return JSON.stringify(options2);\r\n        }\r\n\r\n        scope.destroyCalendar = function(){\r\n          if(calendar && calendar.fullCalendar){\r\n            calendar.fullCalendar('destroy');\r\n          }\r\n          if(attrs.calendar) {\r\n            calendar = uiCalendarConfig.calendars[attrs.calendar] = $(elm).html('');\r\n          } else {\r\n            calendar = $(elm).html('');\r\n          }\r\n        };\r\n\r\n        scope.initCalendar = function(){\r\n          // CP: The calendar won't initialize when it's not enabled\r\n          if(scope.enabled) {\r\n\t\t    if (!calendar) {\r\n\t\t      calendar = angular.element(elm).html('');\r\n\t\t    }\r\n\t\t    calendar.fullCalendar(options);\r\n\t\t    if(attrs.calendar) {\r\n\t\t      uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n\t\t    }\r\n\t\t  }\r\n        };\r\n        scope.$on('$destroy', function() {\r\n          scope.destroyCalendar();\r\n        });\r\n\r\n        eventSourcesWatcher.onAdded = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar(options);\r\n            if (attrs.calendar) {\r\n                uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n            }\r\n            calendar.fullCalendar('addEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onRemoved = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onChanged = function() {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('refetchEvents');\r\n            sourcesChanged = true;\r\n          }\r\n\r\n        };\r\n\r\n        eventsWatcher.onAdded = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('renderEvent', event, (event.stick ? true : false));\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onRemoved = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEvents', event._id);\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onChanged = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            var clientEvents = calendar.fullCalendar('clientEvents', event._id);\r\n            for (var i = 0; i < clientEvents.length; i++) {\r\n              var clientEvent = clientEvents[i];\r\n              clientEvent = angular.extend(clientEvent, event);\r\n              calendar.fullCalendar('updateEvent', clientEvent);\r\n            }\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.subscribe(scope);\r\n        eventsWatcher.subscribe(scope, function() {\r\n          if (sourcesChanged === true) {\r\n            sourcesChanged = false;\r\n            // return false to prevent onAdded/Removed/Changed handlers from firing in this case\r\n            return false;\r\n          }\r\n        });\r\n\r\n        scope.$watch(getOptions, function(newValue, oldValue) {\r\n          if(newValue !== oldValue) {\r\n            scope.destroyCalendar();\r\n            scope.initCalendar();\r\n          } else if((newValue && angular.isUndefined(calendar))) {\r\n            scope.initCalendar();\r\n          }\r\n        });\r\n      }\r\n    };\r\n}]);\r\n","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\tconsole.log('DRAGGABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\tconsole.log('RESIZABLE DIRECTIVE LOADED');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\n\t\t\t\tconsole.log('RESIZABLE DIRECTIVE HEIGHT ', $(\".note-editor-textarea\").height());\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: 'Name',\n\t\t\t\t\t'term': search,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(function success(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(data.content);\n\t\t\t\t\t\tconsole.log('dataa', data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = results.data;\n\t\t\t\t\t\tvar meta = results.meta;\n\n\t\t\t\t\t\tif(meta.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn Juno.Common.Util.formatName(demographic.firstName, demographic.lastName);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onSearchFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tconsole.log(\"- Formatting Match -------------\");\n\t\t\t\tconsole.log($model);\n\t\t\t\tconsole.log(\"--------------------------------\");\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\tconsole.log('typeaheadHelper::onSelect - setting model', $item);\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onChange - setting model (isTypeaheadSearchQuery)');\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"systemPreferenceService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/systemPreference';\n\n\t\tservice.getPreference = function getPreference(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::getPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPreference = function setPreference(key, value)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + key, value).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::setPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isPreferenceEnabled = function isPreferenceEnabled(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::isPreferenceEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference enabled status\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgender\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasOneOfPermissions = function hasOneOfPermissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.hasPermission = function hasPermission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"scheduleService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.selectedDate = null;\n\n\t\tservice.getStatuses = function getStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/statuses',\n\t\t\t\tservice.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching statuses\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTypes = function getTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'schedule/types',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getStatuses error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointments = function getAppointments(day)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'schedule/day/' + encodeURIComponent(day), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointments\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAppointment = function addAppointment(appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(appointment),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::addAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointment = function getAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/getAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.appointment);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.deleteAppointment = function deleteAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/deleteAppointment',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\t'id': apptNo\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::deleteAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while deleting appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.appointmentHistory = function appointmentHistory(demoNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/' +\n\t\t\t\t\tencodeURIComponent(demoNo) + \"/appointmentHistory\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::appointmentHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting appointment history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.cancelAppointment = function cancelAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'C'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::cancelAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while cancelling appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.noShowAppointment = function noShowAppointment(apptNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'schedule/appointment/' +\n\t\t\t\t\tencodeURIComponent(apptNo) + \"/updateStatus\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\tstatus: 'N'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::noShowAppointment error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting no show appointment\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleGroups = function getScheduleGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/groups',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getScheduleGroups error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSchedulesForCalendar = function getSchedulesForCalendar(\n\t\t\tproviderId,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\tsiteName\n\t\t)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'schedule/calendar/';\n\t\t\turl += encodeURIComponent(providerId) + '/';\n\t\t\turl += '?startDate=' + encodeURIComponent(startDate);\n\t\t\turl += '&endDate=' + encodeURIComponent(endDate);\n\n\t\t\tif(siteName != null)\n\t\t\t{\n\t\t\t\turl += '&site=' + encodeURIComponent(siteName);\n\t\t\t}\n\n\t\t\tjunoHttp.get(\n\t\t\t\turl,\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSchedulesForCalendar error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getScheduleTemplateCodes = function getAvailabilityCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/templateCodes',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAvailabilityTypes error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAppointmentStatuses = function getAppointmentStatuses()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'schedule/calendar/statuses',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getAppointmentStatuses error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSites = function getSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(\n\t\t\t\tservice.apiPath + 'sites',\n\t\t\t\t{headers: Juno.Common.ServiceHelper.configHeaders()}\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"scheduleService::getSites error\", errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportingService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/reporting/';\n\n\t\tservice.getDemographicSetList = function getDemographicSetList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'demographicSets/list', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportingService::demographicSets error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching demographicSets\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/settings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"providerService::getRecentDemographicsViewed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results.data);\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\toffset: encodeURIComponent(offset),\n\t\t\t\tnumToReturn: encodeURIComponent(numberToReturn),\n\t\t\t\tnoteConfig: noteConfig\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/' + demographicNo + '/completedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getCompletedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching completed encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur'\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxOutboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxOutbound';\n\n\t\tservice.resendOutboundFax = function resendFax(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id + '/resend').then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::resendFax error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while resending a fax\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\tservice.getNextPushTime = function getNextPushTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPushTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPushTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled push time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t/* provide the endpoint url for downloading the faxed pdf document */\n\t\tservice.getDownloadUrl = function(id)\n\t\t{\n\t\t\treturn service.apiPath + '/' + id + '/download';\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxInboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxInbound';\n\n\t\tservice.getNextPullTime = function getNextPullTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPullTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPullTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled pull time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxAccountService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxAccount';\n\n\t\tservice.listAccounts = function listAccounts(page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::listAccounts error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isEnabled = function isEnabled(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::isEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getAccountSettings = function getAccountSettings(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::getAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAccountSettings = function addAccountSettings(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateAccountSettings = function updateAccountSettings(id, transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.testConnection = function testConnection(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tlet id = transfer.id;\n\t\t\tlet url = service.apiPath + '/testConnection';\n\n\t\t\tif(id && id != null && id !== '')\n\t\t\t{\n\t\t\t\turl = service.apiPath + '/' + transfer.id + '/testConnection'\n\t\t\t}\n\n\t\t\tjunoHttp.post(url, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::validateLogin error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while testing connection\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getInbox = function getInbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/inbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getInbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving inbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOutbox = function getOutbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/outbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getOutbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving outbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errorsHash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {displayFieldErrors} Boolean : Sets flag\n\t\t\t//\t\t- {fieldErrorsLabelMap} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {fieldErrorsLabelMapKey} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errorsHash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errorsHash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    console.log('converted RESULTS: ', results.data);\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while saving demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getLetterheadList = function getLetterheadList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'getLetterheadList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getLetterheadList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching letterheads\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\t\"$q\",\n\t\"demographicService\",\n\tfunction(\n\t\t$q,\n\t\tdemographicService\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.init_autocomplete_values = function init_autocomplete_values(patient, autocomplete_values){\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tdemographicService.getDemographic(patient.patient).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\tresult.dob = moment([result.dobYear, result.dobMonth, result.dobDay]);\n\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tpatient:{\n\t\t\t\t\t\t\tdata: service.formatDemographic(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.formatDemographic = function formatDemographic(result)\n\t\t{\n\t\t\treturn {\n\t\t\t\tuuid: result.demographicNo,\n\t\t\t\tfull_name: result.lastName + ',' + result.firstName,\n\t\t\t\tbirth_date: Juno.Common.Util.formatMomentDate(result.dob),\n\t\t\t\thealth_number: result.hin,\n\t\t\t\tphone_number_primary: result.phone\n\t\t\t};\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.SearchListHelper = function SearchListHelper(defaultParams, searchParams)\n{\n\tvar me = this;\n\n\tme.searchParams = searchParams || {};\n\tme.defaults = {\n\t\tpage: 1,\n\t\tperPage: 10,\n\t};\n\n\tme.initSearchParameters = function initSearchParameters()\n\t{\n\t\tvar fieldName;\n\n\t\t// Merge default params\n\t\tif(Juno.Common.Util.exists(defaultParams))\n\t\t{\n\t\t\tfor(fieldName in defaultParams)\n\t\t\t{\n\t\t\t\tif(defaultParams.hasOwnProperty(fieldName))\n\t\t\t\t{\n\t\t\t\t\tme.defaults[fieldName] = defaultParams[fieldName];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.getParams = function getParams()\n\t{\n\t\tvar outParams = {};\n\t\tfor(var fieldName in me.searchParams)\n\t\t{\n\t\t\tif(me.searchParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.searchParams[fieldName];\n\t\t\t}\n\t\t}\n\t\tfor(var fieldName in me.defaults)\n\t\t{\n\t\t\tif(!outParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.defaults[fieldName];\n\t\t\t}\n\t\t}\n\t\treturn outParams;\n\t};\n\n\tme.initSearchParameters();\n};\n","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable')\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable')\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('bootstrap-sass');\nrequire('ngstorage');\nrequire('./scss/juno.scss');\nrequire('font-awesome/css/font-awesome.min.css');\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'PatientList',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act',\n\t'Admin.Integration.Fax'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController'\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin_popup.jsp',\n\t\t\tcontroller: 'AdminCtrl'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tformListId: 0\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.view',\n\t\t{\n\t\t\turl: '/view/:type/:id?name',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tparams: { name: { dynamic: true } },\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.forms.add',\n\t\t{\n\t\t\turl: '/add/:type/:id',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl'\n\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t\t{\n\t\t\t\turl: '/k2aNotification',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t\t})\n\t\t.state('faxConfig',\n\t\t\t{\n\t\t\t\turl: '/faxConfig',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfiguration.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationController as faxController'\n\t\t\t})\n\t\t.state('faxSendReceive',\n\t\t\t{\n\t\t\t\turl: '/faxSendReceive',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxSendReceive.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxSendReceiveController as faxSendReceiveController'\n\t\t\t})\n\t;\n\n}]);\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/\n","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.settings = {\n\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\tdatetime_no_timezone_format: \"YYYY-MM-DDTHH:mm:ss\",\n\ttime_format: \"h:mma\",\n\tdate_format: \"YYYY-MM-DD\",\n\tdayofweek_format: \"dddd\"\n};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatMomentDate = function formatMomentDate(d) {\n\treturn d.format(Juno.Common.Util.settings.date_format);\n};\n\nJuno.Common.Util.formatMomentTime = function formatMomentTime(d, format) {\n\tif(!format) {\n\t\tformat = Juno.Common.Util.settings.time_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.formatMomentDateTimeNoTimezone = function formatMomentDateTimeNoTimezone(d) {\n\treturn d.format(Juno.Common.Util.settings.datetime_no_timezone_format);\n};\n\nJuno.Common.Util.getDateMoment = function getDateMoment(date_string)\n{\n\treturn moment.utc(date_string, Juno.Common.Util.settings.date_format, true);\n};\n\nJuno.Common.Util.getTimeMoment = function getTimeMoment(time_string)\n{\n\treturn moment.utc(time_string, Juno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDateMomentFromComponents = function getDateMomentFromComponents(year_string, month_string, day_string)\n{\n\treturn moment.utc({year: year_string, month: month_string, day: day_string});\n};\n\nJuno.Common.Util.getDateAndTimeMoment = function getCombinedMoment(dateString, timeString)\n{\n\treturn moment.utc(dateString + \" \" + timeString,\n\t\tJuno.Common.Util.settings.date_format + \" \" +\n\t\tJuno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDatetimeNoTimezoneMoment = function getDatetimeNoTimezoneMoment(datetime_string)\n{\n\treturn moment.utc(datetime_string,\n\t\tJuno.Common.Util.settings.datetime_no_timezone_format, true);\n};\n\nJuno.Common.Util.validateDateString = function validateDateString(\n\tdateString, displayErrors, field, fieldDisplayName, required)\n{\n\tif(Juno.Common.Util.exists(dateString))\n\t{\n\t\tvar moment = Juno.Common.Util.getDateMoment(dateString);\n\t\tif(!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + ' is invalid');\n\t\t}\n\t}\n\telse if(required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.validateTimeString = function validateTimeString(\n\ttimeString, displayErrors, field, fieldDisplayName, required)\n{\n\tif (Juno.Common.Util.exists(timeString))\n\t{\n\t\tvar moment = Juno.Common.Util.getTimeMoment(timeString);\n\t\tif (!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n {\n\n\tvar dateOfBirth = new Date(parseInt(dobYear, 10), parseInt(dobMonth, 10), parseInt(dobDay, 10));\n\tvar currDate = new Date();\n\n\tvar years = (currDate.getFullYear() - dateOfBirth.getFullYear());\n\n\tif (currDate.getMonth() < dateOfBirth.getMonth() ||\n\t\tcurrDate.getMonth() == dateOfBirth.getMonth() && currDate.getDate() < dateOfBirth.getDate())\n\t{\n\t\tyears--;\n\t}\n\treturn years;\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nJuno.Common.Util.escapeHtml = function escapeHtml(str)\n{\n\tvar entityMap = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t'\"': '&quot;',\n\t\t\"'\": '&#39;',\n\t\t\"/\": '&#x2F;'\n\t};\n\n\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t{\n\t\treturn entityMap[s];\n\t});\n};\n\nJuno.Common.Util.formatName = function formatName(firstName, lastName)\n{\n\tif(!lastName && !firstName)\n\t{\n\t\treturn null;\n\t}\n\telse if(!firstName)\n\t{\n\t\treturn lastName;\n\t}\n\telse if(!lastName)\n\t{\n\t\treturn firstName;\n\t}\n\n\treturn lastName + ', ' + firstName;\n};\n","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {}\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}"],"sourceRoot":""}