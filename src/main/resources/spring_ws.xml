<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cxf="http://cxf.apache.org/core"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://cxf.apache.org/jaxws	http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd

	">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- interceptors -->
	<bean id="abstractLoggingInterceptor" abstract="true">
		<property name="prettyLogging" value="true" />
	</bean>
	<bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" parent="abstractLoggingInterceptor" />
	<bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" parent="abstractLoggingInterceptor" />
	<bean id="restLoggingInInterceptor" class="org.oscarehr.ws.rest.util.RestLoggingInInterceptor" parent="abstractLoggingInterceptor"/>
	<bean id="restLoggingOutInterceptor" class="org.oscarehr.ws.rest.util.RestLoggingOutInterceptor" parent="abstractLoggingInterceptor"/>

    <cxf:bus>
		<cxf:properties>
			<entry key="ws-security.ut.validator" value="org.oscarehr.ws.OscarUsernameTokenValidator" />
			<!--
			  This property needs to be set 'true' in order to give preference to JacksonJsonProvider
			  over the default Jettison provider.
			-->
			<entry key="skip.default.json.provider.registration" value="true" />
		</cxf:properties>

		<!-- logging interceptors -->
		<cxf:inInterceptors>
			<ref bean="loggingInInterceptor" />
		</cxf:inInterceptors>
		<cxf:outInterceptors>
			<!-- BORN XDS Soap Header Interceptor (Adds endpointID node to header) -->
			<bean id="bornSOAPHeaderInterceptor" class="org.oscarehr.integration.born.BornSOAPHeaderInterceptor" />
			<ref bean="loggingOutInterceptor" />
		</cxf:outInterceptors>
		
		<cxf:outFaultInterceptors>
			<ref bean="loggingOutInterceptor" />
		</cxf:outFaultInterceptors>
		<cxf:inFaultInterceptors>
			<ref bean="loggingInInterceptor" />
		</cxf:inFaultInterceptors>

    </cxf:bus>

	<!-- Managed WS Beans -->
	<!-- The WS classes are turned into spring beans to allow autowiring etc, then the endpoints reference them -->
 	<context:component-scan base-package="org.oscarehr.ws.external.soap"/>

	<bean id="authenticationInWSS4JInterceptor" class="org.oscarehr.ws.AuthenticationInWSS4JInterceptor" />
	<bean id="IPInWSS4JInterceptor" class="org.oscarehr.ws.IPInWSS4JInterceptor"/>

	<!-- web service endpoints -->
	<jaxws:endpoint implementor="#systemInfoWs" address="/SystemInfoService"/>
	<jaxws:endpoint implementor="#loginWs" address="/LoginService" />

	<jaxws:endpoint implementor="#scheduleWs" address="/ScheduleService">
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#providerWs" address="/ProviderService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#demographicWs" address="/DemographicService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

    <jaxws:endpoint implementor="#userMetricsWs" address="/UserMetricsService" >
        <jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
            <ref bean="authenticationInWSS4JInterceptor"/>
        </jaxws:inInterceptors>
    </jaxws:endpoint>

	<jaxws:endpoint implementor="#facilityWs" address="/FacilityService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#programWs" address="/ProgramService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#allergyWs" address="/AllergyService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#preventionWs" address="/PreventionService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#measurementWs" address="/MeasurementService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#documentWs" address="/DocumentService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<jaxws:endpoint implementor="#prescriptionWs" address="/PrescriptionService" >
		<jaxws:inInterceptors>
			<ref bean="IPInWSS4JInterceptor"/>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>


	<context:component-scan base-package="org.oscarehr.ws.rest"/>
	<context:component-scan base-package="org.oscarehr.ws.rest.util"/>
	<context:component-scan base-package="org.oscarehr.ws.rest.conversion"/>
	<aop:aspectj-autoproxy/>

	<!-- RESTful web service  -->
	<jaxrs:server address="/rs" id="jaxrServer">

		<jaxrs:inInterceptors>
			<bean name="authInInterceptor" class="org.oscarehr.ws.rest.util.AuthenticationInInterceptor" />
			<ref bean="restLoggingInInterceptor" />
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<ref bean="restLoggingOutInterceptor" />
		</jaxrs:outInterceptors>
		
		<jaxrs:inFaultInterceptors>
			<ref bean="restLoggingInInterceptor" />
		</jaxrs:inFaultInterceptors>
		<jaxrs:outFaultInterceptors>
			<ref bean="restLoggingOutInterceptor" />
		</jaxrs:outFaultInterceptors>
		
		<jaxrs:providers>
		    <ref bean="jaxb"/>
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
		</jaxrs:providers>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:serviceBeans>
			<bean class="org.oscarehr.ws.rest.PharmacyService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.DemographicService"  autowire="byName"/>
            <bean class="org.oscarehr.ws.rest.DemographicsService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.UserMetricsService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.ScheduleService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.DemographicMergeService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.MessagingService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.InboxService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.TicklerWebService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.ProviderService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.ProvidersService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.PatientDetailStatusService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.RSSFeedService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.PersonaService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.FormsService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.EFormService" autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.EFormsService" autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.OscarJobService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.NotesService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ProductDispensingService"  autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.RecordUxService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ReportingService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.BillingService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.StatusService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ProgramService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ConsultationWebService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.AppService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.AllergyService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.PreventionService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ReportByTemplateService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.ResourceService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.DiseaseRegistryService" autowire="byName" />
			<bean class="org.oscarehr.ws.rest.SpecialistsService" autowire="byName"/>
			<bean class="org.oscarehr.ws.rest.ReferralDoctorsService" autowire="byName"/>

		</jaxrs:serviceBeans>

		<jaxrs:extensionMappings>
			<entry key="xml" value="application/xml" />
			<entry key="json" value="application/json" />
		</jaxrs:extensionMappings>
	</jaxrs:server>

	<bean id="jaxb" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
      <property name="singleJaxbContext" value="true"/>

      <property name="extraClass">
         <list>
           <value>org.oscarehr.ws.external.soap.v1.transfer.ProviderTransfer</value>
         </list>
      </property>

	</bean>

	<jaxws:endpoint implementor="#labUploadWs" address="/LabUploadService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>
</beans>
